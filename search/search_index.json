{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"iiif-prezi3 IIIF Presentation API 3 Python Library Installation PyPi The easiest way to install the iiif-prezi3 library is directly from PyPi: pip install iiif-prezi3 Manual installation Alternatively, you can clone the repository and run setup.py locally: git clone https://github.com/iiif-prezi/iiif-prezi3.git or git clone git@github.com:iiif-prezi/iiif-prezi3.git followed by: cd iiif-prezi3 python setup.py install Basic Usage You can now import the library or individual classes from within Python and start creating your IIIF Presentation 3 objects: Directly creating a Manifest >>> from iiif_prezi3 import Manifest >>> m = Manifest(id=\"https://example.com/iiif/manifest.json\", label={\"en\":[\"Example Manifest\"]}) >>> print(m.json(indent=2)) { \"@context\": \"http://iiif.io/api/presentation/3/context.json\", \"id\": \"https://example.com/iiif/manifest.json\", \"type\": \"Manifest\", \"label\": { \"en\": [ \"Example Manifest\" ] } } Importing an existing IIIF Manifest If you have an existing IIIF Presentation v3 Manifest, you can load it via the built-in json module and create the objects: >>> from iiif_prezi3 import Manifest >>> import json >>> manifest_json = json.load(open(\"example.json\")) >>> m = Manifest(**manifest_json) >>> print(m.json(indent=2)) { \"@context\": \"http://iiif.io/api/presentation/3/context.json\", \"id\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/manifest.json\", \"type\": \"Manifest\", \"label\": { \"en\": [ \"Video Example 3\" ] }, \"items\": [ { \"id\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas\", \"type\": \"Canvas\", \"height\": 360, \"width\": 640, \"duration\": 572.034, \"items\": [ { \"id\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas/page\", \"type\": \"AnnotationPage\", \"items\": [ { \"id\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas/page/annotation\", \"type\": \"Annotation\", \"motivation\": \"painting\", \"body\": { \"id\": \"https://fixtures.iiif.io/video/indiana/lunchroom_manners/high/lunchroom_manners_1024kb.mp4\", \"type\": \"Video\", \"height\": 360, \"width\": 480, \"duration\": 572.034, \"format\": \"video/mp4\" }, \"target\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas\" } ] } ] } ] } Extensions iiif-prezi3 includes the capability to load extensions to the IIIF Presentation schema (e.g navPlace ) and modify the library's Python classes to include extra properties, validation, helper methods, etc. Published extensions from the IIIF Registry of Extensions are included with the package, and can be loaded using the iiif_prezi3.load_bundled_extensions() method. Called without argument, this method will load all bundled extensions listed in the iiif_prezi3/config/extensions.json file. If you wish to only load selected extensions from those available bundled with the library, you can pass either the path to a JSON file, or a list of extension names as an argument to the function: >>> import iiif_prezi3 >>> iiif_prezi3.load_bundled_extensions(extensions=\"/path/to/chosen_extensions.json\") >>> import iiif_prezi3 >>> iiif_prezi3.load_bundled_extensions(extensions=['example_extension']) Extensions work in much the same way as helper methods, and are monkeypatched into the relevant objects in the iiif_prezi3.skeleton class, from which everything is loaded. For a simple example, please see the extensions/example_extension.py file, and the documentation on writing a helper method . Local Development For developing iiif-prezi3 locally, clone the repo and then install it and the development dependencies using pip's \"editable mode\": git clone git@github.com:iiif-prezi/iiif-prezi3.git cd iiif-prezi3 pip install -e . [ dev ] Running Tests Tests (including linting) can be run using tox . First, install tox with pip install tox , then type tox . Versioning iiif-prezi3 broadly follows Semantic Versioning . Patch releases are used for bug fixes, minor releases add new functionality and maintain backwards compatibility, and major versions contain breaking changes to the public API of the library. Links to the changes between individual versions can be found on the releases page. Get Involved The iiif-prezi3 maintainers welcome contributions from the community - issues, pull requests, use cases, etc. We have a guideline document for contributions and a channel #iiif-prezi3 on the IIIF Slack workspace, which can be joined from the IIIF website's Get Involved page .","title":"README"},{"location":"#iiif-prezi3","text":"IIIF Presentation API 3 Python Library","title":"iiif-prezi3"},{"location":"#installation","text":"","title":"Installation"},{"location":"#pypi","text":"The easiest way to install the iiif-prezi3 library is directly from PyPi: pip install iiif-prezi3","title":"PyPi"},{"location":"#manual-installation","text":"Alternatively, you can clone the repository and run setup.py locally: git clone https://github.com/iiif-prezi/iiif-prezi3.git or git clone git@github.com:iiif-prezi/iiif-prezi3.git followed by: cd iiif-prezi3 python setup.py install","title":"Manual installation"},{"location":"#basic-usage","text":"You can now import the library or individual classes from within Python and start creating your IIIF Presentation 3 objects:","title":"Basic Usage"},{"location":"#directly-creating-a-manifest","text":">>> from iiif_prezi3 import Manifest >>> m = Manifest(id=\"https://example.com/iiif/manifest.json\", label={\"en\":[\"Example Manifest\"]}) >>> print(m.json(indent=2)) { \"@context\": \"http://iiif.io/api/presentation/3/context.json\", \"id\": \"https://example.com/iiif/manifest.json\", \"type\": \"Manifest\", \"label\": { \"en\": [ \"Example Manifest\" ] } }","title":"Directly creating a Manifest"},{"location":"#importing-an-existing-iiif-manifest","text":"If you have an existing IIIF Presentation v3 Manifest, you can load it via the built-in json module and create the objects: >>> from iiif_prezi3 import Manifest >>> import json >>> manifest_json = json.load(open(\"example.json\")) >>> m = Manifest(**manifest_json) >>> print(m.json(indent=2)) { \"@context\": \"http://iiif.io/api/presentation/3/context.json\", \"id\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/manifest.json\", \"type\": \"Manifest\", \"label\": { \"en\": [ \"Video Example 3\" ] }, \"items\": [ { \"id\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas\", \"type\": \"Canvas\", \"height\": 360, \"width\": 640, \"duration\": 572.034, \"items\": [ { \"id\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas/page\", \"type\": \"AnnotationPage\", \"items\": [ { \"id\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas/page/annotation\", \"type\": \"Annotation\", \"motivation\": \"painting\", \"body\": { \"id\": \"https://fixtures.iiif.io/video/indiana/lunchroom_manners/high/lunchroom_manners_1024kb.mp4\", \"type\": \"Video\", \"height\": 360, \"width\": 480, \"duration\": 572.034, \"format\": \"video/mp4\" }, \"target\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas\" } ] } ] } ] }","title":"Importing an existing IIIF Manifest"},{"location":"#extensions","text":"iiif-prezi3 includes the capability to load extensions to the IIIF Presentation schema (e.g navPlace ) and modify the library's Python classes to include extra properties, validation, helper methods, etc. Published extensions from the IIIF Registry of Extensions are included with the package, and can be loaded using the iiif_prezi3.load_bundled_extensions() method. Called without argument, this method will load all bundled extensions listed in the iiif_prezi3/config/extensions.json file. If you wish to only load selected extensions from those available bundled with the library, you can pass either the path to a JSON file, or a list of extension names as an argument to the function: >>> import iiif_prezi3 >>> iiif_prezi3.load_bundled_extensions(extensions=\"/path/to/chosen_extensions.json\") >>> import iiif_prezi3 >>> iiif_prezi3.load_bundled_extensions(extensions=['example_extension']) Extensions work in much the same way as helper methods, and are monkeypatched into the relevant objects in the iiif_prezi3.skeleton class, from which everything is loaded. For a simple example, please see the extensions/example_extension.py file, and the documentation on writing a helper method .","title":"Extensions"},{"location":"#local-development","text":"For developing iiif-prezi3 locally, clone the repo and then install it and the development dependencies using pip's \"editable mode\": git clone git@github.com:iiif-prezi/iiif-prezi3.git cd iiif-prezi3 pip install -e . [ dev ]","title":"Local Development"},{"location":"#running-tests","text":"Tests (including linting) can be run using tox . First, install tox with pip install tox , then type tox .","title":"Running Tests"},{"location":"#versioning","text":"iiif-prezi3 broadly follows Semantic Versioning . Patch releases are used for bug fixes, minor releases add new functionality and maintain backwards compatibility, and major versions contain breaking changes to the public API of the library. Links to the changes between individual versions can be found on the releases page.","title":"Versioning"},{"location":"#get-involved","text":"The iiif-prezi3 maintainers welcome contributions from the community - issues, pull requests, use cases, etc. We have a guideline document for contributions and a channel #iiif-prezi3 on the IIIF Slack workspace, which can be joined from the IIIF website's Get Involved page .","title":"Get Involved"},{"location":"code/","text":"Code reference","title":"Code reference"},{"location":"code/#code-reference","text":"","title":"Code reference"},{"location":"generate-schema/","text":"Generating the Schema Install the datamodl-codegen program which will convert a JSON schema into python code. Either follow the instructions here or run: pip install datamodel-code-generator Then in the iiif-prezi3 code directory run: datamodel-codegen --input ../../iiif/presentation-validator/schema/iiif_3_0.json --input-file-type jsonschema --use-default --base-class base.Base --output skeleton.py Replacing the path to your iiif schema file with where ever you have downloaded the iiif_3_0.json file.","title":"Generating the Schema"},{"location":"generate-schema/#generating-the-schema","text":"Install the datamodl-codegen program which will convert a JSON schema into python code. Either follow the instructions here or run: pip install datamodel-code-generator Then in the iiif-prezi3 code directory run: datamodel-codegen --input ../../iiif/presentation-validator/schema/iiif_3_0.json --input-file-type jsonschema --use-default --base-class base.Base --output skeleton.py Replacing the path to your iiif schema file with where ever you have downloaded the iiif_3_0.json file.","title":"Generating the Schema"},{"location":"getting-started-using-iiifprezi3-without-helpermethods/","text":"Getting started: using iiifprezi3 without helper methods Note iiif-prezi3 offers useful helper methods for adding IIIF resources, it is preferable to use them when possible. For special needs, not addressed by the helper methods, users may take advantage directly of the Python classes generated by datamodel-code-generator . These classes can be used for generating instances of IIIF objects described in the presentation API v.3. In the following lines of code, we will create a manifest and two canvases using directly the pydantic classes: import iiif_prezi3 amanifest = iiif_prezi3 . Manifest ( id = 'http://iiif.example.org/prezi/Manifest/0' , label = { 'en' : [ 'default label' ]}) acanvas = iiif_prezi3 . Canvas ( id = 'http://iiif.example.org/prezi/Manifest/0/canvas/01' , label = { 'en' : [ 'default label' ]}) asecondcanvas = iiif_prezi3 . Canvas ( id = 'http://iiif.example.org/prezi/Manifest/0/canvas/02' , label = { 'en' : [ 'second label' ]}) For constructing nested objects we have to assign to the items property a list containing the valid IIIF objects accepted by the class: amanifest . items = [ acanvas , asecondcanvas ] If we try to set the items property of the manifest items to a string pydantic will rise a ValidationError : amanifest . items = [ \"this shouldn't be here\" ] Warning Be aware that appending to the items list after that the items property has been assigned : amanifest . items . append ( \"this shouldn't be here\" ) will not raise any error regarding the input. print ( amanifest . json ( exclude_unset = True , indent = 2 )) { \"id\": \"http://iiif.example.org/prezi/Manifest/0\", \"type\": \"Manifest\", \"label\": {}, \"items\": [ { \"id\": \"http://iiif.example.org/prezi/Manifest/0/canvas/01\", \"type\": \"Canvas\", \"label\": {} }, { \"id\": \"http://iiif.example.org/prezi/Manifest/0/canvas/02\", \"type\": \"Canvas\", \"label\": {} }, \"this shouldn't be here\" ] } Of course, in most of the use cases, canvases will be created dynamically so a possible approach for constructing the manifest can be the following: canvases = [] for i in range ( 3 ): canvasid = f 'http://iiif.example.org/prezi/CanvasID/ { i } ' aservice = { \"id\" : \"https://example.org/iiif/book1/page2\" , \"type\" : \"ImageService3\" , \"profile\" : \"level2\" } anannotation = iiif_prezi3 . Annotation ( type = 'Annotation' , id = canvasid + '/annotation/0' , target = canvasid ) anannotation . motivation = 'painting' # aresource = Resource(service=[aservice],type='Resource') anannotation . body = iiif_prezi3 . ResourceItem ( service = [ aservice ], id = canvasid + '/annotation/resource' , type = 'Image' ) anannotationpage = iiif_prezi3 . AnnotationPage ( type = 'AnnotationPage' ) anannotationpage . items = [ anannotation ] acanvas . items = [ anannotationpage ] canvases . append ( acanvas ) amanifest . items = canvases Notice that the canvases list is created at the beginning but is assigned to the items property of the manifest only once at the end, in this way pydantic will validate the list. Warning Keep in mind that objects contained in the canvases list are references in the manifest items, hence any modification on the original object will affect the object inside the manifest. This holds true for any object added to the model.","title":"Using iiifprezi3 without helper methods"},{"location":"getting-started-using-iiifprezi3-without-helpermethods/#getting-started-using-iiifprezi3-without-helper-methods","text":"Note iiif-prezi3 offers useful helper methods for adding IIIF resources, it is preferable to use them when possible. For special needs, not addressed by the helper methods, users may take advantage directly of the Python classes generated by datamodel-code-generator . These classes can be used for generating instances of IIIF objects described in the presentation API v.3. In the following lines of code, we will create a manifest and two canvases using directly the pydantic classes: import iiif_prezi3 amanifest = iiif_prezi3 . Manifest ( id = 'http://iiif.example.org/prezi/Manifest/0' , label = { 'en' : [ 'default label' ]}) acanvas = iiif_prezi3 . Canvas ( id = 'http://iiif.example.org/prezi/Manifest/0/canvas/01' , label = { 'en' : [ 'default label' ]}) asecondcanvas = iiif_prezi3 . Canvas ( id = 'http://iiif.example.org/prezi/Manifest/0/canvas/02' , label = { 'en' : [ 'second label' ]}) For constructing nested objects we have to assign to the items property a list containing the valid IIIF objects accepted by the class: amanifest . items = [ acanvas , asecondcanvas ] If we try to set the items property of the manifest items to a string pydantic will rise a ValidationError : amanifest . items = [ \"this shouldn't be here\" ] Warning Be aware that appending to the items list after that the items property has been assigned : amanifest . items . append ( \"this shouldn't be here\" ) will not raise any error regarding the input. print ( amanifest . json ( exclude_unset = True , indent = 2 )) { \"id\": \"http://iiif.example.org/prezi/Manifest/0\", \"type\": \"Manifest\", \"label\": {}, \"items\": [ { \"id\": \"http://iiif.example.org/prezi/Manifest/0/canvas/01\", \"type\": \"Canvas\", \"label\": {} }, { \"id\": \"http://iiif.example.org/prezi/Manifest/0/canvas/02\", \"type\": \"Canvas\", \"label\": {} }, \"this shouldn't be here\" ] } Of course, in most of the use cases, canvases will be created dynamically so a possible approach for constructing the manifest can be the following: canvases = [] for i in range ( 3 ): canvasid = f 'http://iiif.example.org/prezi/CanvasID/ { i } ' aservice = { \"id\" : \"https://example.org/iiif/book1/page2\" , \"type\" : \"ImageService3\" , \"profile\" : \"level2\" } anannotation = iiif_prezi3 . Annotation ( type = 'Annotation' , id = canvasid + '/annotation/0' , target = canvasid ) anannotation . motivation = 'painting' # aresource = Resource(service=[aservice],type='Resource') anannotation . body = iiif_prezi3 . ResourceItem ( service = [ aservice ], id = canvasid + '/annotation/resource' , type = 'Image' ) anannotationpage = iiif_prezi3 . AnnotationPage ( type = 'AnnotationPage' ) anannotationpage . items = [ anannotation ] acanvas . items = [ anannotationpage ] canvases . append ( acanvas ) amanifest . items = canvases Notice that the canvases list is created at the beginning but is assigned to the items property of the manifest only once at the end, in this way pydantic will validate the list. Warning Keep in mind that objects contained in the canvases list are references in the manifest items, hence any modification on the original object will affect the object inside the manifest. This holds true for any object added to the model.","title":"Getting started: using iiifprezi3 without helper methods"},{"location":"write-helper-method/","text":"Helper methods Helper methods in iiif-prezi3 allow functionality for common use cases to be included in the package. Helpers that are general can be loaded and used by the user as required, and those that target specific schema objects (e.g a helper to add a Canvas to a Manifest) are monkeypatched onto the relevant schema class at load time. Location and structure Helper methods should be located in Python files inside the helpers/ directory. Direct helper methods that take schema objects as arguments can be singular functions, whereas those which are designed to add new functions or properties to existing schema classes must themselves be containing inside a class, to enable them to be monkeypatched in correctly. Accessing Schema Objects Relevant schema classes can be loaded from the skeleton.py file in the main iiif-prezi3 package by using a relative import: from ..skeleton import Manifest Monkeypatching onto Schema classes If the helper targets a class from the main IIIF Presentation 3 schema, then it can be monkeypatched onto that class at runtime using the iiif_prezi3.loader.monkeypatch_schema() method. This function takes two arguments: the class to target, and the class(es) containing the helper methods, either as a single object or a list. Add the monkeypatch function call at the end of your helper file, and it will be run when the helper file is imported by the main package (as detailed below). from ..skeleton import Manifest from ..loader import monkeypatch_schema class MyHelper : def helper_function ( self ): return \"I am a Manifest helper\" monkeypatch_schema ( Manifest , MyHelper ) Including helpers in the main package To enable a helper, import it via relative import in the helpers/__init__.py file. This will include the functions directly in the namespace of iiif_prezi3.helpers , which in turn is imported in its entirety by the __init__.py file of the main package. In helpers/__init__.py : from .example_helper import MyHelper Allowing: >>> from iiif_prezi3 import Manifest >>> m = Manifest(id=\"https://example.com/manifest\", type=\"Manifest\", label={\"en\":\"Example Manifest\"}) >>> m.helper_function() 'I am a Manifest helper'","title":"Helper methods"},{"location":"write-helper-method/#helper-methods","text":"Helper methods in iiif-prezi3 allow functionality for common use cases to be included in the package. Helpers that are general can be loaded and used by the user as required, and those that target specific schema objects (e.g a helper to add a Canvas to a Manifest) are monkeypatched onto the relevant schema class at load time.","title":"Helper methods"},{"location":"write-helper-method/#location-and-structure","text":"Helper methods should be located in Python files inside the helpers/ directory. Direct helper methods that take schema objects as arguments can be singular functions, whereas those which are designed to add new functions or properties to existing schema classes must themselves be containing inside a class, to enable them to be monkeypatched in correctly.","title":"Location and structure"},{"location":"write-helper-method/#accessing-schema-objects","text":"Relevant schema classes can be loaded from the skeleton.py file in the main iiif-prezi3 package by using a relative import: from ..skeleton import Manifest","title":"Accessing Schema Objects"},{"location":"write-helper-method/#monkeypatching-onto-schema-classes","text":"If the helper targets a class from the main IIIF Presentation 3 schema, then it can be monkeypatched onto that class at runtime using the iiif_prezi3.loader.monkeypatch_schema() method. This function takes two arguments: the class to target, and the class(es) containing the helper methods, either as a single object or a list. Add the monkeypatch function call at the end of your helper file, and it will be run when the helper file is imported by the main package (as detailed below). from ..skeleton import Manifest from ..loader import monkeypatch_schema class MyHelper : def helper_function ( self ): return \"I am a Manifest helper\" monkeypatch_schema ( Manifest , MyHelper )","title":"Monkeypatching onto Schema classes"},{"location":"write-helper-method/#including-helpers-in-the-main-package","text":"To enable a helper, import it via relative import in the helpers/__init__.py file. This will include the functions directly in the namespace of iiif_prezi3.helpers , which in turn is imported in its entirety by the __init__.py file of the main package. In helpers/__init__.py : from .example_helper import MyHelper Allowing: >>> from iiif_prezi3 import Manifest >>> m = Manifest(id=\"https://example.com/manifest\", type=\"Manifest\", label={\"en\":\"Example Manifest\"}) >>> m.helper_function() 'I am a Manifest helper'","title":"Including helpers in the main package"},{"location":"recipes/0001-mvm-image/","text":"Simplest Manifest - Single Image File Recipe: https://iiif.io/api/cookbook/recipe/0001-mvm-image/ JSON-LD: https://iiif.io/api/cookbook/recipe/0001-mvm-image/manifest.json Method 1 - Using the make_canvas and add_image helpers from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/manifest.json\" , label = \"Image 1\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/canvas/p1\" , height = 1800 , width = 1200 ) anno_page = canvas . add_image ( image_url = \"http://iiif.io/api/presentation/2.1/example/fixtures/resources/page1-full.png\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/page/p1/1\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/annotation/p0001-image\" , format = \"image/png\" , height = 1800 , width = 1200 ) print ( manifest . json ( indent = 2 )) Method 2 - Building the structure manually and using the add_item helper from iiif_prezi3 import Manifest , Canvas , AnnotationPage , Annotation , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/manifest.json\" , label = \"Image 1\" ) canvas = Canvas ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/canvas/p1\" , height = 1800 , width = 1200 ) anno_body = ResourceItem ( id = \"http://iiif.io/api/presentation/2.1/example/fixtures/resources/page1-full.png\" , type = \"Image\" , format = \"image/png\" , height = 1800 , width = 1200 ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/page/p1/1\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/annotation/p0001-image\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) manifest . add_item ( canvas ) print ( manifest . json ( indent = 2 ))","title":"Simplest Manifest - Single Image File"},{"location":"recipes/0001-mvm-image/#simplest-manifest-single-image-file","text":"","title":"Simplest Manifest - Single Image File"},{"location":"recipes/0001-mvm-image/#recipe-httpsiiifioapicookbookrecipe0001-mvm-image","text":"","title":"Recipe: https://iiif.io/api/cookbook/recipe/0001-mvm-image/"},{"location":"recipes/0001-mvm-image/#json-ld-httpsiiifioapicookbookrecipe0001-mvm-imagemanifestjson","text":"","title":"JSON-LD: https://iiif.io/api/cookbook/recipe/0001-mvm-image/manifest.json"},{"location":"recipes/0001-mvm-image/#method-1-using-the-make_canvas-and-add_image-helpers","text":"from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/manifest.json\" , label = \"Image 1\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/canvas/p1\" , height = 1800 , width = 1200 ) anno_page = canvas . add_image ( image_url = \"http://iiif.io/api/presentation/2.1/example/fixtures/resources/page1-full.png\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/page/p1/1\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/annotation/p0001-image\" , format = \"image/png\" , height = 1800 , width = 1200 ) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Using the make_canvas and add_image helpers"},{"location":"recipes/0001-mvm-image/#method-2-building-the-structure-manually-and-using-the-add_item-helper","text":"from iiif_prezi3 import Manifest , Canvas , AnnotationPage , Annotation , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/manifest.json\" , label = \"Image 1\" ) canvas = Canvas ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/canvas/p1\" , height = 1800 , width = 1200 ) anno_body = ResourceItem ( id = \"http://iiif.io/api/presentation/2.1/example/fixtures/resources/page1-full.png\" , type = \"Image\" , format = \"image/png\" , height = 1800 , width = 1200 ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/page/p1/1\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/annotation/p0001-image\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) manifest . add_item ( canvas ) print ( manifest . json ( indent = 2 ))","title":"Method 2 - Building the structure manually and using the add_item helper"},{"location":"recipes/0002-mvm-audio/","text":"Simplest Manifest - Audio Recipe: https://iiif.io/api/cookbook/recipe/0002-mvm-audio/ JSON-LD: https://iiif.io/api/cookbook/recipe/0002-mvm-audio/manifest.json Method 1 - Building the structure and using the add_item helper from iiif_prezi3 import Manifest , AnnotationPage , Annotation , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0002-mvm-audio/manifest.json\" , label = \"Simplest Audio Example\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0002-mvm-audio/canvas\" , duration = 1985.024 ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/audio/indiana/mahler-symphony-3/CD1/medium/128Kbps.mp4\" , type = \"Sound\" , format = \"audio/mp4\" , duration = 1985.024 ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0002-mvm-audio/canvas/page\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0002-mvm-audio/canvas/page/annotation\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) print ( manifest . json ( indent = 2 ))","title":"Simplest Manifest - Audio"},{"location":"recipes/0002-mvm-audio/#simplest-manifest-audio","text":"","title":"Simplest Manifest - Audio"},{"location":"recipes/0002-mvm-audio/#recipe-httpsiiifioapicookbookrecipe0002-mvm-audio","text":"","title":"Recipe: https://iiif.io/api/cookbook/recipe/0002-mvm-audio/"},{"location":"recipes/0002-mvm-audio/#json-ld-httpsiiifioapicookbookrecipe0002-mvm-audiomanifestjson","text":"","title":"JSON-LD: https://iiif.io/api/cookbook/recipe/0002-mvm-audio/manifest.json"},{"location":"recipes/0002-mvm-audio/#method-1-building-the-structure-and-using-the-add_item-helper","text":"from iiif_prezi3 import Manifest , AnnotationPage , Annotation , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0002-mvm-audio/manifest.json\" , label = \"Simplest Audio Example\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0002-mvm-audio/canvas\" , duration = 1985.024 ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/audio/indiana/mahler-symphony-3/CD1/medium/128Kbps.mp4\" , type = \"Sound\" , format = \"audio/mp4\" , duration = 1985.024 ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0002-mvm-audio/canvas/page\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0002-mvm-audio/canvas/page/annotation\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Building the structure and using the add_item helper"},{"location":"recipes/0003-mvm-video/","text":"Simplest Manifest - Video Recipe: https://iiif.io/api/cookbook/recipe/0003-mvm-video/ JSON-LD: https://iiif.io/api/cookbook/recipe/0003-mvm-video/manifest.json Method 1 - Building the structure manually and using the add_item helper from iiif_prezi3 import Manifest , AnnotationPage , Annotation , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/manifest.json\" , label = \"Video Example 3\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas\" ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/video/indiana/lunchroom_manners/high/lunchroom_manners_1024kb.mp4\" , type = \"Video\" , format = \"video/mp4\" ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas/page\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas/page/annotation\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) hwd = { \"height\" : 360 , \"width\" : 480 , \"duration\" : 572.034 } anno_body . set_hwd ( ** hwd ) canvas . set_hwd ( ** hwd ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) print ( manifest . json ( indent = 2 ))","title":"Simplest Manifest - Video"},{"location":"recipes/0003-mvm-video/#simplest-manifest-video","text":"","title":"Simplest Manifest - Video"},{"location":"recipes/0003-mvm-video/#recipe-httpsiiifioapicookbookrecipe0003-mvm-video","text":"","title":"Recipe: https://iiif.io/api/cookbook/recipe/0003-mvm-video/"},{"location":"recipes/0003-mvm-video/#json-ld-httpsiiifioapicookbookrecipe0003-mvm-videomanifestjson","text":"","title":"JSON-LD: https://iiif.io/api/cookbook/recipe/0003-mvm-video/manifest.json"},{"location":"recipes/0003-mvm-video/#method-1-building-the-structure-manually-and-using-the-add_item-helper","text":"from iiif_prezi3 import Manifest , AnnotationPage , Annotation , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/manifest.json\" , label = \"Video Example 3\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas\" ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/video/indiana/lunchroom_manners/high/lunchroom_manners_1024kb.mp4\" , type = \"Video\" , format = \"video/mp4\" ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas/page\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas/page/annotation\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) hwd = { \"height\" : 360 , \"width\" : 480 , \"duration\" : 572.034 } anno_body . set_hwd ( ** hwd ) canvas . set_hwd ( ** hwd ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Building the structure manually and using the add_item helper"},{"location":"recipes/0004-canvas-size/","text":"Image and Canvas with Differing Dimensions Recipe: https://iiif.io/api/cookbook/recipe/0004-canvas-size/ JSON-LD: https://iiif.io/api/cookbook/recipe/0004-canvas-size/manifest.json Method 1 - Using the set_hwd helper from iiif_prezi3 import Manifest , AnnotationPage , Annotation , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0004-canvas-size/manifest.json\" , label = \"Still image from an opera performance at Indiana University\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0004-canvas-size/canvas/p1\" ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/video/indiana/donizetti-elixir/act1-thumbnail.png\" , type = \"Image\" , format = \"image/png\" ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0004-canvas-size/canvas/page/p1/1\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0004-canvas-size/annotation/p0001-image\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) anno_body . set_hwd ( height = 360 , width = 640 ) canvas . set_hwd ( height = 1080 , width = 1920 ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) print ( manifest . json ( indent = 2 ))","title":"Image and Canvas with Differing Dimensions"},{"location":"recipes/0004-canvas-size/#image-and-canvas-with-differing-dimensions","text":"","title":"Image and Canvas with Differing Dimensions"},{"location":"recipes/0004-canvas-size/#recipe-httpsiiifioapicookbookrecipe0004-canvas-size","text":"","title":"Recipe: https://iiif.io/api/cookbook/recipe/0004-canvas-size/"},{"location":"recipes/0004-canvas-size/#json-ld-httpsiiifioapicookbookrecipe0004-canvas-sizemanifestjson","text":"","title":"JSON-LD: https://iiif.io/api/cookbook/recipe/0004-canvas-size/manifest.json"},{"location":"recipes/0004-canvas-size/#method-1-using-the-set_hwd-helper","text":"from iiif_prezi3 import Manifest , AnnotationPage , Annotation , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0004-canvas-size/manifest.json\" , label = \"Still image from an opera performance at Indiana University\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0004-canvas-size/canvas/p1\" ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/video/indiana/donizetti-elixir/act1-thumbnail.png\" , type = \"Image\" , format = \"image/png\" ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0004-canvas-size/canvas/page/p1/1\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0004-canvas-size/annotation/p0001-image\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) anno_body . set_hwd ( height = 360 , width = 640 ) canvas . set_hwd ( height = 1080 , width = 1920 ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Using the set_hwd helper"},{"location":"recipes/0005-image-service/","text":"Support Deep Viewing with Basic Use of a IIIF Image Service Recipe: https://iiif.io/api/cookbook/recipe/0005-image-service/ JSON-LD: https://iiif.io/api/cookbook/recipe/0005-image-service/manifest.json Method 1 - Using the make_canvas_from_iiif helper from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0005-image-service/manifest.json\" , label = \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" ) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0005-image-service/canvas/p1\" , label = \"Canvas with a single IIIF image\" ) canvas . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0005-image-service/page/p1/1\" canvas . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0005-image-service/annotation/p0001-image\" print ( manifest . json ( indent = 2 ))","title":"Support Deep Viewing with Basic Use of a IIIF Image Service"},{"location":"recipes/0005-image-service/#support-deep-viewing-with-basic-use-of-a-iiif-image-service","text":"","title":"Support Deep Viewing with Basic Use of a IIIF Image Service"},{"location":"recipes/0005-image-service/#recipe-httpsiiifioapicookbookrecipe0005-image-service","text":"","title":"Recipe: https://iiif.io/api/cookbook/recipe/0005-image-service/"},{"location":"recipes/0005-image-service/#json-ld-httpsiiifioapicookbookrecipe0005-image-servicemanifestjson","text":"","title":"JSON-LD: https://iiif.io/api/cookbook/recipe/0005-image-service/manifest.json"},{"location":"recipes/0005-image-service/#method-1-using-the-make_canvas_from_iiif-helper","text":"from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0005-image-service/manifest.json\" , label = \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" ) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0005-image-service/canvas/p1\" , label = \"Canvas with a single IIIF image\" ) canvas . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0005-image-service/page/p1/1\" canvas . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0005-image-service/annotation/p0001-image\" print ( manifest . json ( indent = 2 ))","title":"Method 1 - Using the make_canvas_from_iiif helper"},{"location":"recipes/0006-text-language/","text":"Internationalization and Multi-language Values Recipe: https://iiif.io/api/cookbook/recipe/0006-text-language/ JSON-LD: https://iiif.io/api/cookbook/recipe/0006-text-language/manifest.json Method 1 - Construct the language dictionaries during object creation from iiif_prezi3 import Manifest , KeyValueString manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0006-text-language/manifest.json\" , label = { \"en\" : [ \"Whistler's Mother\" ], \"fr\" : [ \"La M\u00e8re de Whistler\" ]}) manifest . metadata = [ KeyValueString ( label = { \"en\" : [ \"Creator\" ], \"fr\" : [ \"Auteur\" ]}, value = \"Whistler, James Abbott McNeill\" ), KeyValueString ( label = { \"en\" : [ \"Subject\" ], \"fr\" : [ \"Sujet\" ]}, value = { \"en\" : [ \"McNeill Anna Matilda, mother of Whistler (1804-1881)\" ], \"fr\" : [ \"McNeill Anna Matilda, m\u00e8re de Whistler (1804-1881)\" ]}) ] manifest . summary = { \"en\" : [ \"Arrangement in Grey and Black No. 1, also called Portrait of the Artist's Mother.\" ], \"fr\" : [ \"Arrangement en gris et noir n\u00b01, also called Portrait de la m\u00e8re de l'artiste.\" ]} manifest . requiredStatement = KeyValueString ( label = { \"en\" : [ \"Held By\" ], \"fr\" : [ \"D\u00e9tenu par\" ]}, value = \"Mus\u00e9e d'Orsay, Paris, France\" ) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/329817fc8a251a01c393f517d8a17d87-Whistlers_Mother\" , id = \"https://iiif.io/api/cookbook/recipe/0006-text-language/canvas/p1\" ) canvas . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0006-text-language/page/p1/1\" canvas . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0006-text-language/annotation/p0001-image\" print ( manifest . json ( indent = 2 ))","title":"Internationalization and Multi-language Values"},{"location":"recipes/0006-text-language/#internationalization-and-multi-language-values","text":"","title":"Internationalization and Multi-language Values"},{"location":"recipes/0006-text-language/#recipe-httpsiiifioapicookbookrecipe0006-text-language","text":"","title":"Recipe: https://iiif.io/api/cookbook/recipe/0006-text-language/"},{"location":"recipes/0006-text-language/#json-ld-httpsiiifioapicookbookrecipe0006-text-languagemanifestjson","text":"","title":"JSON-LD: https://iiif.io/api/cookbook/recipe/0006-text-language/manifest.json"},{"location":"recipes/0006-text-language/#method-1-construct-the-language-dictionaries-during-object-creation","text":"from iiif_prezi3 import Manifest , KeyValueString manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0006-text-language/manifest.json\" , label = { \"en\" : [ \"Whistler's Mother\" ], \"fr\" : [ \"La M\u00e8re de Whistler\" ]}) manifest . metadata = [ KeyValueString ( label = { \"en\" : [ \"Creator\" ], \"fr\" : [ \"Auteur\" ]}, value = \"Whistler, James Abbott McNeill\" ), KeyValueString ( label = { \"en\" : [ \"Subject\" ], \"fr\" : [ \"Sujet\" ]}, value = { \"en\" : [ \"McNeill Anna Matilda, mother of Whistler (1804-1881)\" ], \"fr\" : [ \"McNeill Anna Matilda, m\u00e8re de Whistler (1804-1881)\" ]}) ] manifest . summary = { \"en\" : [ \"Arrangement in Grey and Black No. 1, also called Portrait of the Artist's Mother.\" ], \"fr\" : [ \"Arrangement en gris et noir n\u00b01, also called Portrait de la m\u00e8re de l'artiste.\" ]} manifest . requiredStatement = KeyValueString ( label = { \"en\" : [ \"Held By\" ], \"fr\" : [ \"D\u00e9tenu par\" ]}, value = \"Mus\u00e9e d'Orsay, Paris, France\" ) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/329817fc8a251a01c393f517d8a17d87-Whistlers_Mother\" , id = \"https://iiif.io/api/cookbook/recipe/0006-text-language/canvas/p1\" ) canvas . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0006-text-language/page/p1/1\" canvas . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0006-text-language/annotation/p0001-image\" print ( manifest . json ( indent = 2 ))","title":"Method 1 - Construct the language dictionaries during object creation"},{"location":"recipes/0007-string-formats/","text":"Embedding HTML in descriptive properties Recipe: https://iiif.io/api/cookbook/recipe/0007-string-formats/ JSON-LD: https://iiif.io/api/cookbook/recipe/0007-string-formats/manifest.json Method 1 - Building the object directly and making use of the AutoLang config from iiif_prezi3 import Manifest , KeyValueString , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0007-string-formats/manifest.json\" , label = \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" , summary = \"<p>Picture taken by the <a href= \\\" https://github.com/glenrobson \\\" >IIIF Technical Coordinator</a></p>\" , rights = \"http://creativecommons.org/licenses/by-sa/3.0/\" , requiredStatement = KeyValueString ( label = \"Attribution\" , value = \"<span>Glen Robson, IIIF Technical Coordinator. <a href= \\\" https://creativecommons.org/licenses/by-sa/3.0 \\\" >CC BY-SA 3.0</a> <img src= \\\" https://licensebuttons.net/l/by-sa/3.0/88x31.png \\\" /></span>\" ), metadata = [ KeyValueString ( label = \"Author\" , value = { \"none\" : [ \"<span><a href='https://github.com/glenrobson'>Glen Robson</a></span>\" ]})]) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0007-string-formats/canvas/p1\" ) canvas . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0007-string-formats/page/p1/1\" canvas . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0007-string-formats/annotation/p0001-image\" print ( manifest . json ( indent = 2 ))","title":"Embedding HTML in descriptive properties"},{"location":"recipes/0007-string-formats/#embedding-html-in-descriptive-properties","text":"","title":"Embedding HTML in descriptive properties"},{"location":"recipes/0007-string-formats/#recipe-httpsiiifioapicookbookrecipe0007-string-formats","text":"","title":"Recipe: https://iiif.io/api/cookbook/recipe/0007-string-formats/"},{"location":"recipes/0007-string-formats/#json-ld-httpsiiifioapicookbookrecipe0007-string-formatsmanifestjson","text":"","title":"JSON-LD: https://iiif.io/api/cookbook/recipe/0007-string-formats/manifest.json"},{"location":"recipes/0007-string-formats/#method-1-building-the-object-directly-and-making-use-of-the-autolang-config","text":"from iiif_prezi3 import Manifest , KeyValueString , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0007-string-formats/manifest.json\" , label = \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" , summary = \"<p>Picture taken by the <a href= \\\" https://github.com/glenrobson \\\" >IIIF Technical Coordinator</a></p>\" , rights = \"http://creativecommons.org/licenses/by-sa/3.0/\" , requiredStatement = KeyValueString ( label = \"Attribution\" , value = \"<span>Glen Robson, IIIF Technical Coordinator. <a href= \\\" https://creativecommons.org/licenses/by-sa/3.0 \\\" >CC BY-SA 3.0</a> <img src= \\\" https://licensebuttons.net/l/by-sa/3.0/88x31.png \\\" /></span>\" ), metadata = [ KeyValueString ( label = \"Author\" , value = { \"none\" : [ \"<span><a href='https://github.com/glenrobson'>Glen Robson</a></span>\" ]})]) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0007-string-formats/canvas/p1\" ) canvas . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0007-string-formats/page/p1/1\" canvas . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0007-string-formats/annotation/p0001-image\" print ( manifest . json ( indent = 2 ))","title":"Method 1 - Building the object directly and making use of the AutoLang config"},{"location":"recipes/0008-rights/","text":"Rights statement Recipe: https://iiif.io/api/cookbook/recipe/0008-rights/ JSON-LD: https://iiif.io/api/cookbook/recipe/0008-rights/manifest.json Method 1 - Building the object directly and making use of the AutoLang config from iiif_prezi3 import Manifest , KeyValueString , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0008-rights/manifest.json\" , label = \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" , summary = \"<p>Picture taken by the <a href= \\\" https://github.com/glenrobson \\\" >IIIF Technical Coordinator</a></p>\" , rights = \"http://creativecommons.org/licenses/by-sa/3.0/\" , requiredStatement = KeyValueString ( label = \"Attribution\" , value = \"<span>Glen Robson, IIIF Technical Coordinator. <a href= \\\" https://creativecommons.org/licenses/by-sa/3.0 \\\" >CC BY-SA 3.0</a> <img src= \\\" https://licensebuttons.net/l/by-sa/3.0/88x31.png \\\" /></span>\" ), metadata = [ KeyValueString ( label = \"Author\" , value = { \"none\" : [ \"<span><a href='https://github.com/glenrobson'>Glen Robson</a></span>\" ]})]) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0008-rights/canvas/p1\" ) canvas . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0008-rights/page/p1/1\" canvas . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0008-rights/annotation/p0001-image\" print ( manifest . json ( indent = 2 ))","title":"Rights statement"},{"location":"recipes/0008-rights/#rights-statement","text":"","title":"Rights statement"},{"location":"recipes/0008-rights/#recipe-httpsiiifioapicookbookrecipe0008-rights","text":"","title":"Recipe: https://iiif.io/api/cookbook/recipe/0008-rights/"},{"location":"recipes/0008-rights/#json-ld-httpsiiifioapicookbookrecipe0008-rightsmanifestjson","text":"","title":"JSON-LD: https://iiif.io/api/cookbook/recipe/0008-rights/manifest.json"},{"location":"recipes/0008-rights/#method-1-building-the-object-directly-and-making-use-of-the-autolang-config","text":"from iiif_prezi3 import Manifest , KeyValueString , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0008-rights/manifest.json\" , label = \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" , summary = \"<p>Picture taken by the <a href= \\\" https://github.com/glenrobson \\\" >IIIF Technical Coordinator</a></p>\" , rights = \"http://creativecommons.org/licenses/by-sa/3.0/\" , requiredStatement = KeyValueString ( label = \"Attribution\" , value = \"<span>Glen Robson, IIIF Technical Coordinator. <a href= \\\" https://creativecommons.org/licenses/by-sa/3.0 \\\" >CC BY-SA 3.0</a> <img src= \\\" https://licensebuttons.net/l/by-sa/3.0/88x31.png \\\" /></span>\" ), metadata = [ KeyValueString ( label = \"Author\" , value = { \"none\" : [ \"<span><a href='https://github.com/glenrobson'>Glen Robson</a></span>\" ]})]) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0008-rights/canvas/p1\" ) canvas . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0008-rights/page/p1/1\" canvas . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0008-rights/annotation/p0001-image\" print ( manifest . json ( indent = 2 ))","title":"Method 1 - Building the object directly and making use of the AutoLang config"},{"location":"recipes/0009-book-1/","text":"Simple Manifest - Book Recipe: https://iiif.io/api/cookbook/recipe/0009-book-1/ JSON-LD: https://iiif.io/api/cookbook/recipe/0009-book-1/manifest.json Method 1 - Setting the behavior property during object construction from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/manifest.json\" , label = \"Simple Manifest - Book\" , behavior = [ \"paged\" ]) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f18\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p1\" , label = \"Blank page\" ) canvas1 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p1/1\" canvas1 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0001-image\" canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f19\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p2\" , label = \"Frontispiece\" ) canvas2 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p2/1\" canvas2 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0002-image\" canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f20\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p3\" , label = \"Title page\" ) canvas3 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p3/1\" canvas3 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0003-image\" canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f21\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p4\" , label = \"Blank page\" ) canvas4 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p4/1\" canvas4 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0004-image\" canvas5 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f22\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p5\" , label = \"Bookplate\" ) canvas5 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p5/1\" canvas5 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0005-image\" print ( manifest . json ( indent = 2 ))","title":"Simple Manifest - Book"},{"location":"recipes/0009-book-1/#simple-manifest-book","text":"","title":"Simple Manifest - Book"},{"location":"recipes/0009-book-1/#recipe-httpsiiifioapicookbookrecipe0009-book-1","text":"","title":"Recipe: https://iiif.io/api/cookbook/recipe/0009-book-1/"},{"location":"recipes/0009-book-1/#json-ld-httpsiiifioapicookbookrecipe0009-book-1manifestjson","text":"","title":"JSON-LD: https://iiif.io/api/cookbook/recipe/0009-book-1/manifest.json"},{"location":"recipes/0009-book-1/#method-1-setting-the-behavior-property-during-object-construction","text":"from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/manifest.json\" , label = \"Simple Manifest - Book\" , behavior = [ \"paged\" ]) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f18\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p1\" , label = \"Blank page\" ) canvas1 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p1/1\" canvas1 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0001-image\" canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f19\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p2\" , label = \"Frontispiece\" ) canvas2 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p2/1\" canvas2 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0002-image\" canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f20\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p3\" , label = \"Title page\" ) canvas3 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p3/1\" canvas3 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0003-image\" canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f21\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p4\" , label = \"Blank page\" ) canvas4 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p4/1\" canvas4 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0004-image\" canvas5 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f22\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p5\" , label = \"Bookplate\" ) canvas5 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p5/1\" canvas5 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0005-image\" print ( manifest . json ( indent = 2 ))","title":"Method 1 - Setting the behavior property during object construction"},{"location":"recipes/0010-book-2-viewing-direction/","text":"Viewing direction and Its Effect on Navigation Recipe: https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/ JSON-LD Example 1: https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/manifest-rtl.json JSON-LD Example 2: https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/manifest-ttb.json Method 1 - Setting the viewingDirection property during object construction Example 1 from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/manifest-rtl.json\" , label = \"Book with Right-to-Left Viewing Direction\" , summary = \"Playbill for \\\" Akiba gongen kaisen-banashi, \\\" \\\" Futatsu ch\u014dch\u014d kuruwa nikki \\\" and \\\" Godairiki koi no f\u016bjime \\\" performed at the Chikugo Theater in Osaka from the fifth month of Kaei 2 (May, 1849); main actors: Gad\u014d Kataoka II, Ebiz\u014d Ichikawa VI, Kit\u014d Sawamura II, Daigor\u014d Mimasu IV and Karoku Nakamura I; on front cover: producer Mominosuke Ichikawa's crest.\" , viewingDirection = \"right-to-left\" ) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_001\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p1\" , label = \"front cover\" ) canvas1 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p1/1\" canvas1 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0001-image\" canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_002\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p2\" , label = \"pages 1-2\" ) canvas2 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p2/1\" canvas2 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0002-image\" canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_003\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p3\" , label = \"pages 3-4\" ) canvas3 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p3/1\" canvas3 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0003-image\" canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_004\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p4\" , label = \"pages 5-6\" ) canvas4 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p4/1\" canvas4 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0004-image\" canvas5 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_005\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p5\" , label = \"back cover\" ) canvas5 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p5/1\" canvas5 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0005-image\" print ( manifest . json ( indent = 2 )) Example 2 from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/manifest-ttb.json\" , label = \"Diary with Top-to-Bottom Viewing Direction\" , summary = \"William Lewis Sachtleben was an American long-distance cyclist who rode across Asia from Istanbul to Peking in 1891 to 1892 with Thomas Gaskell Allen Jr., his classmate from Washington University. This was part of a longer journey that began the day after they had graduated from college, when they travelled to New York and on to Liverpool; in all they travelled 15,044 miles by bicycle, 'the longest continuous land journey ever made around the world' as reported in their book <cite>Across Asia on a bicycle</cite> (1895). Sachtleben documented his travels with photographs and diaries, the latter of which he numbered sequentially. The diary of notebook 'No. 10' covers a portion of their journey through the Armenian area of Turkey from April 12 to May 9 (there is a 2-page reading list at the end). During this time they rode from Ankara (Angora in the diary) to Sivas, where they stayed for ten days while Allen had a bout of typhoid fever, and the first half of a ten-day excursion to Merzifon (Mersovan in the diary), taken by Sachtleben to give Allen additional time to recover.\" , viewingDirection = \"top-to-bottom\" ) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/9ee11092dfd2782634f5e8e2c87c16d5-uclamss_1841_diary_07_02\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/v1\" , label = \"image 1\" ) canvas1 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/v1/1\" canvas1 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/v0001-image\" canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/9ee11092dfd2782634f5e8e2c87c16d5-uclamss_1841_diary_07_03\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/v2\" , label = \"image 2\" ) canvas2 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/v2/1\" canvas2 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/v0002-image\" canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/9ee11092dfd2782634f5e8e2c87c16d5-uclamss_1841_diary_07_04\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/v3\" , label = \"image 3\" ) canvas3 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/v3/1\" canvas3 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/v0003-image\" canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/9ee11092dfd2782634f5e8e2c87c16d5-uclamss_1841_diary_07_05\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/v4\" , label = \"image 4\" ) canvas4 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/v4/1\" canvas4 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/v0004-image\" print ( manifest . json ( indent = 2 ))","title":"Viewing direction and Its Effect on Navigation"},{"location":"recipes/0010-book-2-viewing-direction/#viewing-direction-and-its-effect-on-navigation","text":"","title":"Viewing direction and Its Effect on Navigation"},{"location":"recipes/0010-book-2-viewing-direction/#recipe-httpsiiifioapicookbookrecipe0010-book-2-viewing-direction","text":"","title":"Recipe: https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/"},{"location":"recipes/0010-book-2-viewing-direction/#json-ld-example-1-httpsiiifioapicookbookrecipe0010-book-2-viewing-directionmanifest-rtljson","text":"","title":"JSON-LD Example 1: https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/manifest-rtl.json"},{"location":"recipes/0010-book-2-viewing-direction/#json-ld-example-2-httpsiiifioapicookbookrecipe0010-book-2-viewing-directionmanifest-ttbjson","text":"","title":"JSON-LD Example 2: https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/manifest-ttb.json"},{"location":"recipes/0010-book-2-viewing-direction/#method-1-setting-the-viewingdirection-property-during-object-construction","text":"","title":"Method 1 - Setting the viewingDirection property during object construction"},{"location":"recipes/0010-book-2-viewing-direction/#example-1","text":"from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/manifest-rtl.json\" , label = \"Book with Right-to-Left Viewing Direction\" , summary = \"Playbill for \\\" Akiba gongen kaisen-banashi, \\\" \\\" Futatsu ch\u014dch\u014d kuruwa nikki \\\" and \\\" Godairiki koi no f\u016bjime \\\" performed at the Chikugo Theater in Osaka from the fifth month of Kaei 2 (May, 1849); main actors: Gad\u014d Kataoka II, Ebiz\u014d Ichikawa VI, Kit\u014d Sawamura II, Daigor\u014d Mimasu IV and Karoku Nakamura I; on front cover: producer Mominosuke Ichikawa's crest.\" , viewingDirection = \"right-to-left\" ) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_001\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p1\" , label = \"front cover\" ) canvas1 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p1/1\" canvas1 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0001-image\" canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_002\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p2\" , label = \"pages 1-2\" ) canvas2 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p2/1\" canvas2 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0002-image\" canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_003\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p3\" , label = \"pages 3-4\" ) canvas3 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p3/1\" canvas3 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0003-image\" canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_004\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p4\" , label = \"pages 5-6\" ) canvas4 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p4/1\" canvas4 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0004-image\" canvas5 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_005\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p5\" , label = \"back cover\" ) canvas5 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p5/1\" canvas5 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0005-image\" print ( manifest . json ( indent = 2 ))","title":"Example 1"},{"location":"recipes/0010-book-2-viewing-direction/#example-2","text":"from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/manifest-ttb.json\" , label = \"Diary with Top-to-Bottom Viewing Direction\" , summary = \"William Lewis Sachtleben was an American long-distance cyclist who rode across Asia from Istanbul to Peking in 1891 to 1892 with Thomas Gaskell Allen Jr., his classmate from Washington University. This was part of a longer journey that began the day after they had graduated from college, when they travelled to New York and on to Liverpool; in all they travelled 15,044 miles by bicycle, 'the longest continuous land journey ever made around the world' as reported in their book <cite>Across Asia on a bicycle</cite> (1895). Sachtleben documented his travels with photographs and diaries, the latter of which he numbered sequentially. The diary of notebook 'No. 10' covers a portion of their journey through the Armenian area of Turkey from April 12 to May 9 (there is a 2-page reading list at the end). During this time they rode from Ankara (Angora in the diary) to Sivas, where they stayed for ten days while Allen had a bout of typhoid fever, and the first half of a ten-day excursion to Merzifon (Mersovan in the diary), taken by Sachtleben to give Allen additional time to recover.\" , viewingDirection = \"top-to-bottom\" ) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/9ee11092dfd2782634f5e8e2c87c16d5-uclamss_1841_diary_07_02\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/v1\" , label = \"image 1\" ) canvas1 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/v1/1\" canvas1 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/v0001-image\" canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/9ee11092dfd2782634f5e8e2c87c16d5-uclamss_1841_diary_07_03\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/v2\" , label = \"image 2\" ) canvas2 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/v2/1\" canvas2 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/v0002-image\" canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/9ee11092dfd2782634f5e8e2c87c16d5-uclamss_1841_diary_07_04\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/v3\" , label = \"image 3\" ) canvas3 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/v3/1\" canvas3 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/v0003-image\" canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/9ee11092dfd2782634f5e8e2c87c16d5-uclamss_1841_diary_07_05\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/v4\" , label = \"image 4\" ) canvas4 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/v4/1\" canvas4 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/v0004-image\" print ( manifest . json ( indent = 2 ))","title":"Example 2"},{"location":"recipes/0011-book-3-behavior/","text":"Book 'behavior' Variations (continuous, individuals) Recipe: https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/ JSON-LD Use Case 1: https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/manifest-continuous.json JSON-LD Use Case 2: https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/manifest-individuals.json Method 1 - Setting the behaviour property during object construction Use Case 1 from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/manifest-continuous.json\" , label = { \"gez\" : [ \"Ms. 21 M\u0101zemur\u0101 D\u0101wit, Asmat [\u1218\u12dd\u1219\u1228 \u12f3\u12ca\u1275]\" ]}, behaviour = [ \"continuous\" ]) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/8c169124171e6b2253b698a22a938f07-21198-zz001hbmd9_1300412_master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/s1\" , label = \"Section 1 [Recto]\" ) canvas1 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/s1/1\" canvas1 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/s0001-image\" canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/8c169124171e6b2253b698a22a938f07-21198-zz001hbmft_1300418_master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/s2\" , label = \"Section 2 [Recto]\" ) canvas2 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/s2/1\" canvas2 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/s0002-image\" canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/8c169124171e6b2253b698a22a938f07-21198-zz001hbmgb_1300426_master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/s3\" , label = \"Section 3 [Recto]\" ) canvas3 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/s3/1\" canvas3 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/s0003-image\" canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/8c169124171e6b2253b698a22a938f07-21198-zz001hbmhv_1300436_master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/s4\" , label = \"Section 4 [Recto]\" ) canvas4 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/s4/1\" canvas4 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/s0004-image\" print ( manifest . json ( indent = 2 )) Use Case 2 from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/manifest-individuals.json\" , label = { \"ca\" : [ \"[Conoximent de las orines] Ihesus, Ihesus. En nom de Deu et dela beneyeta sa mare e de tots los angels i archangels e de tots los sants e santes de paradis yo micer Johannes comense aquest libre de reseptes en l\u2019ayn Mi 466.\" ]}, behaviour = [ \"individuals\" ]) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/85a96c630f077e6ac6cb984f1b752bbf-0-21198-zz00022840-1-master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/v1\" , label = \"inside cover; 1r\" ) canvas1 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/v1/1\" canvas1 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/v0001-image\" canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/85a96c630f077e6ac6cb984f1b752bbf-1-21198-zz00022882-1-master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/v2\" , label = \"2v, 3r\" ) canvas2 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/v2/1\" canvas2 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/v0002-image\" canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/85a96c630f077e6ac6cb984f1b752bbf-2-21198-zz000228b3-1-master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/v3\" , label = \"3v, 4r\" ) canvas3 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/v3/1\" canvas3 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/v0003-image\" canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/85a96c630f077e6ac6cb984f1b752bbf-3-21198-zz000228d4-1-master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/v4\" , label = \"4v, 5r\" ) canvas4 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/v4/1\" canvas4 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/v0004-image\" print ( manifest . json ( indent = 2 ))","title":"Book 'behavior' Variations (continuous, individuals)"},{"location":"recipes/0011-book-3-behavior/#book-behavior-variations-continuous-individuals","text":"","title":"Book 'behavior' Variations (continuous, individuals)"},{"location":"recipes/0011-book-3-behavior/#recipe-httpsiiifioapicookbookrecipe0011-book-3-behavior","text":"","title":"Recipe: https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/"},{"location":"recipes/0011-book-3-behavior/#json-ld-use-case-1-httpsiiifioapicookbookrecipe0011-book-3-behaviormanifest-continuousjson","text":"","title":"JSON-LD Use Case 1: https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/manifest-continuous.json"},{"location":"recipes/0011-book-3-behavior/#json-ld-use-case-2-httpsiiifioapicookbookrecipe0011-book-3-behaviormanifest-individualsjson","text":"","title":"JSON-LD Use Case 2: https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/manifest-individuals.json"},{"location":"recipes/0011-book-3-behavior/#method-1-setting-the-behaviour-property-during-object-construction","text":"","title":"Method 1 - Setting the behaviour property during object construction"},{"location":"recipes/0011-book-3-behavior/#use-case-1","text":"from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/manifest-continuous.json\" , label = { \"gez\" : [ \"Ms. 21 M\u0101zemur\u0101 D\u0101wit, Asmat [\u1218\u12dd\u1219\u1228 \u12f3\u12ca\u1275]\" ]}, behaviour = [ \"continuous\" ]) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/8c169124171e6b2253b698a22a938f07-21198-zz001hbmd9_1300412_master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/s1\" , label = \"Section 1 [Recto]\" ) canvas1 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/s1/1\" canvas1 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/s0001-image\" canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/8c169124171e6b2253b698a22a938f07-21198-zz001hbmft_1300418_master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/s2\" , label = \"Section 2 [Recto]\" ) canvas2 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/s2/1\" canvas2 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/s0002-image\" canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/8c169124171e6b2253b698a22a938f07-21198-zz001hbmgb_1300426_master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/s3\" , label = \"Section 3 [Recto]\" ) canvas3 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/s3/1\" canvas3 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/s0003-image\" canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/8c169124171e6b2253b698a22a938f07-21198-zz001hbmhv_1300436_master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/s4\" , label = \"Section 4 [Recto]\" ) canvas4 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/s4/1\" canvas4 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/s0004-image\" print ( manifest . json ( indent = 2 ))","title":"Use Case 1"},{"location":"recipes/0011-book-3-behavior/#use-case-2","text":"from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/manifest-individuals.json\" , label = { \"ca\" : [ \"[Conoximent de las orines] Ihesus, Ihesus. En nom de Deu et dela beneyeta sa mare e de tots los angels i archangels e de tots los sants e santes de paradis yo micer Johannes comense aquest libre de reseptes en l\u2019ayn Mi 466.\" ]}, behaviour = [ \"individuals\" ]) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/85a96c630f077e6ac6cb984f1b752bbf-0-21198-zz00022840-1-master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/v1\" , label = \"inside cover; 1r\" ) canvas1 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/v1/1\" canvas1 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/v0001-image\" canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/85a96c630f077e6ac6cb984f1b752bbf-1-21198-zz00022882-1-master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/v2\" , label = \"2v, 3r\" ) canvas2 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/v2/1\" canvas2 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/v0002-image\" canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/85a96c630f077e6ac6cb984f1b752bbf-2-21198-zz000228b3-1-master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/v3\" , label = \"3v, 4r\" ) canvas3 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/v3/1\" canvas3 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/v0003-image\" canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/85a96c630f077e6ac6cb984f1b752bbf-3-21198-zz000228d4-1-master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/v4\" , label = \"4v, 5r\" ) canvas4 . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/v4/1\" canvas4 . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/v0004-image\" print ( manifest . json ( indent = 2 ))","title":"Use Case 2"},{"location":"recipes/0015-start/","text":"Begin playback at a specific point - Time-based media Recipe: https://iiif.io/api/cookbook/recipe/0015-start/ JSON-LD: https://iiif.io/api/cookbook/recipe/0015-start/manifest.json Method 1 - Building the start structure using the SpecificResource class from iiif_prezi3 import Manifest , KeyValueString , ResourceItem , AnnotationPage , Annotation , SpecificResource , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/manifest.json\" , label = \"Video of a 30-minute digital clock\" , rights = \"http://creativecommons.org/licenses/by/3.0/\" , requiredStatement = KeyValueString ( label = \"Attribution\" , value = \"<span>The video was created by <a href='https://www.youtube.com/watch?v=Lsq0FiXjGHg'>DrLex1</a> and was released using a <a href='https://creativecommons.org/licenses/by/3.0/'>Creative Commons Attribution license</a></span>\" ) ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/canvas/segment1\" , duration = 1801.055 ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/video/indiana/30-minute-clock/medium/30-minute-clock.mp4\" , type = \"Video\" , format = \"video/mp4\" , duration = 1801.055 ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/annotation/segment1/page\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/annotation/segment1-video\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) manifest . start = SpecificResource ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/canvas-start/segment1\" , source = canvas . id , selector = { \"type\" : \"PointSelector\" , \"t\" : 120.5 }) print ( manifest . json ( indent = 2 ))","title":"Begin playback at a specific point - Time-based media"},{"location":"recipes/0015-start/#begin-playback-at-a-specific-point-time-based-media","text":"","title":"Begin playback at a specific point - Time-based media"},{"location":"recipes/0015-start/#recipe-httpsiiifioapicookbookrecipe0015-start","text":"","title":"Recipe: https://iiif.io/api/cookbook/recipe/0015-start/"},{"location":"recipes/0015-start/#json-ld-httpsiiifioapicookbookrecipe0015-startmanifestjson","text":"","title":"JSON-LD: https://iiif.io/api/cookbook/recipe/0015-start/manifest.json"},{"location":"recipes/0015-start/#method-1-building-the-start-structure-using-the-specificresource-class","text":"from iiif_prezi3 import Manifest , KeyValueString , ResourceItem , AnnotationPage , Annotation , SpecificResource , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/manifest.json\" , label = \"Video of a 30-minute digital clock\" , rights = \"http://creativecommons.org/licenses/by/3.0/\" , requiredStatement = KeyValueString ( label = \"Attribution\" , value = \"<span>The video was created by <a href='https://www.youtube.com/watch?v=Lsq0FiXjGHg'>DrLex1</a> and was released using a <a href='https://creativecommons.org/licenses/by/3.0/'>Creative Commons Attribution license</a></span>\" ) ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/canvas/segment1\" , duration = 1801.055 ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/video/indiana/30-minute-clock/medium/30-minute-clock.mp4\" , type = \"Video\" , format = \"video/mp4\" , duration = 1801.055 ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/annotation/segment1/page\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/annotation/segment1-video\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) manifest . start = SpecificResource ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/canvas-start/segment1\" , source = canvas . id , selector = { \"type\" : \"PointSelector\" , \"t\" : 120.5 }) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Building the start structure using the SpecificResource class"},{"location":"recipes/0019-html-in-annotations/","text":"HTML in Annotations Recipe: https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/ JSON-LD: https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/manifest.json Method 1 - Construct an Annotation using the make_annotation helper and a dictionary of the body properties from iiif_prezi3 import Manifest manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/manifest.json\" , label = { \"en\" : [ \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" ]}) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1\" ) canvas . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1/annopage-1\" canvas . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1/annopage-1/anno-1\" anno = canvas . make_annotation ( id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1/annopage-2/anno-1\" , motivation = \"commenting\" , body = { \"type\" : \"TextualBody\" , \"language\" : \"de\" , \"format\" : \"text/html\" , \"value\" : \"<p>G\u00f6ttinger Marktplatz mit <a href='https://de.wikipedia.org/wiki/G%C3%A4nseliesel-Brunnen_(G%C3%B6ttingen)'>G\u00e4nseliesel Brunnen <img src='https://en.wikipedia.org/static/images/project-logos/enwiki.png' alt='Wikipedia logo'></a></p>\" }, target = canvas . id ) canvas . annotations [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1/annopage-2\" print ( manifest . json ( indent = 2 ))","title":"HTML in Annotations"},{"location":"recipes/0019-html-in-annotations/#html-in-annotations","text":"","title":"HTML in Annotations"},{"location":"recipes/0019-html-in-annotations/#recipe-httpsiiifioapicookbookrecipe0019-html-in-annotations","text":"","title":"Recipe: https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/"},{"location":"recipes/0019-html-in-annotations/#json-ld-httpsiiifioapicookbookrecipe0019-html-in-annotationsmanifestjson","text":"","title":"JSON-LD: https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/manifest.json"},{"location":"recipes/0019-html-in-annotations/#method-1-construct-an-annotation-using-the-make_annotation-helper-and-a-dictionary-of-the-body-properties","text":"from iiif_prezi3 import Manifest manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/manifest.json\" , label = { \"en\" : [ \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" ]}) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1\" ) canvas . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1/annopage-1\" canvas . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1/annopage-1/anno-1\" anno = canvas . make_annotation ( id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1/annopage-2/anno-1\" , motivation = \"commenting\" , body = { \"type\" : \"TextualBody\" , \"language\" : \"de\" , \"format\" : \"text/html\" , \"value\" : \"<p>G\u00f6ttinger Marktplatz mit <a href='https://de.wikipedia.org/wiki/G%C3%A4nseliesel-Brunnen_(G%C3%B6ttingen)'>G\u00e4nseliesel Brunnen <img src='https://en.wikipedia.org/static/images/project-logos/enwiki.png' alt='Wikipedia logo'></a></p>\" }, target = canvas . id ) canvas . annotations [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1/annopage-2\" print ( manifest . json ( indent = 2 ))","title":"Method 1 - Construct an Annotation using the make_annotation helper and a dictionary of the body properties"},{"location":"recipes/0021-tagging/","text":"Simple Annotation \u2014 Tagging Recipe: https://iiif.io/api/cookbook/recipe/0021-tagging/ JSON-LD: https://iiif.io/api/cookbook/recipe/0021-tagging/manifest.json Method 1 - Construct an Annotation using the make_annotation helper and a dictionary of the body properties from iiif_prezi3 import Manifest manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/manifest.json\" , label = { \"en\" : [ \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" ]}) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/canvas/p1\" ) canvas . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/page/p1/1\" canvas . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/annotation/p0001-image\" anno = canvas . make_annotation ( id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/annotation/p0002-ta\" , motivation = \"tagging\" , body = { \"type\" : \"TextualBody\" , \"language\" : \"de\" , \"format\" : \"text/plain\" , \"value\" : \"G\u00e4nseliesel-Brunnen\" }, target = canvas . id + \"#xywh=265,661,1260,1239\" ) canvas . annotations [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/page/p2/1\" print ( manifest . json ( indent = 2 ))","title":"Simple Annotation \u2014 Tagging"},{"location":"recipes/0021-tagging/#simple-annotation-tagging","text":"","title":"Simple Annotation \u2014 Tagging"},{"location":"recipes/0021-tagging/#recipe-httpsiiifioapicookbookrecipe0021-tagging","text":"","title":"Recipe: https://iiif.io/api/cookbook/recipe/0021-tagging/"},{"location":"recipes/0021-tagging/#json-ld-httpsiiifioapicookbookrecipe0021-taggingmanifestjson","text":"","title":"JSON-LD: https://iiif.io/api/cookbook/recipe/0021-tagging/manifest.json"},{"location":"recipes/0021-tagging/#method-1-construct-an-annotation-using-the-make_annotation-helper-and-a-dictionary-of-the-body-properties","text":"from iiif_prezi3 import Manifest manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/manifest.json\" , label = { \"en\" : [ \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" ]}) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/canvas/p1\" ) canvas . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/page/p1/1\" canvas . items [ 0 ] . items [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/annotation/p0001-image\" anno = canvas . make_annotation ( id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/annotation/p0002-ta\" , motivation = \"tagging\" , body = { \"type\" : \"TextualBody\" , \"language\" : \"de\" , \"format\" : \"text/plain\" , \"value\" : \"G\u00e4nseliesel-Brunnen\" }, target = canvas . id + \"#xywh=265,661,1260,1239\" ) canvas . annotations [ 0 ] . id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/page/p2/1\" print ( manifest . json ( indent = 2 ))","title":"Method 1 - Construct an Annotation using the make_annotation helper and a dictionary of the body properties"}]}
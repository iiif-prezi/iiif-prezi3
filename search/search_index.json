{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"iiif-prezi3 IIIF Presentation API 3 Python Library Installation PyPI The easiest way to install the iiif-prezi3 library is directly from PyPI: pip install iiif-prezi3 Manual installation Alternatively, you can clone the repository and run setup.py locally: git clone https://github.com/iiif-prezi/iiif-prezi3.git or git clone git@github.com:iiif-prezi/iiif-prezi3.git followed by: cd iiif-prezi3 python setup.py install Basic Usage You can now import the library or individual classes from within Python and start creating your IIIF Presentation 3 objects: Directly creating a Manifest >>> from iiif_prezi3 import Manifest >>> m = Manifest(id=\"https://example.com/iiif/manifest.json\", label={\"en\":[\"Example Manifest\"]}) >>> print(m.json(indent=2)) { \"@context\": \"http://iiif.io/api/presentation/3/context.json\", \"id\": \"https://example.com/iiif/manifest.json\", \"type\": \"Manifest\", \"label\": { \"en\": [ \"Example Manifest\" ] } } Importing an existing IIIF Manifest If you have an existing IIIF Presentation v3 Manifest, you can load it via the built-in json module and create the objects: >>> from iiif_prezi3 import Manifest >>> import json >>> manifest_json = json.load(open(\"example.json\")) >>> m = Manifest(**manifest_json) >>> print(m.json(indent=2)) { \"@context\": \"http://iiif.io/api/presentation/3/context.json\", \"id\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/manifest.json\", \"type\": \"Manifest\", \"label\": { \"en\": [ \"Video Example 3\" ] }, \"items\": [ { \"id\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas\", \"type\": \"Canvas\", \"height\": 360, \"width\": 640, \"duration\": 572.034, \"items\": [ { \"id\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas/page\", \"type\": \"AnnotationPage\", \"items\": [ { \"id\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas/page/annotation\", \"type\": \"Annotation\", \"motivation\": \"painting\", \"body\": { \"id\": \"https://fixtures.iiif.io/video/indiana/lunchroom_manners/high/lunchroom_manners_1024kb.mp4\", \"type\": \"Video\", \"height\": 360, \"width\": 480, \"duration\": 572.034, \"format\": \"video/mp4\" }, \"target\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas\" } ] } ] } ] } Extensions iiif-prezi3 includes the capability to load extensions to the IIIF Presentation schema (e.g navPlace ) and modify the library's Python classes to include extra properties, validation, helper methods, etc. Published extensions from the IIIF Registry of Extensions are included with the package, and can be loaded using the iiif_prezi3.load_bundled_extensions() method. Called without argument, this method will load all bundled extensions listed in the iiif_prezi3/config/extensions.json file. If you wish to only load selected extensions from those available bundled with the library, you can pass either the path to a JSON file, or a list of extension names as an argument to the function: >>> import iiif_prezi3 >>> iiif_prezi3.load_bundled_extensions(extensions=\"/path/to/chosen_extensions.json\") >>> import iiif_prezi3 >>> iiif_prezi3.load_bundled_extensions(extensions=['example_extension']) Extensions work in much the same way as helper methods, and are monkeypatched into the relevant objects in the iiif_prezi3.skeleton class, from which everything is loaded. For a simple example, please see the extensions/example_extension.py file, and the documentation on writing a helper method . Local Development For developing iiif-prezi3 locally, clone the repo and then install it and the development dependencies using pip's \"editable mode\": git clone git@github.com:iiif-prezi/iiif-prezi3.git cd iiif-prezi3 pip install -e . [ dev ] Running Tests Tests (including linting) can be run using tox . First, install tox with pip install tox , then type tox . Versioning iiif-prezi3 broadly follows Semantic Versioning . Patch releases are used for bug fixes, minor releases add new functionality and maintain backwards compatibility, and major versions contain breaking changes to the public API of the library. Links to the changes between individual versions can be found on the releases page. Get Involved The iiif-prezi3 maintainers welcome contributions from the community - issues, pull requests, use cases, etc. We have a guideline document for contributions and a channel #iiif-prezi3 on the IIIF Slack workspace, which can be joined from the IIIF website's Get Involved page .","title":"README"},{"location":"#iiif-prezi3","text":"IIIF Presentation API 3 Python Library","title":"iiif-prezi3"},{"location":"#installation","text":"","title":"Installation"},{"location":"#pypi","text":"The easiest way to install the iiif-prezi3 library is directly from PyPI: pip install iiif-prezi3","title":"PyPI"},{"location":"#manual-installation","text":"Alternatively, you can clone the repository and run setup.py locally: git clone https://github.com/iiif-prezi/iiif-prezi3.git or git clone git@github.com:iiif-prezi/iiif-prezi3.git followed by: cd iiif-prezi3 python setup.py install","title":"Manual installation"},{"location":"#basic-usage","text":"You can now import the library or individual classes from within Python and start creating your IIIF Presentation 3 objects:","title":"Basic Usage"},{"location":"#directly-creating-a-manifest","text":">>> from iiif_prezi3 import Manifest >>> m = Manifest(id=\"https://example.com/iiif/manifest.json\", label={\"en\":[\"Example Manifest\"]}) >>> print(m.json(indent=2)) { \"@context\": \"http://iiif.io/api/presentation/3/context.json\", \"id\": \"https://example.com/iiif/manifest.json\", \"type\": \"Manifest\", \"label\": { \"en\": [ \"Example Manifest\" ] } }","title":"Directly creating a Manifest"},{"location":"#importing-an-existing-iiif-manifest","text":"If you have an existing IIIF Presentation v3 Manifest, you can load it via the built-in json module and create the objects: >>> from iiif_prezi3 import Manifest >>> import json >>> manifest_json = json.load(open(\"example.json\")) >>> m = Manifest(**manifest_json) >>> print(m.json(indent=2)) { \"@context\": \"http://iiif.io/api/presentation/3/context.json\", \"id\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/manifest.json\", \"type\": \"Manifest\", \"label\": { \"en\": [ \"Video Example 3\" ] }, \"items\": [ { \"id\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas\", \"type\": \"Canvas\", \"height\": 360, \"width\": 640, \"duration\": 572.034, \"items\": [ { \"id\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas/page\", \"type\": \"AnnotationPage\", \"items\": [ { \"id\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas/page/annotation\", \"type\": \"Annotation\", \"motivation\": \"painting\", \"body\": { \"id\": \"https://fixtures.iiif.io/video/indiana/lunchroom_manners/high/lunchroom_manners_1024kb.mp4\", \"type\": \"Video\", \"height\": 360, \"width\": 480, \"duration\": 572.034, \"format\": \"video/mp4\" }, \"target\": \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas\" } ] } ] } ] }","title":"Importing an existing IIIF Manifest"},{"location":"#extensions","text":"iiif-prezi3 includes the capability to load extensions to the IIIF Presentation schema (e.g navPlace ) and modify the library's Python classes to include extra properties, validation, helper methods, etc. Published extensions from the IIIF Registry of Extensions are included with the package, and can be loaded using the iiif_prezi3.load_bundled_extensions() method. Called without argument, this method will load all bundled extensions listed in the iiif_prezi3/config/extensions.json file. If you wish to only load selected extensions from those available bundled with the library, you can pass either the path to a JSON file, or a list of extension names as an argument to the function: >>> import iiif_prezi3 >>> iiif_prezi3.load_bundled_extensions(extensions=\"/path/to/chosen_extensions.json\") >>> import iiif_prezi3 >>> iiif_prezi3.load_bundled_extensions(extensions=['example_extension']) Extensions work in much the same way as helper methods, and are monkeypatched into the relevant objects in the iiif_prezi3.skeleton class, from which everything is loaded. For a simple example, please see the extensions/example_extension.py file, and the documentation on writing a helper method .","title":"Extensions"},{"location":"#local-development","text":"For developing iiif-prezi3 locally, clone the repo and then install it and the development dependencies using pip's \"editable mode\": git clone git@github.com:iiif-prezi/iiif-prezi3.git cd iiif-prezi3 pip install -e . [ dev ]","title":"Local Development"},{"location":"#running-tests","text":"Tests (including linting) can be run using tox . First, install tox with pip install tox , then type tox .","title":"Running Tests"},{"location":"#versioning","text":"iiif-prezi3 broadly follows Semantic Versioning . Patch releases are used for bug fixes, minor releases add new functionality and maintain backwards compatibility, and major versions contain breaking changes to the public API of the library. Links to the changes between individual versions can be found on the releases page.","title":"Versioning"},{"location":"#get-involved","text":"The iiif-prezi3 maintainers welcome contributions from the community - issues, pull requests, use cases, etc. We have a guideline document for contributions and a channel #iiif-prezi3 on the IIIF Slack workspace, which can be joined from the IIIF website's Get Involved page .","title":"Get Involved"},{"location":"code/","text":"Code reference helpers add_item AddItem Source code in iiif_prezi3/helpers/add_item.py 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class AddItem : def add_item ( self , item ): \"\"\"Add a IIIF Prezi3 object to the items list, creating it if it doesn't exist. Args: item (Union[Collection, Manifest, Canvas, AnnotationPage, Annotation, Range, Reference, SpecificResource, Item])): The object to be added \"\"\" if not self . items : self . items = [] # If the item is a Manifest, and the target is a Collection, convert it to a reference if isinstance ( item , Manifest ) and isinstance ( self , Collection ): item = item . to_reference () self . items . append ( item ) self . items = self . items # Force Pydantic to validate? add_item ( item ) Add a IIIF Prezi3 object to the items list, creating it if it doesn't exist. Parameters: Name Type Description Default item Union [ Collection , Manifest , Canvas , AnnotationPage , Annotation , Range , Reference , SpecificResource , Item ] The object to be added required Source code in iiif_prezi3/helpers/add_item.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 def add_item ( self , item ): \"\"\"Add a IIIF Prezi3 object to the items list, creating it if it doesn't exist. Args: item (Union[Collection, Manifest, Canvas, AnnotationPage, Annotation, Range, Reference, SpecificResource, Item])): The object to be added \"\"\" if not self . items : self . items = [] # If the item is a Manifest, and the target is a Collection, convert it to a reference if isinstance ( item , Manifest ) and isinstance ( self , Collection ): item = item . to_reference () self . items . append ( item ) self . items = self . items # Force Pydantic to validate? AddItemByReference Source code in iiif_prezi3/helpers/add_item.py 24 25 26 27 28 29 30 31 32 33 34 35 36 37 class AddItemByReference : def add_item_by_reference ( self , item ): \"\"\"Add a IIIF Prezi3 object by reference to the items list, creating it if it doesn't exist. Args: item (Union[Manifest, AnnotationPage, Collection, AnnotationCollection, Canvas])): The object to be added \"\"\" if not self . items : self . items = [] item = item . to_reference () self . items . append ( item ) self . items = self . items # Force Pydantic to validate? add_item_by_reference ( item ) Add a IIIF Prezi3 object by reference to the items list, creating it if it doesn't exist. Parameters: Name Type Description Default item Union [ Manifest , AnnotationPage , Collection , AnnotationCollection , Canvas ] The object to be added required Source code in iiif_prezi3/helpers/add_item.py 25 26 27 28 29 30 31 32 33 34 35 36 37 def add_item_by_reference ( self , item ): \"\"\"Add a IIIF Prezi3 object by reference to the items list, creating it if it doesn't exist. Args: item (Union[Manifest, AnnotationPage, Collection, AnnotationCollection, Canvas])): The object to be added \"\"\" if not self . items : self . items = [] item = item . to_reference () self . items . append ( item ) self . items = self . items # Force Pydantic to validate? add_label AddLabel Source code in iiif_prezi3/helpers/add_label.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 class AddLabel : def add_label ( self , value , language = None ): \"\"\"Adds a label to an existing resource. Args: value (Union[str, list]): The label or labels to be added language (str): An optional language for the labels. If not provided it will default using the AutoLang configuration. \"\"\" if not self . label : if not language : self . label = value else : if type ( value ) != list : value = [ value ] self . label = { language : value } else : # fetch as dict not LngString curr = self . label if not language : language = configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang if language in curr : curr [ language ] . append ( value ) else : if type ( value ) != list : value = [ value ] curr [ language ] = value self . label = curr add_label ( value , language = None ) Adds a label to an existing resource. Parameters: Name Type Description Default value Union [ str , list ] The label or labels to be added required language str An optional language for the labels. If not provided it will default using the AutoLang configuration. None Source code in iiif_prezi3/helpers/add_label.py 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 def add_label ( self , value , language = None ): \"\"\"Adds a label to an existing resource. Args: value (Union[str, list]): The label or labels to be added language (str): An optional language for the labels. If not provided it will default using the AutoLang configuration. \"\"\" if not self . label : if not language : self . label = value else : if type ( value ) != list : value = [ value ] self . label = { language : value } else : # fetch as dict not LngString curr = self . label if not language : language = configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang if language in curr : curr [ language ] . append ( value ) else : if type ( value ) != list : value = [ value ] curr [ language ] = value self . label = curr add_service AddService Source code in iiif_prezi3/helpers/add_service.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class AddService : def add_service ( self , service ): \"\"\"Add a IIIF Prezi service to the service list. Args: service (ServiceItem,ServiceItem1,Service): A iiif-prezi ServiceItem. \"\"\" if isinstance ( service , ( ServiceItem , ServiceItem1 )): if not self . service : self . service = [] self . service . append ( service ) self . service = self . service else : raise TypeError ( \"Not a valid IIIF service.\" ) add_service ( service ) Add a IIIF Prezi service to the service list. Parameters: Name Type Description Default service ServiceItem , ServiceItem1 , Service A iiif-prezi ServiceItem. required Source code in iiif_prezi3/helpers/add_service.py 8 9 10 11 12 13 14 15 16 17 18 19 20 def add_service ( self , service ): \"\"\"Add a IIIF Prezi service to the service list. Args: service (ServiceItem,ServiceItem1,Service): A iiif-prezi ServiceItem. \"\"\" if isinstance ( service , ( ServiceItem , ServiceItem1 )): if not self . service : self . service = [] self . service . append ( service ) self . service = self . service else : raise TypeError ( \"Not a valid IIIF service.\" ) annotation_helpers AnnotationHelpers Source code in iiif_prezi3/helpers/annotation_helpers.py 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 class AnnotationHelpers : def add_annotation ( self , annotation , anno_page_id = None ): \"\"\"Adds the annotation object to the (AnnotationPage object in the) annotations property. Creates an AnnotationPage object if it doesn't exist. Args: annotation (Annotation): the Annotation to add anno_page_id (str): An HTTP URL for the annotation page to which the annotation will be attached. Returns: annotation (Annotation): the Annotation attached to the AnnotationPage. \"\"\" if not self . annotations : self . annotations = list () if len ( self . annotations ) == 0 : # add empty AnnotationPage anno_page = AnnotationPage ( id = anno_page_id , items = []) self . annotations . append ( anno_page ) else : anno_page = self . annotations [ 0 ] anno_page . items . append ( annotation ) return annotation def make_annotation ( self , anno_page_id = None , ** kwargs ): \"\"\"Creates an annotation object and adds it to the annotations property using .add_annotation(). Args: anno_page_id (str): An HTTP URL for the annotation page to which the annotation will be attached. **kwargs (): see Annotation. \"\"\" annotation = Annotation ( ** kwargs ) self . add_annotation ( annotation , anno_page_id = anno_page_id ) return annotation add_annotation ( annotation , anno_page_id = None ) Adds the annotation object to the (AnnotationPage object in the) annotations property. Creates an AnnotationPage object if it doesn't exist. Parameters: Name Type Description Default annotation Annotation the Annotation to add required anno_page_id str An HTTP URL for the annotation page to which the annotation will be attached. None Returns: Name Type Description annotation Annotation the Annotation attached to the AnnotationPage. Source code in iiif_prezi3/helpers/annotation_helpers.py 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 def add_annotation ( self , annotation , anno_page_id = None ): \"\"\"Adds the annotation object to the (AnnotationPage object in the) annotations property. Creates an AnnotationPage object if it doesn't exist. Args: annotation (Annotation): the Annotation to add anno_page_id (str): An HTTP URL for the annotation page to which the annotation will be attached. Returns: annotation (Annotation): the Annotation attached to the AnnotationPage. \"\"\" if not self . annotations : self . annotations = list () if len ( self . annotations ) == 0 : # add empty AnnotationPage anno_page = AnnotationPage ( id = anno_page_id , items = []) self . annotations . append ( anno_page ) else : anno_page = self . annotations [ 0 ] anno_page . items . append ( annotation ) return annotation make_annotation ( anno_page_id = None , ** kwargs ) Creates an annotation object and adds it to the annotations property using .add_annotation(). Parameters: Name Type Description Default anno_page_id str An HTTP URL for the annotation page to which the annotation will be attached. None **kwargs see Annotation. {} Source code in iiif_prezi3/helpers/annotation_helpers.py 35 36 37 38 39 40 41 42 43 44 def make_annotation ( self , anno_page_id = None , ** kwargs ): \"\"\"Creates an annotation object and adds it to the annotations property using .add_annotation(). Args: anno_page_id (str): An HTTP URL for the annotation page to which the annotation will be attached. **kwargs (): see Annotation. \"\"\" annotation = Annotation ( ** kwargs ) self . add_annotation ( annotation , anno_page_id = anno_page_id ) return annotation canvas_helpers CanvasHelpers Source code in iiif_prezi3/helpers/canvas_helpers.py 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 class CanvasHelpers : def add_image ( self , image_url , anno_id = None , anno_page_id = None , ** kwargs ): \"\"\"Adds an image to an existing canvas. Args: image_url (str): An HTTP URL which points to the image. anno_id (str): An HTTP URL for the annotation to which the image will be attached. anno_page_id (str): An HTTP URL for the annotation page to which the annotation will be attached. Returns: anno_page (AnnotationPage): the AnnotationPage with an Annotation and ResourceItem attached. \"\"\" body = ResourceItem ( id = image_url , type = 'Image' , ** kwargs ) annotation = Annotation ( id = anno_id , body = body , target = self . id , motivation = 'painting' , type = 'Annotation' ) anno_page = AnnotationPage ( id = anno_page_id , type = 'AnnotationPage' , items = [ annotation ]) if not self . items : self . items = list () self . items . append ( anno_page ) return anno_page def add_thumbnail ( self , image_url , ** kwargs ): \"\"\"Adds a thumbnail to an existing canvas. Args: image_url (str): An HTTP URL which points to the thumbnail. **kwargs (): see ResourceItem. Returns: new_thumbnail (ResourceItem): the newly-created thumbnail. \"\"\" new_thumbnail = ResourceItem ( id = image_url , type = 'Image' , ** kwargs ) if not self . thumbnail : self . thumbnail = list () self . thumbnail . append ( new_thumbnail ) return new_thumbnail add_image ( image_url , anno_id = None , anno_page_id = None , ** kwargs ) Adds an image to an existing canvas. Parameters: Name Type Description Default image_url str An HTTP URL which points to the image. required anno_id str An HTTP URL for the annotation to which the image will be attached. None anno_page_id str An HTTP URL for the annotation page to which the annotation will be attached. None Returns: Name Type Description anno_page AnnotationPage the AnnotationPage with an Annotation and ResourceItem attached. Source code in iiif_prezi3/helpers/canvas_helpers.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 def add_image ( self , image_url , anno_id = None , anno_page_id = None , ** kwargs ): \"\"\"Adds an image to an existing canvas. Args: image_url (str): An HTTP URL which points to the image. anno_id (str): An HTTP URL for the annotation to which the image will be attached. anno_page_id (str): An HTTP URL for the annotation page to which the annotation will be attached. Returns: anno_page (AnnotationPage): the AnnotationPage with an Annotation and ResourceItem attached. \"\"\" body = ResourceItem ( id = image_url , type = 'Image' , ** kwargs ) annotation = Annotation ( id = anno_id , body = body , target = self . id , motivation = 'painting' , type = 'Annotation' ) anno_page = AnnotationPage ( id = anno_page_id , type = 'AnnotationPage' , items = [ annotation ]) if not self . items : self . items = list () self . items . append ( anno_page ) return anno_page add_thumbnail ( image_url , ** kwargs ) Adds a thumbnail to an existing canvas. Parameters: Name Type Description Default image_url str An HTTP URL which points to the thumbnail. required **kwargs see ResourceItem. {} Returns: Name Type Description new_thumbnail ResourceItem the newly-created thumbnail. Source code in iiif_prezi3/helpers/canvas_helpers.py 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 def add_thumbnail ( self , image_url , ** kwargs ): \"\"\"Adds a thumbnail to an existing canvas. Args: image_url (str): An HTTP URL which points to the thumbnail. **kwargs (): see ResourceItem. Returns: new_thumbnail (ResourceItem): the newly-created thumbnail. \"\"\" new_thumbnail = ResourceItem ( id = image_url , type = 'Image' , ** kwargs ) if not self . thumbnail : self . thumbnail = list () self . thumbnail . append ( new_thumbnail ) return new_thumbnail create_canvas_from_iiif CreateCanvasFromIIIF Source code in iiif_prezi3/helpers/create_canvas_from_iiif.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 class CreateCanvasFromIIIF : # should probably be added to canvas helpers def create_canvas_from_iiif ( self , url , anno_id = None , anno_page_id = None , ** kwargs ): \"\"\"Create a canvas from a IIIF Image URL. Creates a canvas from a IIIF Image service passing any kwargs to the Canvas. Args: url (str): An HTTP URL at which at a IIIF Image is available. anno_id (str): An HTTP URL for the annotation to which the image will be attached. anno_page_id (str): An HTTP URL for the annotation page to which the annotation will be attached. **kwargs (): see Canvas Returns: canvas (Canvas): the Canvas created from the IIIF Image. \"\"\" canvas = Canvas ( ** kwargs ) body = ResourceItem ( id = \"http://example.com\" , type = \"Image\" ) infoJson = body . set_hwd_from_iiif ( url ) # Will need to handle IIIF 2... if 'type' not in infoJson : # Assume v2 # V2 profile contains profile URI plus extra features profile = '' for item in infoJson [ 'profile' ]: if isinstance ( item , str ): profile = item break service = ServiceItem1 ( id = infoJson [ '@id' ], profile = profile , type = \"ImageService2\" ) body . service = [ service ] body . id = f ' { infoJson [ \"@id\" ] } /full/full/0/default.jpg' body . format = \"image/jpeg\" else : service = ServiceItem ( id = infoJson [ 'id' ], profile = infoJson [ 'profile' ], type = infoJson [ 'type' ]) body . service = [ service ] body . id = f ' { infoJson [ \"id\" ] } /full/max/0/default.jpg' body . format = \"image/jpeg\" annotation = Annotation ( id = anno_id , motivation = 'painting' , body = body , target = canvas . id ) annotationPage = AnnotationPage ( id = anno_page_id ) annotationPage . add_item ( annotation ) canvas . add_item ( annotationPage ) canvas . set_hwd ( infoJson [ 'height' ], infoJson [ 'width' ]) return canvas def make_canvas_from_iiif ( self , url , ** kwargs ): canvas = self . create_canvas_from_iiif ( url , ** kwargs ) self . add_item ( canvas ) return canvas create_canvas_from_iiif ( url , anno_id = None , anno_page_id = None , ** kwargs ) Create a canvas from a IIIF Image URL. Creates a canvas from a IIIF Image service passing any kwargs to the Canvas. Parameters: Name Type Description Default url str An HTTP URL at which at a IIIF Image is available. required anno_id str An HTTP URL for the annotation to which the image will be attached. None anno_page_id str An HTTP URL for the annotation page to which the annotation will be attached. None **kwargs see Canvas {} Returns: Name Type Description canvas Canvas the Canvas created from the IIIF Image. Source code in iiif_prezi3/helpers/create_canvas_from_iiif.py 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 def create_canvas_from_iiif ( self , url , anno_id = None , anno_page_id = None , ** kwargs ): \"\"\"Create a canvas from a IIIF Image URL. Creates a canvas from a IIIF Image service passing any kwargs to the Canvas. Args: url (str): An HTTP URL at which at a IIIF Image is available. anno_id (str): An HTTP URL for the annotation to which the image will be attached. anno_page_id (str): An HTTP URL for the annotation page to which the annotation will be attached. **kwargs (): see Canvas Returns: canvas (Canvas): the Canvas created from the IIIF Image. \"\"\" canvas = Canvas ( ** kwargs ) body = ResourceItem ( id = \"http://example.com\" , type = \"Image\" ) infoJson = body . set_hwd_from_iiif ( url ) # Will need to handle IIIF 2... if 'type' not in infoJson : # Assume v2 # V2 profile contains profile URI plus extra features profile = '' for item in infoJson [ 'profile' ]: if isinstance ( item , str ): profile = item break service = ServiceItem1 ( id = infoJson [ '@id' ], profile = profile , type = \"ImageService2\" ) body . service = [ service ] body . id = f ' { infoJson [ \"@id\" ] } /full/full/0/default.jpg' body . format = \"image/jpeg\" else : service = ServiceItem ( id = infoJson [ 'id' ], profile = infoJson [ 'profile' ], type = infoJson [ 'type' ]) body . service = [ service ] body . id = f ' { infoJson [ \"id\" ] } /full/max/0/default.jpg' body . format = \"image/jpeg\" annotation = Annotation ( id = anno_id , motivation = 'painting' , body = body , target = canvas . id ) annotationPage = AnnotationPage ( id = anno_page_id ) annotationPage . add_item ( annotation ) canvas . add_item ( annotationPage ) canvas . set_hwd ( infoJson [ 'height' ], infoJson [ 'width' ]) return canvas make_canvas MakeCanvas Source code in iiif_prezi3/helpers/make_canvas.py 5 6 7 8 9 10 11 12 13 14 15 16 class MakeCanvas : def make_canvas ( self , ** kwargs ): \"\"\"Add a Canvas to a Manifest. Creates a new Canvas, appends it to the calling Manifest items and returns the newly created Canvas. Accepts keyword arguments to customize the resulting instance. \"\"\" canvas = Canvas ( ** kwargs ) self . add_item ( canvas ) return canvas make_canvas ( ** kwargs ) Add a Canvas to a Manifest. Creates a new Canvas, appends it to the calling Manifest items and returns the newly created Canvas. Accepts keyword arguments to customize the resulting instance. Source code in iiif_prezi3/helpers/make_canvas.py 7 8 9 10 11 12 13 14 15 16 def make_canvas ( self , ** kwargs ): \"\"\"Add a Canvas to a Manifest. Creates a new Canvas, appends it to the calling Manifest items and returns the newly created Canvas. Accepts keyword arguments to customize the resulting instance. \"\"\" canvas = Canvas ( ** kwargs ) self . add_item ( canvas ) return canvas make_collection MakeCollection Source code in iiif_prezi3/helpers/make_collection.py 5 6 7 8 9 10 11 12 13 14 15 16 class MakeCollection : def make_collection ( self , ** kwargs ): \"\"\"Create a Collection. Creates a new collection, adds it to the calling Collection `items` and returns the newly created object. Accepts keyword arguments to customize the resulting instance. \"\"\" child_collection = Collection ( ** kwargs ) self . add_item ( child_collection ) return child_collection make_collection ( ** kwargs ) Create a Collection. Creates a new collection, adds it to the calling Collection items and returns the newly created object. Accepts keyword arguments to customize the resulting instance. Source code in iiif_prezi3/helpers/make_collection.py 7 8 9 10 11 12 13 14 15 16 def make_collection ( self , ** kwargs ): \"\"\"Create a Collection. Creates a new collection, adds it to the calling Collection `items` and returns the newly created object. Accepts keyword arguments to customize the resulting instance. \"\"\" child_collection = Collection ( ** kwargs ) self . add_item ( child_collection ) return child_collection make_manifest MakeManifest Source code in iiif_prezi3/helpers/make_manifest.py 5 6 7 8 9 10 11 12 13 14 15 16 class MakeManifest : def make_manifest ( self , ** kwargs ): \"\"\"Add a Manifest to a Collection. Creates a new Manifest, adds a Reference to it to the calling Collection items and returns the newly created Manifest. Accepts keyword arguments to customize the resulting instance. \"\"\" manifest = Manifest ( ** kwargs ) self . add_item ( manifest ) return manifest make_manifest ( ** kwargs ) Add a Manifest to a Collection. Creates a new Manifest, adds a Reference to it to the calling Collection items and returns the newly created Manifest. Accepts keyword arguments to customize the resulting instance. Source code in iiif_prezi3/helpers/make_manifest.py 7 8 9 10 11 12 13 14 15 16 def make_manifest ( self , ** kwargs ): \"\"\"Add a Manifest to a Collection. Creates a new Manifest, adds a Reference to it to the calling Collection items and returns the newly created Manifest. Accepts keyword arguments to customize the resulting instance. \"\"\" manifest = Manifest ( ** kwargs ) self . add_item ( manifest ) return manifest make_range MakeRange Source code in iiif_prezi3/helpers/make_range.py 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class MakeRange : def make_range ( self , ** kwargs ): \"\"\"Create a Range and add it to the calling Collection or Range. Creates a new Range, adds it to the calling object and returns the newly created Range. Accepts keyword arguments to customize the resulting instance. \"\"\" range = Range ( ** kwargs ) if type ( self ) == Manifest : if self . structures : self . structures . append ( range ) else : self . structures = [ range ] elif type ( self ) == Range : self . add_item ( range ) return range make_range ( ** kwargs ) Create a Range and add it to the calling Collection or Range. Creates a new Range, adds it to the calling object and returns the newly created Range. Accepts keyword arguments to customize the resulting instance. Source code in iiif_prezi3/helpers/make_range.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 def make_range ( self , ** kwargs ): \"\"\"Create a Range and add it to the calling Collection or Range. Creates a new Range, adds it to the calling object and returns the newly created Range. Accepts keyword arguments to customize the resulting instance. \"\"\" range = Range ( ** kwargs ) if type ( self ) == Manifest : if self . structures : self . structures . append ( range ) else : self . structures = [ range ] elif type ( self ) == Range : self . add_item ( range ) return range make_service MakeService Source code in iiif_prezi3/helpers/make_service.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 class MakeService : def make_service ( self , id , type , version = 3 , ** kwargs ): \"\"\"Make a IIIF Prezi service of the desired IIIF API version and adds it to the service list. Args: id (AnyUrl): The id of the service. type (str): The type of the service. version (int): The API version of the service. Defaults to 3. **kwargs (): Arbitrary keyword arguments. Raises: ValueError: If an invalid IIIF API version is provided. Returns: service (Union[ServiceItem, ServiceItem1]): A service instance of the selected version. \"\"\" serviceversions = { 2 : ServiceItem1 , 3 : ServiceItem } if version not in serviceversions : raise ValueError ( f \"Version: { version } is not a valid IIIF API service version.\" ) service = serviceversions [ version ]( id = id , type = type , ** kwargs ) self . add_service ( service ) return service make_service ( id , type , version = 3 , ** kwargs ) Make a IIIF Prezi service of the desired IIIF API version and adds it to the service list. Parameters: Name Type Description Default id AnyUrl The id of the service. required type str The type of the service. required version int The API version of the service. Defaults to 3. 3 **kwargs Arbitrary keyword arguments. {} Raises: Type Description ValueError If an invalid IIIF API version is provided. Returns: Name Type Description service Union [ ServiceItem , ServiceItem1 ] A service instance of the selected version. Source code in iiif_prezi3/helpers/make_service.py 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 def make_service ( self , id , type , version = 3 , ** kwargs ): \"\"\"Make a IIIF Prezi service of the desired IIIF API version and adds it to the service list. Args: id (AnyUrl): The id of the service. type (str): The type of the service. version (int): The API version of the service. Defaults to 3. **kwargs (): Arbitrary keyword arguments. Raises: ValueError: If an invalid IIIF API version is provided. Returns: service (Union[ServiceItem, ServiceItem1]): A service instance of the selected version. \"\"\" serviceversions = { 2 : ServiceItem1 , 3 : ServiceItem } if version not in serviceversions : raise ValueError ( f \"Version: { version } is not a valid IIIF API service version.\" ) service = serviceversions [ version ]( id = id , type = type , ** kwargs ) self . add_service ( service ) return service set_hwd SetHwd Source code in iiif_prezi3/helpers/set_hwd.py 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 class SetHwd : def set_hwd ( self , height = None , width = None , duration = None ): \"\"\"Set the height, width, and duration properties allowing nulls. Args: height (int): The height of the resource or the canvas width (int): The width of the resource or the canvas duration (float): The duration of the resource \"\"\" if not ( duration or height or width ): raise TypeError ( \"At least one of height, width, or duration must be set\" ) if height and not width : raise TypeError ( \"width must be set if height is set\" ) if width and not height : raise TypeError ( \"height must be set if width is set\" ) self . height = height self . width = width self . duration = duration set_hwd ( height = None , width = None , duration = None ) Set the height, width, and duration properties allowing nulls. Parameters: Name Type Description Default height int The height of the resource or the canvas None width int The width of the resource or the canvas None duration float The duration of the resource None Source code in iiif_prezi3/helpers/set_hwd.py 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 def set_hwd ( self , height = None , width = None , duration = None ): \"\"\"Set the height, width, and duration properties allowing nulls. Args: height (int): The height of the resource or the canvas width (int): The width of the resource or the canvas duration (float): The duration of the resource \"\"\" if not ( duration or height or width ): raise TypeError ( \"At least one of height, width, or duration must be set\" ) if height and not width : raise TypeError ( \"width must be set if height is set\" ) if width and not height : raise TypeError ( \"height must be set if width is set\" ) self . height = height self . width = width self . duration = duration set_hwd_from_file SetHeightWidthDurationFileHelper Source code in iiif_prezi3/helpers/set_hwd_from_file.py 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class SetHeightWidthDurationFileHelper : def set_hwd_from_file ( self , file_path_or_object ): \"\"\"Introspect a file and set the height, width, and duration properties. Args: file_path_or_object (Union[str, fp]): the file path or file object to introspect \"\"\" if isinstance ( file_path_or_object , str ) or isinstance ( file_path_or_object , os . PathLike ): filetype , _ = mimetypes . guess_type ( file_path_or_object ) if not filetype . startswith ( \"image/\" ): raise NotImplementedError tmp_image = Image . open ( file_path_or_object ) w , h = tmp_image . size self . set_hwd ( h , w , None ) tmp_image . close () set_hwd_from_file ( file_path_or_object ) Introspect a file and set the height, width, and duration properties. Parameters: Name Type Description Default file_path_or_object Union [ str , fp ] the file path or file object to introspect required Source code in iiif_prezi3/helpers/set_hwd_from_file.py 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 def set_hwd_from_file ( self , file_path_or_object ): \"\"\"Introspect a file and set the height, width, and duration properties. Args: file_path_or_object (Union[str, fp]): the file path or file object to introspect \"\"\" if isinstance ( file_path_or_object , str ) or isinstance ( file_path_or_object , os . PathLike ): filetype , _ = mimetypes . guess_type ( file_path_or_object ) if not filetype . startswith ( \"image/\" ): raise NotImplementedError tmp_image = Image . open ( file_path_or_object ) w , h = tmp_image . size self . set_hwd ( h , w , None ) tmp_image . close () set_hwd_from_iiif SetHwdFromIIIF Source code in iiif_prezi3/helpers/set_hwd_from_iiif.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 class SetHwdFromIIIF : # should probably be added to canvas helpers def set_hwd_from_iiif ( self , url ): \"\"\"Set height and width on a Canvas object. Requests IIIF Image information remotely for an image resource and sets resulting height and width. This method will return the info.json Args: url (str): An HTTP URL for the IIIF image endpoint. \"\"\" # resource url may or may not end with info.json; # add if not present if not url . endswith ( \"info.json\" ): url = f \" { url . rstrip ( '/' ) } /info.json\" response = requests . get ( url ) # if response is not 200, raise exception if response . status_code != requests . codes . ok : response . raise_for_status () # if response is not valid json, request will raise # requests.exceptions.JSONDecodeError # \u2014 handle or document and let calling code handle? resource_info = response . json () self . set_hwd ( resource_info . get ( \"height\" ), resource_info . get ( \"width\" )) return resource_info set_hwd_from_iiif ( url ) Set height and width on a Canvas object. Requests IIIF Image information remotely for an image resource and sets resulting height and width. This method will return the info.json Parameters: Name Type Description Default url str An HTTP URL for the IIIF image endpoint. required Source code in iiif_prezi3/helpers/set_hwd_from_iiif.py 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 def set_hwd_from_iiif ( self , url ): \"\"\"Set height and width on a Canvas object. Requests IIIF Image information remotely for an image resource and sets resulting height and width. This method will return the info.json Args: url (str): An HTTP URL for the IIIF image endpoint. \"\"\" # resource url may or may not end with info.json; # add if not present if not url . endswith ( \"info.json\" ): url = f \" { url . rstrip ( '/' ) } /info.json\" response = requests . get ( url ) # if response is not 200, raise exception if response . status_code != requests . codes . ok : response . raise_for_status () # if response is not valid json, request will raise # requests.exceptions.JSONDecodeError # \u2014 handle or document and let calling code handle? resource_info = response . json () self . set_hwd ( resource_info . get ( \"height\" ), resource_info . get ( \"width\" )) return resource_info to_reference ToReference Source code in iiif_prezi3/helpers/to_reference.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 class ToReference : def to_reference ( self ): \"\"\"Returns a Reference object that points to the calling object.\"\"\" # Only try to set thumbnail if it's a Class that can have one if isinstance ( self , ( Collection , Manifest , Canvas , AnnotationPage , Annotation , AnnotationCollection , Range )): thumbnail = self . thumbnail else : thumbnail = None # Currently the skeleton Reference requires a label, but some Referenceable objects may not have one (e.g AnnotationPage) # TODO: Remove this when the Schema is updated to have different reference types if not self . label : self . label = \"\" # Ensure that we use a specific Reference type if it exists if isinstance ( self , Manifest ): target_type = ManifestRef elif isinstance ( self , Collection ): target_type = CollectionRef elif isinstance ( self , Canvas ): target_type = CanvasRef elif isinstance ( self , Range ): target_type = RangeRef else : target_type = Reference return target_type ( id = self . id , label = self . label , type = self . type , thumbnail = thumbnail ) to_reference () Returns a Reference object that points to the calling object. Source code in iiif_prezi3/helpers/to_reference.py 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 def to_reference ( self ): \"\"\"Returns a Reference object that points to the calling object.\"\"\" # Only try to set thumbnail if it's a Class that can have one if isinstance ( self , ( Collection , Manifest , Canvas , AnnotationPage , Annotation , AnnotationCollection , Range )): thumbnail = self . thumbnail else : thumbnail = None # Currently the skeleton Reference requires a label, but some Referenceable objects may not have one (e.g AnnotationPage) # TODO: Remove this when the Schema is updated to have different reference types if not self . label : self . label = \"\" # Ensure that we use a specific Reference type if it exists if isinstance ( self , Manifest ): target_type = ManifestRef elif isinstance ( self , Collection ): target_type = CollectionRef elif isinstance ( self , Canvas ): target_type = CanvasRef elif isinstance ( self , Range ): target_type = RangeRef else : target_type = Reference return target_type ( id = self . id , label = self . label , type = self . type , thumbnail = thumbnail )","title":"Code reference"},{"location":"code/#code-reference","text":"","title":"Code reference"},{"location":"code/#iiif_prezi3.helpers","text":"","title":"helpers"},{"location":"code/#iiif_prezi3.helpers.add_item","text":"","title":"add_item"},{"location":"code/#iiif_prezi3.helpers.add_item.AddItem","text":"Source code in iiif_prezi3/helpers/add_item.py 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class AddItem : def add_item ( self , item ): \"\"\"Add a IIIF Prezi3 object to the items list, creating it if it doesn't exist. Args: item (Union[Collection, Manifest, Canvas, AnnotationPage, Annotation, Range, Reference, SpecificResource, Item])): The object to be added \"\"\" if not self . items : self . items = [] # If the item is a Manifest, and the target is a Collection, convert it to a reference if isinstance ( item , Manifest ) and isinstance ( self , Collection ): item = item . to_reference () self . items . append ( item ) self . items = self . items # Force Pydantic to validate?","title":"AddItem"},{"location":"code/#iiif_prezi3.helpers.add_item.AddItem.add_item","text":"Add a IIIF Prezi3 object to the items list, creating it if it doesn't exist. Parameters: Name Type Description Default item Union [ Collection , Manifest , Canvas , AnnotationPage , Annotation , Range , Reference , SpecificResource , Item ] The object to be added required Source code in iiif_prezi3/helpers/add_item.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 def add_item ( self , item ): \"\"\"Add a IIIF Prezi3 object to the items list, creating it if it doesn't exist. Args: item (Union[Collection, Manifest, Canvas, AnnotationPage, Annotation, Range, Reference, SpecificResource, Item])): The object to be added \"\"\" if not self . items : self . items = [] # If the item is a Manifest, and the target is a Collection, convert it to a reference if isinstance ( item , Manifest ) and isinstance ( self , Collection ): item = item . to_reference () self . items . append ( item ) self . items = self . items # Force Pydantic to validate?","title":"add_item()"},{"location":"code/#iiif_prezi3.helpers.add_item.AddItemByReference","text":"Source code in iiif_prezi3/helpers/add_item.py 24 25 26 27 28 29 30 31 32 33 34 35 36 37 class AddItemByReference : def add_item_by_reference ( self , item ): \"\"\"Add a IIIF Prezi3 object by reference to the items list, creating it if it doesn't exist. Args: item (Union[Manifest, AnnotationPage, Collection, AnnotationCollection, Canvas])): The object to be added \"\"\" if not self . items : self . items = [] item = item . to_reference () self . items . append ( item ) self . items = self . items # Force Pydantic to validate?","title":"AddItemByReference"},{"location":"code/#iiif_prezi3.helpers.add_item.AddItemByReference.add_item_by_reference","text":"Add a IIIF Prezi3 object by reference to the items list, creating it if it doesn't exist. Parameters: Name Type Description Default item Union [ Manifest , AnnotationPage , Collection , AnnotationCollection , Canvas ] The object to be added required Source code in iiif_prezi3/helpers/add_item.py 25 26 27 28 29 30 31 32 33 34 35 36 37 def add_item_by_reference ( self , item ): \"\"\"Add a IIIF Prezi3 object by reference to the items list, creating it if it doesn't exist. Args: item (Union[Manifest, AnnotationPage, Collection, AnnotationCollection, Canvas])): The object to be added \"\"\" if not self . items : self . items = [] item = item . to_reference () self . items . append ( item ) self . items = self . items # Force Pydantic to validate?","title":"add_item_by_reference()"},{"location":"code/#iiif_prezi3.helpers.add_label","text":"","title":"add_label"},{"location":"code/#iiif_prezi3.helpers.add_label.AddLabel","text":"Source code in iiif_prezi3/helpers/add_label.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 class AddLabel : def add_label ( self , value , language = None ): \"\"\"Adds a label to an existing resource. Args: value (Union[str, list]): The label or labels to be added language (str): An optional language for the labels. If not provided it will default using the AutoLang configuration. \"\"\" if not self . label : if not language : self . label = value else : if type ( value ) != list : value = [ value ] self . label = { language : value } else : # fetch as dict not LngString curr = self . label if not language : language = configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang if language in curr : curr [ language ] . append ( value ) else : if type ( value ) != list : value = [ value ] curr [ language ] = value self . label = curr","title":"AddLabel"},{"location":"code/#iiif_prezi3.helpers.add_label.AddLabel.add_label","text":"Adds a label to an existing resource. Parameters: Name Type Description Default value Union [ str , list ] The label or labels to be added required language str An optional language for the labels. If not provided it will default using the AutoLang configuration. None Source code in iiif_prezi3/helpers/add_label.py 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 def add_label ( self , value , language = None ): \"\"\"Adds a label to an existing resource. Args: value (Union[str, list]): The label or labels to be added language (str): An optional language for the labels. If not provided it will default using the AutoLang configuration. \"\"\" if not self . label : if not language : self . label = value else : if type ( value ) != list : value = [ value ] self . label = { language : value } else : # fetch as dict not LngString curr = self . label if not language : language = configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang if language in curr : curr [ language ] . append ( value ) else : if type ( value ) != list : value = [ value ] curr [ language ] = value self . label = curr","title":"add_label()"},{"location":"code/#iiif_prezi3.helpers.add_service","text":"","title":"add_service"},{"location":"code/#iiif_prezi3.helpers.add_service.AddService","text":"Source code in iiif_prezi3/helpers/add_service.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class AddService : def add_service ( self , service ): \"\"\"Add a IIIF Prezi service to the service list. Args: service (ServiceItem,ServiceItem1,Service): A iiif-prezi ServiceItem. \"\"\" if isinstance ( service , ( ServiceItem , ServiceItem1 )): if not self . service : self . service = [] self . service . append ( service ) self . service = self . service else : raise TypeError ( \"Not a valid IIIF service.\" )","title":"AddService"},{"location":"code/#iiif_prezi3.helpers.add_service.AddService.add_service","text":"Add a IIIF Prezi service to the service list. Parameters: Name Type Description Default service ServiceItem , ServiceItem1 , Service A iiif-prezi ServiceItem. required Source code in iiif_prezi3/helpers/add_service.py 8 9 10 11 12 13 14 15 16 17 18 19 20 def add_service ( self , service ): \"\"\"Add a IIIF Prezi service to the service list. Args: service (ServiceItem,ServiceItem1,Service): A iiif-prezi ServiceItem. \"\"\" if isinstance ( service , ( ServiceItem , ServiceItem1 )): if not self . service : self . service = [] self . service . append ( service ) self . service = self . service else : raise TypeError ( \"Not a valid IIIF service.\" )","title":"add_service()"},{"location":"code/#iiif_prezi3.helpers.annotation_helpers","text":"","title":"annotation_helpers"},{"location":"code/#iiif_prezi3.helpers.annotation_helpers.AnnotationHelpers","text":"Source code in iiif_prezi3/helpers/annotation_helpers.py 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 class AnnotationHelpers : def add_annotation ( self , annotation , anno_page_id = None ): \"\"\"Adds the annotation object to the (AnnotationPage object in the) annotations property. Creates an AnnotationPage object if it doesn't exist. Args: annotation (Annotation): the Annotation to add anno_page_id (str): An HTTP URL for the annotation page to which the annotation will be attached. Returns: annotation (Annotation): the Annotation attached to the AnnotationPage. \"\"\" if not self . annotations : self . annotations = list () if len ( self . annotations ) == 0 : # add empty AnnotationPage anno_page = AnnotationPage ( id = anno_page_id , items = []) self . annotations . append ( anno_page ) else : anno_page = self . annotations [ 0 ] anno_page . items . append ( annotation ) return annotation def make_annotation ( self , anno_page_id = None , ** kwargs ): \"\"\"Creates an annotation object and adds it to the annotations property using .add_annotation(). Args: anno_page_id (str): An HTTP URL for the annotation page to which the annotation will be attached. **kwargs (): see Annotation. \"\"\" annotation = Annotation ( ** kwargs ) self . add_annotation ( annotation , anno_page_id = anno_page_id ) return annotation","title":"AnnotationHelpers"},{"location":"code/#iiif_prezi3.helpers.annotation_helpers.AnnotationHelpers.add_annotation","text":"Adds the annotation object to the (AnnotationPage object in the) annotations property. Creates an AnnotationPage object if it doesn't exist. Parameters: Name Type Description Default annotation Annotation the Annotation to add required anno_page_id str An HTTP URL for the annotation page to which the annotation will be attached. None Returns: Name Type Description annotation Annotation the Annotation attached to the AnnotationPage. Source code in iiif_prezi3/helpers/annotation_helpers.py 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 def add_annotation ( self , annotation , anno_page_id = None ): \"\"\"Adds the annotation object to the (AnnotationPage object in the) annotations property. Creates an AnnotationPage object if it doesn't exist. Args: annotation (Annotation): the Annotation to add anno_page_id (str): An HTTP URL for the annotation page to which the annotation will be attached. Returns: annotation (Annotation): the Annotation attached to the AnnotationPage. \"\"\" if not self . annotations : self . annotations = list () if len ( self . annotations ) == 0 : # add empty AnnotationPage anno_page = AnnotationPage ( id = anno_page_id , items = []) self . annotations . append ( anno_page ) else : anno_page = self . annotations [ 0 ] anno_page . items . append ( annotation ) return annotation","title":"add_annotation()"},{"location":"code/#iiif_prezi3.helpers.annotation_helpers.AnnotationHelpers.make_annotation","text":"Creates an annotation object and adds it to the annotations property using .add_annotation(). Parameters: Name Type Description Default anno_page_id str An HTTP URL for the annotation page to which the annotation will be attached. None **kwargs see Annotation. {} Source code in iiif_prezi3/helpers/annotation_helpers.py 35 36 37 38 39 40 41 42 43 44 def make_annotation ( self , anno_page_id = None , ** kwargs ): \"\"\"Creates an annotation object and adds it to the annotations property using .add_annotation(). Args: anno_page_id (str): An HTTP URL for the annotation page to which the annotation will be attached. **kwargs (): see Annotation. \"\"\" annotation = Annotation ( ** kwargs ) self . add_annotation ( annotation , anno_page_id = anno_page_id ) return annotation","title":"make_annotation()"},{"location":"code/#iiif_prezi3.helpers.canvas_helpers","text":"","title":"canvas_helpers"},{"location":"code/#iiif_prezi3.helpers.canvas_helpers.CanvasHelpers","text":"Source code in iiif_prezi3/helpers/canvas_helpers.py 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 class CanvasHelpers : def add_image ( self , image_url , anno_id = None , anno_page_id = None , ** kwargs ): \"\"\"Adds an image to an existing canvas. Args: image_url (str): An HTTP URL which points to the image. anno_id (str): An HTTP URL for the annotation to which the image will be attached. anno_page_id (str): An HTTP URL for the annotation page to which the annotation will be attached. Returns: anno_page (AnnotationPage): the AnnotationPage with an Annotation and ResourceItem attached. \"\"\" body = ResourceItem ( id = image_url , type = 'Image' , ** kwargs ) annotation = Annotation ( id = anno_id , body = body , target = self . id , motivation = 'painting' , type = 'Annotation' ) anno_page = AnnotationPage ( id = anno_page_id , type = 'AnnotationPage' , items = [ annotation ]) if not self . items : self . items = list () self . items . append ( anno_page ) return anno_page def add_thumbnail ( self , image_url , ** kwargs ): \"\"\"Adds a thumbnail to an existing canvas. Args: image_url (str): An HTTP URL which points to the thumbnail. **kwargs (): see ResourceItem. Returns: new_thumbnail (ResourceItem): the newly-created thumbnail. \"\"\" new_thumbnail = ResourceItem ( id = image_url , type = 'Image' , ** kwargs ) if not self . thumbnail : self . thumbnail = list () self . thumbnail . append ( new_thumbnail ) return new_thumbnail","title":"CanvasHelpers"},{"location":"code/#iiif_prezi3.helpers.canvas_helpers.CanvasHelpers.add_image","text":"Adds an image to an existing canvas. Parameters: Name Type Description Default image_url str An HTTP URL which points to the image. required anno_id str An HTTP URL for the annotation to which the image will be attached. None anno_page_id str An HTTP URL for the annotation page to which the annotation will be attached. None Returns: Name Type Description anno_page AnnotationPage the AnnotationPage with an Annotation and ResourceItem attached. Source code in iiif_prezi3/helpers/canvas_helpers.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 def add_image ( self , image_url , anno_id = None , anno_page_id = None , ** kwargs ): \"\"\"Adds an image to an existing canvas. Args: image_url (str): An HTTP URL which points to the image. anno_id (str): An HTTP URL for the annotation to which the image will be attached. anno_page_id (str): An HTTP URL for the annotation page to which the annotation will be attached. Returns: anno_page (AnnotationPage): the AnnotationPage with an Annotation and ResourceItem attached. \"\"\" body = ResourceItem ( id = image_url , type = 'Image' , ** kwargs ) annotation = Annotation ( id = anno_id , body = body , target = self . id , motivation = 'painting' , type = 'Annotation' ) anno_page = AnnotationPage ( id = anno_page_id , type = 'AnnotationPage' , items = [ annotation ]) if not self . items : self . items = list () self . items . append ( anno_page ) return anno_page","title":"add_image()"},{"location":"code/#iiif_prezi3.helpers.canvas_helpers.CanvasHelpers.add_thumbnail","text":"Adds a thumbnail to an existing canvas. Parameters: Name Type Description Default image_url str An HTTP URL which points to the thumbnail. required **kwargs see ResourceItem. {} Returns: Name Type Description new_thumbnail ResourceItem the newly-created thumbnail. Source code in iiif_prezi3/helpers/canvas_helpers.py 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 def add_thumbnail ( self , image_url , ** kwargs ): \"\"\"Adds a thumbnail to an existing canvas. Args: image_url (str): An HTTP URL which points to the thumbnail. **kwargs (): see ResourceItem. Returns: new_thumbnail (ResourceItem): the newly-created thumbnail. \"\"\" new_thumbnail = ResourceItem ( id = image_url , type = 'Image' , ** kwargs ) if not self . thumbnail : self . thumbnail = list () self . thumbnail . append ( new_thumbnail ) return new_thumbnail","title":"add_thumbnail()"},{"location":"code/#iiif_prezi3.helpers.create_canvas_from_iiif","text":"","title":"create_canvas_from_iiif"},{"location":"code/#iiif_prezi3.helpers.create_canvas_from_iiif.CreateCanvasFromIIIF","text":"Source code in iiif_prezi3/helpers/create_canvas_from_iiif.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 class CreateCanvasFromIIIF : # should probably be added to canvas helpers def create_canvas_from_iiif ( self , url , anno_id = None , anno_page_id = None , ** kwargs ): \"\"\"Create a canvas from a IIIF Image URL. Creates a canvas from a IIIF Image service passing any kwargs to the Canvas. Args: url (str): An HTTP URL at which at a IIIF Image is available. anno_id (str): An HTTP URL for the annotation to which the image will be attached. anno_page_id (str): An HTTP URL for the annotation page to which the annotation will be attached. **kwargs (): see Canvas Returns: canvas (Canvas): the Canvas created from the IIIF Image. \"\"\" canvas = Canvas ( ** kwargs ) body = ResourceItem ( id = \"http://example.com\" , type = \"Image\" ) infoJson = body . set_hwd_from_iiif ( url ) # Will need to handle IIIF 2... if 'type' not in infoJson : # Assume v2 # V2 profile contains profile URI plus extra features profile = '' for item in infoJson [ 'profile' ]: if isinstance ( item , str ): profile = item break service = ServiceItem1 ( id = infoJson [ '@id' ], profile = profile , type = \"ImageService2\" ) body . service = [ service ] body . id = f ' { infoJson [ \"@id\" ] } /full/full/0/default.jpg' body . format = \"image/jpeg\" else : service = ServiceItem ( id = infoJson [ 'id' ], profile = infoJson [ 'profile' ], type = infoJson [ 'type' ]) body . service = [ service ] body . id = f ' { infoJson [ \"id\" ] } /full/max/0/default.jpg' body . format = \"image/jpeg\" annotation = Annotation ( id = anno_id , motivation = 'painting' , body = body , target = canvas . id ) annotationPage = AnnotationPage ( id = anno_page_id ) annotationPage . add_item ( annotation ) canvas . add_item ( annotationPage ) canvas . set_hwd ( infoJson [ 'height' ], infoJson [ 'width' ]) return canvas def make_canvas_from_iiif ( self , url , ** kwargs ): canvas = self . create_canvas_from_iiif ( url , ** kwargs ) self . add_item ( canvas ) return canvas","title":"CreateCanvasFromIIIF"},{"location":"code/#iiif_prezi3.helpers.create_canvas_from_iiif.CreateCanvasFromIIIF.create_canvas_from_iiif","text":"Create a canvas from a IIIF Image URL. Creates a canvas from a IIIF Image service passing any kwargs to the Canvas. Parameters: Name Type Description Default url str An HTTP URL at which at a IIIF Image is available. required anno_id str An HTTP URL for the annotation to which the image will be attached. None anno_page_id str An HTTP URL for the annotation page to which the annotation will be attached. None **kwargs see Canvas {} Returns: Name Type Description canvas Canvas the Canvas created from the IIIF Image. Source code in iiif_prezi3/helpers/create_canvas_from_iiif.py 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 def create_canvas_from_iiif ( self , url , anno_id = None , anno_page_id = None , ** kwargs ): \"\"\"Create a canvas from a IIIF Image URL. Creates a canvas from a IIIF Image service passing any kwargs to the Canvas. Args: url (str): An HTTP URL at which at a IIIF Image is available. anno_id (str): An HTTP URL for the annotation to which the image will be attached. anno_page_id (str): An HTTP URL for the annotation page to which the annotation will be attached. **kwargs (): see Canvas Returns: canvas (Canvas): the Canvas created from the IIIF Image. \"\"\" canvas = Canvas ( ** kwargs ) body = ResourceItem ( id = \"http://example.com\" , type = \"Image\" ) infoJson = body . set_hwd_from_iiif ( url ) # Will need to handle IIIF 2... if 'type' not in infoJson : # Assume v2 # V2 profile contains profile URI plus extra features profile = '' for item in infoJson [ 'profile' ]: if isinstance ( item , str ): profile = item break service = ServiceItem1 ( id = infoJson [ '@id' ], profile = profile , type = \"ImageService2\" ) body . service = [ service ] body . id = f ' { infoJson [ \"@id\" ] } /full/full/0/default.jpg' body . format = \"image/jpeg\" else : service = ServiceItem ( id = infoJson [ 'id' ], profile = infoJson [ 'profile' ], type = infoJson [ 'type' ]) body . service = [ service ] body . id = f ' { infoJson [ \"id\" ] } /full/max/0/default.jpg' body . format = \"image/jpeg\" annotation = Annotation ( id = anno_id , motivation = 'painting' , body = body , target = canvas . id ) annotationPage = AnnotationPage ( id = anno_page_id ) annotationPage . add_item ( annotation ) canvas . add_item ( annotationPage ) canvas . set_hwd ( infoJson [ 'height' ], infoJson [ 'width' ]) return canvas","title":"create_canvas_from_iiif()"},{"location":"code/#iiif_prezi3.helpers.make_canvas","text":"","title":"make_canvas"},{"location":"code/#iiif_prezi3.helpers.make_canvas.MakeCanvas","text":"Source code in iiif_prezi3/helpers/make_canvas.py 5 6 7 8 9 10 11 12 13 14 15 16 class MakeCanvas : def make_canvas ( self , ** kwargs ): \"\"\"Add a Canvas to a Manifest. Creates a new Canvas, appends it to the calling Manifest items and returns the newly created Canvas. Accepts keyword arguments to customize the resulting instance. \"\"\" canvas = Canvas ( ** kwargs ) self . add_item ( canvas ) return canvas","title":"MakeCanvas"},{"location":"code/#iiif_prezi3.helpers.make_canvas.MakeCanvas.make_canvas","text":"Add a Canvas to a Manifest. Creates a new Canvas, appends it to the calling Manifest items and returns the newly created Canvas. Accepts keyword arguments to customize the resulting instance. Source code in iiif_prezi3/helpers/make_canvas.py 7 8 9 10 11 12 13 14 15 16 def make_canvas ( self , ** kwargs ): \"\"\"Add a Canvas to a Manifest. Creates a new Canvas, appends it to the calling Manifest items and returns the newly created Canvas. Accepts keyword arguments to customize the resulting instance. \"\"\" canvas = Canvas ( ** kwargs ) self . add_item ( canvas ) return canvas","title":"make_canvas()"},{"location":"code/#iiif_prezi3.helpers.make_collection","text":"","title":"make_collection"},{"location":"code/#iiif_prezi3.helpers.make_collection.MakeCollection","text":"Source code in iiif_prezi3/helpers/make_collection.py 5 6 7 8 9 10 11 12 13 14 15 16 class MakeCollection : def make_collection ( self , ** kwargs ): \"\"\"Create a Collection. Creates a new collection, adds it to the calling Collection `items` and returns the newly created object. Accepts keyword arguments to customize the resulting instance. \"\"\" child_collection = Collection ( ** kwargs ) self . add_item ( child_collection ) return child_collection","title":"MakeCollection"},{"location":"code/#iiif_prezi3.helpers.make_collection.MakeCollection.make_collection","text":"Create a Collection. Creates a new collection, adds it to the calling Collection items and returns the newly created object. Accepts keyword arguments to customize the resulting instance. Source code in iiif_prezi3/helpers/make_collection.py 7 8 9 10 11 12 13 14 15 16 def make_collection ( self , ** kwargs ): \"\"\"Create a Collection. Creates a new collection, adds it to the calling Collection `items` and returns the newly created object. Accepts keyword arguments to customize the resulting instance. \"\"\" child_collection = Collection ( ** kwargs ) self . add_item ( child_collection ) return child_collection","title":"make_collection()"},{"location":"code/#iiif_prezi3.helpers.make_manifest","text":"","title":"make_manifest"},{"location":"code/#iiif_prezi3.helpers.make_manifest.MakeManifest","text":"Source code in iiif_prezi3/helpers/make_manifest.py 5 6 7 8 9 10 11 12 13 14 15 16 class MakeManifest : def make_manifest ( self , ** kwargs ): \"\"\"Add a Manifest to a Collection. Creates a new Manifest, adds a Reference to it to the calling Collection items and returns the newly created Manifest. Accepts keyword arguments to customize the resulting instance. \"\"\" manifest = Manifest ( ** kwargs ) self . add_item ( manifest ) return manifest","title":"MakeManifest"},{"location":"code/#iiif_prezi3.helpers.make_manifest.MakeManifest.make_manifest","text":"Add a Manifest to a Collection. Creates a new Manifest, adds a Reference to it to the calling Collection items and returns the newly created Manifest. Accepts keyword arguments to customize the resulting instance. Source code in iiif_prezi3/helpers/make_manifest.py 7 8 9 10 11 12 13 14 15 16 def make_manifest ( self , ** kwargs ): \"\"\"Add a Manifest to a Collection. Creates a new Manifest, adds a Reference to it to the calling Collection items and returns the newly created Manifest. Accepts keyword arguments to customize the resulting instance. \"\"\" manifest = Manifest ( ** kwargs ) self . add_item ( manifest ) return manifest","title":"make_manifest()"},{"location":"code/#iiif_prezi3.helpers.make_range","text":"","title":"make_range"},{"location":"code/#iiif_prezi3.helpers.make_range.MakeRange","text":"Source code in iiif_prezi3/helpers/make_range.py 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class MakeRange : def make_range ( self , ** kwargs ): \"\"\"Create a Range and add it to the calling Collection or Range. Creates a new Range, adds it to the calling object and returns the newly created Range. Accepts keyword arguments to customize the resulting instance. \"\"\" range = Range ( ** kwargs ) if type ( self ) == Manifest : if self . structures : self . structures . append ( range ) else : self . structures = [ range ] elif type ( self ) == Range : self . add_item ( range ) return range","title":"MakeRange"},{"location":"code/#iiif_prezi3.helpers.make_range.MakeRange.make_range","text":"Create a Range and add it to the calling Collection or Range. Creates a new Range, adds it to the calling object and returns the newly created Range. Accepts keyword arguments to customize the resulting instance. Source code in iiif_prezi3/helpers/make_range.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 def make_range ( self , ** kwargs ): \"\"\"Create a Range and add it to the calling Collection or Range. Creates a new Range, adds it to the calling object and returns the newly created Range. Accepts keyword arguments to customize the resulting instance. \"\"\" range = Range ( ** kwargs ) if type ( self ) == Manifest : if self . structures : self . structures . append ( range ) else : self . structures = [ range ] elif type ( self ) == Range : self . add_item ( range ) return range","title":"make_range()"},{"location":"code/#iiif_prezi3.helpers.make_service","text":"","title":"make_service"},{"location":"code/#iiif_prezi3.helpers.make_service.MakeService","text":"Source code in iiif_prezi3/helpers/make_service.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 class MakeService : def make_service ( self , id , type , version = 3 , ** kwargs ): \"\"\"Make a IIIF Prezi service of the desired IIIF API version and adds it to the service list. Args: id (AnyUrl): The id of the service. type (str): The type of the service. version (int): The API version of the service. Defaults to 3. **kwargs (): Arbitrary keyword arguments. Raises: ValueError: If an invalid IIIF API version is provided. Returns: service (Union[ServiceItem, ServiceItem1]): A service instance of the selected version. \"\"\" serviceversions = { 2 : ServiceItem1 , 3 : ServiceItem } if version not in serviceversions : raise ValueError ( f \"Version: { version } is not a valid IIIF API service version.\" ) service = serviceversions [ version ]( id = id , type = type , ** kwargs ) self . add_service ( service ) return service","title":"MakeService"},{"location":"code/#iiif_prezi3.helpers.make_service.MakeService.make_service","text":"Make a IIIF Prezi service of the desired IIIF API version and adds it to the service list. Parameters: Name Type Description Default id AnyUrl The id of the service. required type str The type of the service. required version int The API version of the service. Defaults to 3. 3 **kwargs Arbitrary keyword arguments. {} Raises: Type Description ValueError If an invalid IIIF API version is provided. Returns: Name Type Description service Union [ ServiceItem , ServiceItem1 ] A service instance of the selected version. Source code in iiif_prezi3/helpers/make_service.py 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 def make_service ( self , id , type , version = 3 , ** kwargs ): \"\"\"Make a IIIF Prezi service of the desired IIIF API version and adds it to the service list. Args: id (AnyUrl): The id of the service. type (str): The type of the service. version (int): The API version of the service. Defaults to 3. **kwargs (): Arbitrary keyword arguments. Raises: ValueError: If an invalid IIIF API version is provided. Returns: service (Union[ServiceItem, ServiceItem1]): A service instance of the selected version. \"\"\" serviceversions = { 2 : ServiceItem1 , 3 : ServiceItem } if version not in serviceversions : raise ValueError ( f \"Version: { version } is not a valid IIIF API service version.\" ) service = serviceversions [ version ]( id = id , type = type , ** kwargs ) self . add_service ( service ) return service","title":"make_service()"},{"location":"code/#iiif_prezi3.helpers.set_hwd","text":"","title":"set_hwd"},{"location":"code/#iiif_prezi3.helpers.set_hwd.SetHwd","text":"Source code in iiif_prezi3/helpers/set_hwd.py 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 class SetHwd : def set_hwd ( self , height = None , width = None , duration = None ): \"\"\"Set the height, width, and duration properties allowing nulls. Args: height (int): The height of the resource or the canvas width (int): The width of the resource or the canvas duration (float): The duration of the resource \"\"\" if not ( duration or height or width ): raise TypeError ( \"At least one of height, width, or duration must be set\" ) if height and not width : raise TypeError ( \"width must be set if height is set\" ) if width and not height : raise TypeError ( \"height must be set if width is set\" ) self . height = height self . width = width self . duration = duration","title":"SetHwd"},{"location":"code/#iiif_prezi3.helpers.set_hwd.SetHwd.set_hwd","text":"Set the height, width, and duration properties allowing nulls. Parameters: Name Type Description Default height int The height of the resource or the canvas None width int The width of the resource or the canvas None duration float The duration of the resource None Source code in iiif_prezi3/helpers/set_hwd.py 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 def set_hwd ( self , height = None , width = None , duration = None ): \"\"\"Set the height, width, and duration properties allowing nulls. Args: height (int): The height of the resource or the canvas width (int): The width of the resource or the canvas duration (float): The duration of the resource \"\"\" if not ( duration or height or width ): raise TypeError ( \"At least one of height, width, or duration must be set\" ) if height and not width : raise TypeError ( \"width must be set if height is set\" ) if width and not height : raise TypeError ( \"height must be set if width is set\" ) self . height = height self . width = width self . duration = duration","title":"set_hwd()"},{"location":"code/#iiif_prezi3.helpers.set_hwd_from_file","text":"","title":"set_hwd_from_file"},{"location":"code/#iiif_prezi3.helpers.set_hwd_from_file.SetHeightWidthDurationFileHelper","text":"Source code in iiif_prezi3/helpers/set_hwd_from_file.py 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class SetHeightWidthDurationFileHelper : def set_hwd_from_file ( self , file_path_or_object ): \"\"\"Introspect a file and set the height, width, and duration properties. Args: file_path_or_object (Union[str, fp]): the file path or file object to introspect \"\"\" if isinstance ( file_path_or_object , str ) or isinstance ( file_path_or_object , os . PathLike ): filetype , _ = mimetypes . guess_type ( file_path_or_object ) if not filetype . startswith ( \"image/\" ): raise NotImplementedError tmp_image = Image . open ( file_path_or_object ) w , h = tmp_image . size self . set_hwd ( h , w , None ) tmp_image . close ()","title":"SetHeightWidthDurationFileHelper"},{"location":"code/#iiif_prezi3.helpers.set_hwd_from_file.SetHeightWidthDurationFileHelper.set_hwd_from_file","text":"Introspect a file and set the height, width, and duration properties. Parameters: Name Type Description Default file_path_or_object Union [ str , fp ] the file path or file object to introspect required Source code in iiif_prezi3/helpers/set_hwd_from_file.py 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 def set_hwd_from_file ( self , file_path_or_object ): \"\"\"Introspect a file and set the height, width, and duration properties. Args: file_path_or_object (Union[str, fp]): the file path or file object to introspect \"\"\" if isinstance ( file_path_or_object , str ) or isinstance ( file_path_or_object , os . PathLike ): filetype , _ = mimetypes . guess_type ( file_path_or_object ) if not filetype . startswith ( \"image/\" ): raise NotImplementedError tmp_image = Image . open ( file_path_or_object ) w , h = tmp_image . size self . set_hwd ( h , w , None ) tmp_image . close ()","title":"set_hwd_from_file()"},{"location":"code/#iiif_prezi3.helpers.set_hwd_from_iiif","text":"","title":"set_hwd_from_iiif"},{"location":"code/#iiif_prezi3.helpers.set_hwd_from_iiif.SetHwdFromIIIF","text":"Source code in iiif_prezi3/helpers/set_hwd_from_iiif.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 class SetHwdFromIIIF : # should probably be added to canvas helpers def set_hwd_from_iiif ( self , url ): \"\"\"Set height and width on a Canvas object. Requests IIIF Image information remotely for an image resource and sets resulting height and width. This method will return the info.json Args: url (str): An HTTP URL for the IIIF image endpoint. \"\"\" # resource url may or may not end with info.json; # add if not present if not url . endswith ( \"info.json\" ): url = f \" { url . rstrip ( '/' ) } /info.json\" response = requests . get ( url ) # if response is not 200, raise exception if response . status_code != requests . codes . ok : response . raise_for_status () # if response is not valid json, request will raise # requests.exceptions.JSONDecodeError # \u2014 handle or document and let calling code handle? resource_info = response . json () self . set_hwd ( resource_info . get ( \"height\" ), resource_info . get ( \"width\" )) return resource_info","title":"SetHwdFromIIIF"},{"location":"code/#iiif_prezi3.helpers.set_hwd_from_iiif.SetHwdFromIIIF.set_hwd_from_iiif","text":"Set height and width on a Canvas object. Requests IIIF Image information remotely for an image resource and sets resulting height and width. This method will return the info.json Parameters: Name Type Description Default url str An HTTP URL for the IIIF image endpoint. required Source code in iiif_prezi3/helpers/set_hwd_from_iiif.py 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 def set_hwd_from_iiif ( self , url ): \"\"\"Set height and width on a Canvas object. Requests IIIF Image information remotely for an image resource and sets resulting height and width. This method will return the info.json Args: url (str): An HTTP URL for the IIIF image endpoint. \"\"\" # resource url may or may not end with info.json; # add if not present if not url . endswith ( \"info.json\" ): url = f \" { url . rstrip ( '/' ) } /info.json\" response = requests . get ( url ) # if response is not 200, raise exception if response . status_code != requests . codes . ok : response . raise_for_status () # if response is not valid json, request will raise # requests.exceptions.JSONDecodeError # \u2014 handle or document and let calling code handle? resource_info = response . json () self . set_hwd ( resource_info . get ( \"height\" ), resource_info . get ( \"width\" )) return resource_info","title":"set_hwd_from_iiif()"},{"location":"code/#iiif_prezi3.helpers.to_reference","text":"","title":"to_reference"},{"location":"code/#iiif_prezi3.helpers.to_reference.ToReference","text":"Source code in iiif_prezi3/helpers/to_reference.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 class ToReference : def to_reference ( self ): \"\"\"Returns a Reference object that points to the calling object.\"\"\" # Only try to set thumbnail if it's a Class that can have one if isinstance ( self , ( Collection , Manifest , Canvas , AnnotationPage , Annotation , AnnotationCollection , Range )): thumbnail = self . thumbnail else : thumbnail = None # Currently the skeleton Reference requires a label, but some Referenceable objects may not have one (e.g AnnotationPage) # TODO: Remove this when the Schema is updated to have different reference types if not self . label : self . label = \"\" # Ensure that we use a specific Reference type if it exists if isinstance ( self , Manifest ): target_type = ManifestRef elif isinstance ( self , Collection ): target_type = CollectionRef elif isinstance ( self , Canvas ): target_type = CanvasRef elif isinstance ( self , Range ): target_type = RangeRef else : target_type = Reference return target_type ( id = self . id , label = self . label , type = self . type , thumbnail = thumbnail )","title":"ToReference"},{"location":"code/#iiif_prezi3.helpers.to_reference.ToReference.to_reference","text":"Returns a Reference object that points to the calling object. Source code in iiif_prezi3/helpers/to_reference.py 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 def to_reference ( self ): \"\"\"Returns a Reference object that points to the calling object.\"\"\" # Only try to set thumbnail if it's a Class that can have one if isinstance ( self , ( Collection , Manifest , Canvas , AnnotationPage , Annotation , AnnotationCollection , Range )): thumbnail = self . thumbnail else : thumbnail = None # Currently the skeleton Reference requires a label, but some Referenceable objects may not have one (e.g AnnotationPage) # TODO: Remove this when the Schema is updated to have different reference types if not self . label : self . label = \"\" # Ensure that we use a specific Reference type if it exists if isinstance ( self , Manifest ): target_type = ManifestRef elif isinstance ( self , Collection ): target_type = CollectionRef elif isinstance ( self , Canvas ): target_type = CanvasRef elif isinstance ( self , Range ): target_type = RangeRef else : target_type = Reference return target_type ( id = self . id , label = self . label , type = self . type , thumbnail = thumbnail )","title":"to_reference()"},{"location":"generate-schema/","text":"Generating the Schema Install the datamodl-codegen program which will convert a JSON schema into python code. Either follow the instructions here or run: pip install datamodel-code-generator Then in the iiif-prezi3 code directory run: datamodel-codegen --input ../../iiif/presentation-validator/schema/iiif_3_0.json --input-file-type jsonschema --use-default --base-class base.Base --output skeleton.py Replacing the path to your iiif schema file with where ever you have downloaded the iiif_3_0.json file.","title":"Generating the Schema"},{"location":"generate-schema/#generating-the-schema","text":"Install the datamodl-codegen program which will convert a JSON schema into python code. Either follow the instructions here or run: pip install datamodel-code-generator Then in the iiif-prezi3 code directory run: datamodel-codegen --input ../../iiif/presentation-validator/schema/iiif_3_0.json --input-file-type jsonschema --use-default --base-class base.Base --output skeleton.py Replacing the path to your iiif schema file with where ever you have downloaded the iiif_3_0.json file.","title":"Generating the Schema"},{"location":"getting-started-using-iiifprezi3-without-helpermethods/","text":"Getting started: using iiifprezi3 without helper methods Note iiif-prezi3 offers useful helper methods for adding IIIF resources, it is preferable to use them when possible. For special needs, not addressed by the helper methods, users may take advantage directly of the Python classes generated by datamodel-code-generator . These classes can be used for generating instances of IIIF objects described in the presentation API v.3. In the following lines of code, we will create a manifest and two canvases using directly the pydantic classes: import iiif_prezi3 amanifest = iiif_prezi3 . Manifest ( id = 'http://iiif.example.org/prezi/Manifest/0' , label = { 'en' : [ 'default label' ]}) acanvas = iiif_prezi3 . Canvas ( id = 'http://iiif.example.org/prezi/Manifest/0/canvas/01' , label = { 'en' : [ 'default label' ]}) asecondcanvas = iiif_prezi3 . Canvas ( id = 'http://iiif.example.org/prezi/Manifest/0/canvas/02' , label = { 'en' : [ 'second label' ]}) For constructing nested objects we have to assign to the items property a list containing the valid IIIF objects accepted by the class: amanifest . items = [ acanvas , asecondcanvas ] If we try to set the items property of the manifest items to a string pydantic will rise a ValidationError : amanifest . items = [ \"this shouldn't be here\" ] Warning Be aware that appending to the items list after that the items property has been assigned : amanifest . items . append ( \"this shouldn't be here\" ) will not raise any error regarding the input. print ( amanifest . json ( exclude_unset = True , indent = 2 )) { \"id\": \"http://iiif.example.org/prezi/Manifest/0\", \"type\": \"Manifest\", \"label\": {}, \"items\": [ { \"id\": \"http://iiif.example.org/prezi/Manifest/0/canvas/01\", \"type\": \"Canvas\", \"label\": {} }, { \"id\": \"http://iiif.example.org/prezi/Manifest/0/canvas/02\", \"type\": \"Canvas\", \"label\": {} }, \"this shouldn't be here\" ] } Of course, in most of the use cases, canvases will be created dynamically so a possible approach for constructing the manifest can be the following: canvases = [] for i in range ( 3 ): canvasid = f 'http://iiif.example.org/prezi/CanvasID/ { i } ' aservice = { \"id\" : \"https://example.org/iiif/book1/page2\" , \"type\" : \"ImageService3\" , \"profile\" : \"level2\" } anannotation = iiif_prezi3 . Annotation ( type = 'Annotation' , id = canvasid + '/annotation/0' , target = canvasid ) anannotation . motivation = 'painting' # aresource = Resource(service=[aservice],type='Resource') anannotation . body = iiif_prezi3 . ResourceItem ( service = [ aservice ], id = canvasid + '/annotation/resource' , type = 'Image' ) anannotationpage = iiif_prezi3 . AnnotationPage ( type = 'AnnotationPage' ) anannotationpage . items = [ anannotation ] acanvas . items = [ anannotationpage ] canvases . append ( acanvas ) amanifest . items = canvases Notice that the canvases list is created at the beginning but is assigned to the items property of the manifest only once at the end, in this way pydantic will validate the list. Warning Keep in mind that objects contained in the canvases list are references in the manifest items, hence any modification on the original object will affect the object inside the manifest. This holds true for any object added to the model.","title":"Using iiifprezi3 without helper methods"},{"location":"getting-started-using-iiifprezi3-without-helpermethods/#getting-started-using-iiifprezi3-without-helper-methods","text":"Note iiif-prezi3 offers useful helper methods for adding IIIF resources, it is preferable to use them when possible. For special needs, not addressed by the helper methods, users may take advantage directly of the Python classes generated by datamodel-code-generator . These classes can be used for generating instances of IIIF objects described in the presentation API v.3. In the following lines of code, we will create a manifest and two canvases using directly the pydantic classes: import iiif_prezi3 amanifest = iiif_prezi3 . Manifest ( id = 'http://iiif.example.org/prezi/Manifest/0' , label = { 'en' : [ 'default label' ]}) acanvas = iiif_prezi3 . Canvas ( id = 'http://iiif.example.org/prezi/Manifest/0/canvas/01' , label = { 'en' : [ 'default label' ]}) asecondcanvas = iiif_prezi3 . Canvas ( id = 'http://iiif.example.org/prezi/Manifest/0/canvas/02' , label = { 'en' : [ 'second label' ]}) For constructing nested objects we have to assign to the items property a list containing the valid IIIF objects accepted by the class: amanifest . items = [ acanvas , asecondcanvas ] If we try to set the items property of the manifest items to a string pydantic will rise a ValidationError : amanifest . items = [ \"this shouldn't be here\" ] Warning Be aware that appending to the items list after that the items property has been assigned : amanifest . items . append ( \"this shouldn't be here\" ) will not raise any error regarding the input. print ( amanifest . json ( exclude_unset = True , indent = 2 )) { \"id\": \"http://iiif.example.org/prezi/Manifest/0\", \"type\": \"Manifest\", \"label\": {}, \"items\": [ { \"id\": \"http://iiif.example.org/prezi/Manifest/0/canvas/01\", \"type\": \"Canvas\", \"label\": {} }, { \"id\": \"http://iiif.example.org/prezi/Manifest/0/canvas/02\", \"type\": \"Canvas\", \"label\": {} }, \"this shouldn't be here\" ] } Of course, in most of the use cases, canvases will be created dynamically so a possible approach for constructing the manifest can be the following: canvases = [] for i in range ( 3 ): canvasid = f 'http://iiif.example.org/prezi/CanvasID/ { i } ' aservice = { \"id\" : \"https://example.org/iiif/book1/page2\" , \"type\" : \"ImageService3\" , \"profile\" : \"level2\" } anannotation = iiif_prezi3 . Annotation ( type = 'Annotation' , id = canvasid + '/annotation/0' , target = canvasid ) anannotation . motivation = 'painting' # aresource = Resource(service=[aservice],type='Resource') anannotation . body = iiif_prezi3 . ResourceItem ( service = [ aservice ], id = canvasid + '/annotation/resource' , type = 'Image' ) anannotationpage = iiif_prezi3 . AnnotationPage ( type = 'AnnotationPage' ) anannotationpage . items = [ anannotation ] acanvas . items = [ anannotationpage ] canvases . append ( acanvas ) amanifest . items = canvases Notice that the canvases list is created at the beginning but is assigned to the items property of the manifest only once at the end, in this way pydantic will validate the list. Warning Keep in mind that objects contained in the canvases list are references in the manifest items, hence any modification on the original object will affect the object inside the manifest. This holds true for any object added to the model.","title":"Getting started: using iiifprezi3 without helper methods"},{"location":"write-helper-method/","text":"Helper methods Helper methods in iiif-prezi3 allow functionality for common use cases to be included in the package. Helpers that are general can be loaded and used by the user as required, and those that target specific schema objects (e.g a helper to add a Canvas to a Manifest) are monkeypatched onto the relevant schema class at load time. Location and structure Helper methods should be located in Python files inside the helpers/ directory. Direct helper methods that take schema objects as arguments can be singular functions, whereas those which are designed to add new functions or properties to existing schema classes must themselves be containing inside a class, to enable them to be monkeypatched in correctly. Accessing Schema Objects Relevant schema classes can be loaded from the skeleton.py file in the main iiif-prezi3 package by using a relative import: from ..skeleton import Manifest Monkeypatching onto Schema classes If the helper targets a class from the main IIIF Presentation 3 schema, then it can be monkeypatched onto that class at runtime using the iiif_prezi3.loader.monkeypatch_schema() method. This function takes two arguments: the class to target, and the class(es) containing the helper methods, either as a single object or a list. Add the monkeypatch function call at the end of your helper file, and it will be run when the helper file is imported by the main package (as detailed below). from ..skeleton import Manifest from ..loader import monkeypatch_schema class MyHelper : def helper_function ( self ): return \"I am a Manifest helper\" monkeypatch_schema ( Manifest , MyHelper ) Including helpers in the main package To enable a helper, import it via relative import in the helpers/__init__.py file. This will include the functions directly in the namespace of iiif_prezi3.helpers , which in turn is imported in its entirety by the __init__.py file of the main package. In helpers/__init__.py : from .example_helper import MyHelper Allowing: >>> from iiif_prezi3 import Manifest >>> m = Manifest(id=\"https://example.com/manifest\", type=\"Manifest\", label={\"en\":\"Example Manifest\"}) >>> m.helper_function() 'I am a Manifest helper'","title":"Helper methods"},{"location":"write-helper-method/#helper-methods","text":"Helper methods in iiif-prezi3 allow functionality for common use cases to be included in the package. Helpers that are general can be loaded and used by the user as required, and those that target specific schema objects (e.g a helper to add a Canvas to a Manifest) are monkeypatched onto the relevant schema class at load time.","title":"Helper methods"},{"location":"write-helper-method/#location-and-structure","text":"Helper methods should be located in Python files inside the helpers/ directory. Direct helper methods that take schema objects as arguments can be singular functions, whereas those which are designed to add new functions or properties to existing schema classes must themselves be containing inside a class, to enable them to be monkeypatched in correctly.","title":"Location and structure"},{"location":"write-helper-method/#accessing-schema-objects","text":"Relevant schema classes can be loaded from the skeleton.py file in the main iiif-prezi3 package by using a relative import: from ..skeleton import Manifest","title":"Accessing Schema Objects"},{"location":"write-helper-method/#monkeypatching-onto-schema-classes","text":"If the helper targets a class from the main IIIF Presentation 3 schema, then it can be monkeypatched onto that class at runtime using the iiif_prezi3.loader.monkeypatch_schema() method. This function takes two arguments: the class to target, and the class(es) containing the helper methods, either as a single object or a list. Add the monkeypatch function call at the end of your helper file, and it will be run when the helper file is imported by the main package (as detailed below). from ..skeleton import Manifest from ..loader import monkeypatch_schema class MyHelper : def helper_function ( self ): return \"I am a Manifest helper\" monkeypatch_schema ( Manifest , MyHelper )","title":"Monkeypatching onto Schema classes"},{"location":"write-helper-method/#including-helpers-in-the-main-package","text":"To enable a helper, import it via relative import in the helpers/__init__.py file. This will include the functions directly in the namespace of iiif_prezi3.helpers , which in turn is imported in its entirety by the __init__.py file of the main package. In helpers/__init__.py : from .example_helper import MyHelper Allowing: >>> from iiif_prezi3 import Manifest >>> m = Manifest(id=\"https://example.com/manifest\", type=\"Manifest\", label={\"en\":\"Example Manifest\"}) >>> m.helper_function() 'I am a Manifest helper'","title":"Including helpers in the main package"},{"location":"recipes/","text":"Cookbook Recipes This section of the documentation attempts to provide a \"learn by example\" resource, by reproducing the IIIF Cookbook recipes using the iiif-prezi3 library. Where possible, the helper methods and other conveniences of iiif-prezi3 are leveraged, with secondary examples showing alternate methods of creating the recipe JSON. If you would like to contribute to this section, please see the Cookbook recipe examples issue in the project's GitHub repository.","title":"Introduction"},{"location":"recipes/#cookbook-recipes","text":"This section of the documentation attempts to provide a \"learn by example\" resource, by reproducing the IIIF Cookbook recipes using the iiif-prezi3 library. Where possible, the helper methods and other conveniences of iiif-prezi3 are leveraged, with secondary examples showing alternate methods of creating the recipe JSON. If you would like to contribute to this section, please see the Cookbook recipe examples issue in the project's GitHub repository.","title":"Cookbook Recipes"},{"location":"recipes/0001-mvm-image/","text":"Simplest Manifest - Single Image File Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0001-mvm-image/ JSON-LD: https://iiif.io/api/cookbook/recipe/0001-mvm-image/manifest.json Method 1 - Using the make_canvas and add_image helpers from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/manifest.json\" , label = \"Image 1\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/canvas/p1\" , height = 1800 , width = 1200 ) anno_page = canvas . add_image ( image_url = \"http://iiif.io/api/presentation/2.1/example/fixtures/resources/page1-full.png\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/page/p1/1\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/annotation/p0001-image\" , format = \"image/png\" , height = 1800 , width = 1200 ) print ( manifest . json ( indent = 2 )) Method 2 - Building the structure manually and using the add_item helper from iiif_prezi3 import Manifest , Canvas , AnnotationPage , Annotation , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/manifest.json\" , label = \"Image 1\" ) canvas = Canvas ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/canvas/p1\" , height = 1800 , width = 1200 ) anno_body = ResourceItem ( id = \"http://iiif.io/api/presentation/2.1/example/fixtures/resources/page1-full.png\" , type = \"Image\" , format = \"image/png\" , height = 1800 , width = 1200 ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/page/p1/1\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/annotation/p0001-image\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) manifest . add_item ( canvas ) print ( manifest . json ( indent = 2 ))","title":"Simplest Manifest - Single Image File"},{"location":"recipes/0001-mvm-image/#simplest-manifest-single-image-file","text":"Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0001-mvm-image/ JSON-LD: https://iiif.io/api/cookbook/recipe/0001-mvm-image/manifest.json","title":"Simplest Manifest - Single Image File"},{"location":"recipes/0001-mvm-image/#method-1-using-the-make_canvas-and-add_image-helpers","text":"from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/manifest.json\" , label = \"Image 1\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/canvas/p1\" , height = 1800 , width = 1200 ) anno_page = canvas . add_image ( image_url = \"http://iiif.io/api/presentation/2.1/example/fixtures/resources/page1-full.png\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/page/p1/1\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/annotation/p0001-image\" , format = \"image/png\" , height = 1800 , width = 1200 ) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Using the make_canvas and add_image helpers"},{"location":"recipes/0001-mvm-image/#method-2-building-the-structure-manually-and-using-the-add_item-helper","text":"from iiif_prezi3 import Manifest , Canvas , AnnotationPage , Annotation , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/manifest.json\" , label = \"Image 1\" ) canvas = Canvas ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/canvas/p1\" , height = 1800 , width = 1200 ) anno_body = ResourceItem ( id = \"http://iiif.io/api/presentation/2.1/example/fixtures/resources/page1-full.png\" , type = \"Image\" , format = \"image/png\" , height = 1800 , width = 1200 ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/page/p1/1\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0001-mvm-image/annotation/p0001-image\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) manifest . add_item ( canvas ) print ( manifest . json ( indent = 2 ))","title":"Method 2 - Building the structure manually and using the add_item helper"},{"location":"recipes/0002-mvm-audio/","text":"Simplest Manifest - Audio Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0002-mvm-audio/ JSON-LD: https://iiif.io/api/cookbook/recipe/0002-mvm-audio/manifest.json Method 1 - Building the structure and using the add_item helper from iiif_prezi3 import Manifest , AnnotationPage , Annotation , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0002-mvm-audio/manifest.json\" , label = \"Simplest Audio Example 1\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0002-mvm-audio/canvas\" , duration = 1985.024 ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/audio/indiana/mahler-symphony-3/CD1/medium/128Kbps.mp4\" , type = \"Sound\" , format = \"audio/mp4\" , duration = 1985.024 ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0002-mvm-audio/canvas/page\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0002-mvm-audio/canvas/page/annotation\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) print ( manifest . json ( indent = 2 ))","title":"Simplest Manifest - Audio"},{"location":"recipes/0002-mvm-audio/#simplest-manifest-audio","text":"Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0002-mvm-audio/ JSON-LD: https://iiif.io/api/cookbook/recipe/0002-mvm-audio/manifest.json","title":"Simplest Manifest - Audio"},{"location":"recipes/0002-mvm-audio/#method-1-building-the-structure-and-using-the-add_item-helper","text":"from iiif_prezi3 import Manifest , AnnotationPage , Annotation , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0002-mvm-audio/manifest.json\" , label = \"Simplest Audio Example 1\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0002-mvm-audio/canvas\" , duration = 1985.024 ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/audio/indiana/mahler-symphony-3/CD1/medium/128Kbps.mp4\" , type = \"Sound\" , format = \"audio/mp4\" , duration = 1985.024 ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0002-mvm-audio/canvas/page\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0002-mvm-audio/canvas/page/annotation\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Building the structure and using the add_item helper"},{"location":"recipes/0003-mvm-video/","text":"Simplest Manifest - Video Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0003-mvm-video/ JSON-LD: https://iiif.io/api/cookbook/recipe/0003-mvm-video/manifest.json Method 1 - Building the structure manually and using the add_item helper from iiif_prezi3 import Manifest , AnnotationPage , Annotation , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/manifest.json\" , label = \"Video Example 3\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas\" ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/video/indiana/lunchroom_manners/high/lunchroom_manners_1024kb.mp4\" , type = \"Video\" , format = \"video/mp4\" ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas/page\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas/page/annotation\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) hwd = { \"height\" : 360 , \"width\" : 480 , \"duration\" : 572.034 } anno_body . set_hwd ( ** hwd ) hwd [ \"width\" ] = 640 canvas . set_hwd ( ** hwd ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) print ( manifest . json ( indent = 2 ))","title":"Simplest Manifest - Video"},{"location":"recipes/0003-mvm-video/#simplest-manifest-video","text":"Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0003-mvm-video/ JSON-LD: https://iiif.io/api/cookbook/recipe/0003-mvm-video/manifest.json","title":"Simplest Manifest - Video"},{"location":"recipes/0003-mvm-video/#method-1-building-the-structure-manually-and-using-the-add_item-helper","text":"from iiif_prezi3 import Manifest , AnnotationPage , Annotation , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/manifest.json\" , label = \"Video Example 3\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas\" ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/video/indiana/lunchroom_manners/high/lunchroom_manners_1024kb.mp4\" , type = \"Video\" , format = \"video/mp4\" ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas/page\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0003-mvm-video/canvas/page/annotation\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) hwd = { \"height\" : 360 , \"width\" : 480 , \"duration\" : 572.034 } anno_body . set_hwd ( ** hwd ) hwd [ \"width\" ] = 640 canvas . set_hwd ( ** hwd ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Building the structure manually and using the add_item helper"},{"location":"recipes/0004-canvas-size/","text":"Image and Canvas with Differing Dimensions Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0004-canvas-size/ JSON-LD: https://iiif.io/api/cookbook/recipe/0004-canvas-size/manifest.json Method 1 - Using the set_hwd helper from iiif_prezi3 import Manifest , AnnotationPage , Annotation , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0004-canvas-size/manifest.json\" , label = \"Still image from an opera performance at Indiana University\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0004-canvas-size/canvas/p1\" ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/video/indiana/donizetti-elixir/act1-thumbnail.png\" , type = \"Image\" , format = \"image/png\" ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0004-canvas-size/page/p1/1\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0004-canvas-size/annotation/p0001-image\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) anno_body . set_hwd ( height = 360 , width = 640 ) canvas . set_hwd ( height = 1080 , width = 1920 ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) print ( manifest . json ( indent = 2 ))","title":"Image and Canvas with Differing Dimensions"},{"location":"recipes/0004-canvas-size/#image-and-canvas-with-differing-dimensions","text":"Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0004-canvas-size/ JSON-LD: https://iiif.io/api/cookbook/recipe/0004-canvas-size/manifest.json","title":"Image and Canvas with Differing Dimensions"},{"location":"recipes/0004-canvas-size/#method-1-using-the-set_hwd-helper","text":"from iiif_prezi3 import Manifest , AnnotationPage , Annotation , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0004-canvas-size/manifest.json\" , label = \"Still image from an opera performance at Indiana University\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0004-canvas-size/canvas/p1\" ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/video/indiana/donizetti-elixir/act1-thumbnail.png\" , type = \"Image\" , format = \"image/png\" ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0004-canvas-size/page/p1/1\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0004-canvas-size/annotation/p0001-image\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) anno_body . set_hwd ( height = 360 , width = 640 ) canvas . set_hwd ( height = 1080 , width = 1920 ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Using the set_hwd helper"},{"location":"recipes/0005-image-service/","text":"Support Deep Viewing with Basic Use of a IIIF Image Service Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0005-image-service/ JSON-LD: https://iiif.io/api/cookbook/recipe/0005-image-service/manifest.json Method 1 - Using the make_canvas_from_iiif helper from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0005-image-service/manifest.json\" , label = \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" ) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0005-image-service/canvas/p1\" , label = \"Canvas with a single IIIF image\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0005-image-service/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0005-image-service/page/p1/1\" ) print ( manifest . json ( indent = 2 ))","title":"Support Deep Viewing with Basic Use of a IIIF Image Service"},{"location":"recipes/0005-image-service/#support-deep-viewing-with-basic-use-of-a-iiif-image-service","text":"Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0005-image-service/ JSON-LD: https://iiif.io/api/cookbook/recipe/0005-image-service/manifest.json","title":"Support Deep Viewing with Basic Use of a IIIF Image Service"},{"location":"recipes/0005-image-service/#method-1-using-the-make_canvas_from_iiif-helper","text":"from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0005-image-service/manifest.json\" , label = \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" ) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0005-image-service/canvas/p1\" , label = \"Canvas with a single IIIF image\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0005-image-service/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0005-image-service/page/p1/1\" ) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Using the make_canvas_from_iiif helper"},{"location":"recipes/0006-text-language/","text":"Internationalization and Multi-language Values Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0006-text-language/ JSON-LD: https://iiif.io/api/cookbook/recipe/0006-text-language/manifest.json Method 1 - Construct the language dictionaries during object creation from iiif_prezi3 import Manifest , KeyValueString manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0006-text-language/manifest.json\" , label = { \"en\" : [ \"Whistler's Mother\" ], \"fr\" : [ \"La M\u00e8re de Whistler\" ]}) manifest . metadata = [ KeyValueString ( label = { \"en\" : [ \"Creator\" ], \"fr\" : [ \"Auteur\" ]}, value = \"Whistler, James Abbott McNeill\" ), KeyValueString ( label = { \"en\" : [ \"Subject\" ], \"fr\" : [ \"Sujet\" ]}, value = { \"en\" : [ \"McNeill Anna Matilda, mother of Whistler (1804-1881)\" ], \"fr\" : [ \"McNeill Anna Matilda, m\u00e8re de Whistler (1804-1881)\" ]}) ] manifest . summary = { \"en\" : [ \"Arrangement in Grey and Black No. 1, also called Portrait of the Artist's Mother.\" ], \"fr\" : [ \"Arrangement en gris et noir n\u00b01, also called Portrait de la m\u00e8re de l'artiste.\" ]} manifest . requiredStatement = KeyValueString ( label = { \"en\" : [ \"Held By\" ], \"fr\" : [ \"D\u00e9tenu par\" ]}, value = \"Mus\u00e9e d'Orsay, Paris, France\" ) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/329817fc8a251a01c393f517d8a17d87-Whistlers_Mother\" , id = \"https://iiif.io/api/cookbook/recipe/0006-text-language/canvas/p1\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0006-text-language/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0006-text-language/page/p1/1\" ) print ( manifest . json ( indent = 2 ))","title":"Internationalization and Multi-language Values"},{"location":"recipes/0006-text-language/#internationalization-and-multi-language-values","text":"Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0006-text-language/ JSON-LD: https://iiif.io/api/cookbook/recipe/0006-text-language/manifest.json","title":"Internationalization and Multi-language Values"},{"location":"recipes/0006-text-language/#method-1-construct-the-language-dictionaries-during-object-creation","text":"from iiif_prezi3 import Manifest , KeyValueString manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0006-text-language/manifest.json\" , label = { \"en\" : [ \"Whistler's Mother\" ], \"fr\" : [ \"La M\u00e8re de Whistler\" ]}) manifest . metadata = [ KeyValueString ( label = { \"en\" : [ \"Creator\" ], \"fr\" : [ \"Auteur\" ]}, value = \"Whistler, James Abbott McNeill\" ), KeyValueString ( label = { \"en\" : [ \"Subject\" ], \"fr\" : [ \"Sujet\" ]}, value = { \"en\" : [ \"McNeill Anna Matilda, mother of Whistler (1804-1881)\" ], \"fr\" : [ \"McNeill Anna Matilda, m\u00e8re de Whistler (1804-1881)\" ]}) ] manifest . summary = { \"en\" : [ \"Arrangement in Grey and Black No. 1, also called Portrait of the Artist's Mother.\" ], \"fr\" : [ \"Arrangement en gris et noir n\u00b01, also called Portrait de la m\u00e8re de l'artiste.\" ]} manifest . requiredStatement = KeyValueString ( label = { \"en\" : [ \"Held By\" ], \"fr\" : [ \"D\u00e9tenu par\" ]}, value = \"Mus\u00e9e d'Orsay, Paris, France\" ) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/329817fc8a251a01c393f517d8a17d87-Whistlers_Mother\" , id = \"https://iiif.io/api/cookbook/recipe/0006-text-language/canvas/p1\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0006-text-language/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0006-text-language/page/p1/1\" ) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Construct the language dictionaries during object creation"},{"location":"recipes/0007-string-formats/","text":"Embedding HTML in descriptive properties Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0007-string-formats/ JSON-LD: https://iiif.io/api/cookbook/recipe/0007-string-formats/manifest.json Method 1 - Building the object directly and making use of the AutoLang config from iiif_prezi3 import Manifest , KeyValueString , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0007-string-formats/manifest.json\" , label = \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" , summary = \"<p>Picture taken by the <a href= \\\" https://github.com/glenrobson \\\" >IIIF Technical Coordinator</a></p>\" , rights = \"http://creativecommons.org/licenses/by-sa/3.0/\" , requiredStatement = KeyValueString ( label = \"Attribution\" , value = \"<span>Glen Robson, IIIF Technical Coordinator. <a href= \\\" https://creativecommons.org/licenses/by-sa/3.0 \\\" >CC BY-SA 3.0</a> <img src= \\\" https://licensebuttons.net/l/by-sa/3.0/88x31.png \\\" /></span>\" ), metadata = [ KeyValueString ( label = \"Author\" , value = { \"none\" : [ \"<span><a href='https://github.com/glenrobson'>Glen Robson</a></span>\" ]})]) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0007-string-formats/canvas/p1\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0007-string-formats/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0007-string-formats/page/p1/1\" ) print ( manifest . json ( indent = 2 ))","title":"Embedding HTML in descriptive properties"},{"location":"recipes/0007-string-formats/#embedding-html-in-descriptive-properties","text":"Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0007-string-formats/ JSON-LD: https://iiif.io/api/cookbook/recipe/0007-string-formats/manifest.json","title":"Embedding HTML in descriptive properties"},{"location":"recipes/0007-string-formats/#method-1-building-the-object-directly-and-making-use-of-the-autolang-config","text":"from iiif_prezi3 import Manifest , KeyValueString , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0007-string-formats/manifest.json\" , label = \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" , summary = \"<p>Picture taken by the <a href= \\\" https://github.com/glenrobson \\\" >IIIF Technical Coordinator</a></p>\" , rights = \"http://creativecommons.org/licenses/by-sa/3.0/\" , requiredStatement = KeyValueString ( label = \"Attribution\" , value = \"<span>Glen Robson, IIIF Technical Coordinator. <a href= \\\" https://creativecommons.org/licenses/by-sa/3.0 \\\" >CC BY-SA 3.0</a> <img src= \\\" https://licensebuttons.net/l/by-sa/3.0/88x31.png \\\" /></span>\" ), metadata = [ KeyValueString ( label = \"Author\" , value = { \"none\" : [ \"<span><a href='https://github.com/glenrobson'>Glen Robson</a></span>\" ]})]) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0007-string-formats/canvas/p1\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0007-string-formats/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0007-string-formats/page/p1/1\" ) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Building the object directly and making use of the AutoLang config"},{"location":"recipes/0008-rights/","text":"Rights statement Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0008-rights/ JSON-LD: https://iiif.io/api/cookbook/recipe/0008-rights/manifest.json Method 1 - Building the object directly and making use of the AutoLang config from iiif_prezi3 import Manifest , KeyValueString , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0008-rights/manifest.json\" , label = \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" , summary = \"<p>Picture taken by the <a href= \\\" https://github.com/glenrobson \\\" >IIIF Technical Coordinator</a></p>\" , rights = \"http://creativecommons.org/licenses/by-sa/3.0/\" , requiredStatement = KeyValueString ( label = \"Attribution\" , value = \"<span>Glen Robson, IIIF Technical Coordinator. <a href= \\\" https://creativecommons.org/licenses/by-sa/3.0 \\\" >CC BY-SA 3.0</a> <a href= \\\" https://creativecommons.org/licenses/by-sa/3.0 \\\" title \\\" CC BY-SA 3.0 \\\" ><img src= \\\" https://licensebuttons.net/l/by-sa/3.0/88x31.png \\\" /></a></span>\" ) ) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0008-rights/canvas/p1\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0008-rights/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0008-rights/page/p1/1\" ) print ( manifest . json ( indent = 2 ))","title":"Rights statement"},{"location":"recipes/0008-rights/#rights-statement","text":"Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0008-rights/ JSON-LD: https://iiif.io/api/cookbook/recipe/0008-rights/manifest.json","title":"Rights statement"},{"location":"recipes/0008-rights/#method-1-building-the-object-directly-and-making-use-of-the-autolang-config","text":"from iiif_prezi3 import Manifest , KeyValueString , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0008-rights/manifest.json\" , label = \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" , summary = \"<p>Picture taken by the <a href= \\\" https://github.com/glenrobson \\\" >IIIF Technical Coordinator</a></p>\" , rights = \"http://creativecommons.org/licenses/by-sa/3.0/\" , requiredStatement = KeyValueString ( label = \"Attribution\" , value = \"<span>Glen Robson, IIIF Technical Coordinator. <a href= \\\" https://creativecommons.org/licenses/by-sa/3.0 \\\" >CC BY-SA 3.0</a> <a href= \\\" https://creativecommons.org/licenses/by-sa/3.0 \\\" title \\\" CC BY-SA 3.0 \\\" ><img src= \\\" https://licensebuttons.net/l/by-sa/3.0/88x31.png \\\" /></a></span>\" ) ) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0008-rights/canvas/p1\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0008-rights/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0008-rights/page/p1/1\" ) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Building the object directly and making use of the AutoLang config"},{"location":"recipes/0009-book-1/","text":"Simple Manifest - Book Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0009-book-1/ JSON-LD: https://iiif.io/api/cookbook/recipe/0009-book-1/manifest.json Method 1 - Setting the behavior property during object construction from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/manifest.json\" , label = \"Simple Manifest - Book\" , behavior = [ \"paged\" ]) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f18\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p1\" , label = \"Blank page\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p1/1\" ) canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f19\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p2\" , label = \"Frontispiece\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0002-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p2/1\" ) canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f20\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p3\" , label = \"Title page\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0003-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p3/1\" ) canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f21\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p4\" , label = \"Blank page\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0004-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p4/1\" ) canvas5 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f22\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p5\" , label = \"Bookplate\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0005-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p5/1\" ) print ( manifest . json ( indent = 2 ))","title":"Simple Manifest - Book"},{"location":"recipes/0009-book-1/#simple-manifest-book","text":"Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0009-book-1/ JSON-LD: https://iiif.io/api/cookbook/recipe/0009-book-1/manifest.json","title":"Simple Manifest - Book"},{"location":"recipes/0009-book-1/#method-1-setting-the-behavior-property-during-object-construction","text":"from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/manifest.json\" , label = \"Simple Manifest - Book\" , behavior = [ \"paged\" ]) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f18\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p1\" , label = \"Blank page\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p1/1\" ) canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f19\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p2\" , label = \"Frontispiece\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0002-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p2/1\" ) canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f20\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p3\" , label = \"Title page\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0003-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p3/1\" ) canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f21\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p4\" , label = \"Blank page\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0004-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p4/1\" ) canvas5 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/59d09e6773341f28ea166e9f3c1e674f-gallica_ark_12148_bpt6k1526005v_f22\" , id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/canvas/p5\" , label = \"Bookplate\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/annotation/p0005-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0009-book-1/page/p5/1\" ) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Setting the behavior property during object construction"},{"location":"recipes/0010-book-2-viewing-direction/","text":"Viewing direction and Its Effect on Navigation Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/ JSON-LD Example 1: https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/manifest-rtl.json JSON-LD Example 2: https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/manifest-ttb.json Method 1 - Setting the viewingDirection property during object construction Example 1 from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/manifest-rtl.json\" , label = \"Book with Right-to-Left Viewing Direction\" , summary = \"Playbill for \\\" Akiba gongen kaisen-banashi, \\\" \\\" Futatsu ch\u014dch\u014d kuruwa nikki \\\" and \\\" Godairiki koi no f\u016bjime \\\" performed at the Chikugo Theater in Osaka from the fifth month of Kaei 2 (May, 1849); main actors: Gad\u014d Kataoka II, Ebiz\u014d Ichikawa VI, Kit\u014d Sawamura II, Daigor\u014d Mimasu IV and Karoku Nakamura I; on front cover: producer Mominosuke Ichikawa's crest.\" , viewingDirection = \"right-to-left\" ) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_001\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p1\" , label = \"front cover\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p1/1\" ) canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_002\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p2\" , label = \"pages 1\u20132\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0002-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p2/1\" ) canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_003\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p3\" , label = \"pages 3\u20134\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0003-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p3/1\" ) canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_004\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p4\" , label = \"pages 5\u20136\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0004-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p4/1\" ) canvas5 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_005\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p5\" , label = \"back cover\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0005-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p5/1\" ) print ( manifest . json ( indent = 2 )) Example 2 from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/manifest-ttb.json\" , label = \"Diary with Top-to-Bottom Viewing Direction\" , summary = \"William Lewis Sachtleben was an American long-distance cyclist who rode across Asia from Istanbul to Peking in 1891 to 1892 with Thomas Gaskell Allen Jr., his classmate from Washington University. This was part of a longer journey that began the day after they had graduated from college, when they travelled to New York and on to Liverpool; in all they travelled 15,044 miles by bicycle, 'the longest continuous land journey ever made around the world' as reported in their book <cite>Across Asia on a bicycle</cite> (1895). Sachtleben documented his travels with photographs and diaries, the latter of which he numbered sequentially. The diary of notebook 'No. 10' covers a portion of their journey through the Armenian area of Turkey from April 12 to May 9 (there is a 2-page reading list at the end). During this time they rode from Ankara (Angora in the diary) to Sivas, where they stayed for ten days while Allen had a bout of typhoid fever, and the first half of a ten-day excursion to Merzifon (Mersovan in the diary), taken by Sachtleben to give Allen additional time to recover.\" , viewingDirection = \"top-to-bottom\" ) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/9ee11092dfd2782634f5e8e2c87c16d5-uclamss_1841_diary_07_02\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/v1\" , label = \"image 1\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/v0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/v1/1\" ) canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/9ee11092dfd2782634f5e8e2c87c16d5-uclamss_1841_diary_07_03\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/v2\" , label = \"image 2\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/v0002-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/v2/1\" ) canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/9ee11092dfd2782634f5e8e2c87c16d5-uclamss_1841_diary_07_04\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/v3\" , label = \"image 3\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/v0003-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/v3/1\" ) canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/9ee11092dfd2782634f5e8e2c87c16d5-uclamss_1841_diary_07_05\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/v4\" , label = \"image 4\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/v0004-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/v4/1\" ) print ( manifest . json ( indent = 2 ))","title":"Viewing direction and Its Effect on Navigation"},{"location":"recipes/0010-book-2-viewing-direction/#viewing-direction-and-its-effect-on-navigation","text":"Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/ JSON-LD Example 1: https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/manifest-rtl.json JSON-LD Example 2: https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/manifest-ttb.json","title":"Viewing direction and Its Effect on Navigation"},{"location":"recipes/0010-book-2-viewing-direction/#method-1-setting-the-viewingdirection-property-during-object-construction","text":"","title":"Method 1 - Setting the viewingDirection property during object construction"},{"location":"recipes/0010-book-2-viewing-direction/#example-1","text":"from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/manifest-rtl.json\" , label = \"Book with Right-to-Left Viewing Direction\" , summary = \"Playbill for \\\" Akiba gongen kaisen-banashi, \\\" \\\" Futatsu ch\u014dch\u014d kuruwa nikki \\\" and \\\" Godairiki koi no f\u016bjime \\\" performed at the Chikugo Theater in Osaka from the fifth month of Kaei 2 (May, 1849); main actors: Gad\u014d Kataoka II, Ebiz\u014d Ichikawa VI, Kit\u014d Sawamura II, Daigor\u014d Mimasu IV and Karoku Nakamura I; on front cover: producer Mominosuke Ichikawa's crest.\" , viewingDirection = \"right-to-left\" ) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_001\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p1\" , label = \"front cover\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p1/1\" ) canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_002\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p2\" , label = \"pages 1\u20132\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0002-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p2/1\" ) canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_003\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p3\" , label = \"pages 3\u20134\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0003-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p3/1\" ) canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_004\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p4\" , label = \"pages 5\u20136\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0004-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p4/1\" ) canvas5 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/4f92cceb12dd53b52433425ce44308c7-ucla_bib1987273_no001_rs_005\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/p5\" , label = \"back cover\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/p0005-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/p5/1\" ) print ( manifest . json ( indent = 2 ))","title":"Example 1"},{"location":"recipes/0010-book-2-viewing-direction/#example-2","text":"from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/manifest-ttb.json\" , label = \"Diary with Top-to-Bottom Viewing Direction\" , summary = \"William Lewis Sachtleben was an American long-distance cyclist who rode across Asia from Istanbul to Peking in 1891 to 1892 with Thomas Gaskell Allen Jr., his classmate from Washington University. This was part of a longer journey that began the day after they had graduated from college, when they travelled to New York and on to Liverpool; in all they travelled 15,044 miles by bicycle, 'the longest continuous land journey ever made around the world' as reported in their book <cite>Across Asia on a bicycle</cite> (1895). Sachtleben documented his travels with photographs and diaries, the latter of which he numbered sequentially. The diary of notebook 'No. 10' covers a portion of their journey through the Armenian area of Turkey from April 12 to May 9 (there is a 2-page reading list at the end). During this time they rode from Ankara (Angora in the diary) to Sivas, where they stayed for ten days while Allen had a bout of typhoid fever, and the first half of a ten-day excursion to Merzifon (Mersovan in the diary), taken by Sachtleben to give Allen additional time to recover.\" , viewingDirection = \"top-to-bottom\" ) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/9ee11092dfd2782634f5e8e2c87c16d5-uclamss_1841_diary_07_02\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/v1\" , label = \"image 1\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/v0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/v1/1\" ) canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/9ee11092dfd2782634f5e8e2c87c16d5-uclamss_1841_diary_07_03\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/v2\" , label = \"image 2\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/v0002-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/v2/1\" ) canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/9ee11092dfd2782634f5e8e2c87c16d5-uclamss_1841_diary_07_04\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/v3\" , label = \"image 3\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/v0003-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/v3/1\" ) canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/9ee11092dfd2782634f5e8e2c87c16d5-uclamss_1841_diary_07_05\" , id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/canvas/v4\" , label = \"image 4\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/annotation/v0004-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0010-book-2-viewing-direction/page/v4/1\" ) print ( manifest . json ( indent = 2 ))","title":"Example 2"},{"location":"recipes/0011-book-3-behavior/","text":"Book 'behavior' Variations (continuous, individuals) Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/ JSON-LD Use Case 1: https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/manifest-continuous.json JSON-LD Use Case 2: https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/manifest-individuals.json Method 1 - Setting the behavior property during object construction Use Case 1 from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/manifest-continuous.json\" , label = { \"gez\" : [ \"Ms. 21 M\u0101zemur\u0101 D\u0101wit, Asmat [\u1218\u12dd\u1219\u1228 \u12f3\u12ca\u1275]\" ]}, behavior = [ \"continuous\" ]) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/8c169124171e6b2253b698a22a938f07-21198-zz001hbmd9_1300412_master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/s1\" , label = \"Section 1 [Recto]\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/s0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/s1/1\" ) canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/8c169124171e6b2253b698a22a938f07-21198-zz001hbmft_1300418_master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/s2\" , label = \"Section 2 [Recto]\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/s0002-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/s2/1\" ) canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/8c169124171e6b2253b698a22a938f07-21198-zz001hbmgb_1300426_master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/s3\" , label = \"Section 3 [Recto]\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/s0003-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/s3/1\" ) canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/8c169124171e6b2253b698a22a938f07-21198-zz001hbmhv_1300436_master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/s4\" , label = \"Section 4 [Recto]\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/s0004-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/s4/1\" ) print ( manifest . json ( indent = 2 )) Use Case 2 from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/manifest-individuals.json\" , label = { \"ca\" : [ \"[Conoximent de las orines] Ihesus, Ihesus. En nom de Deu et dela beneyeta sa mare e de tots los angels i archangels e de tots los sants e santes de paradis yo micer Johannes comense aquest libre de reseptes en l\u2019ayn Mi 466.\" ]}, behavior = [ \"individuals\" ]) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/85a96c630f077e6ac6cb984f1b752bbf-0-21198-zz00022840-1-master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/v1\" , label = \"inside cover; 1r\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/v0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/v1/1\" ) canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/85a96c630f077e6ac6cb984f1b752bbf-1-21198-zz00022882-1-master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/v2\" , label = \"2v, 3r\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/v0002-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/v2/1\" ) canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/85a96c630f077e6ac6cb984f1b752bbf-2-21198-zz000228b3-1-master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/v3\" , label = \"3v, 4r\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/v0003-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/v3/1\" ) canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/85a96c630f077e6ac6cb984f1b752bbf-3-21198-zz000228d4-1-master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/v4\" , label = \"4v, 5r\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/v0004-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/v4/1\" ) print ( manifest . json ( indent = 2 ))","title":"Book 'behavior' Variations (continuous, individuals)"},{"location":"recipes/0011-book-3-behavior/#book-behavior-variations-continuous-individuals","text":"Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/ JSON-LD Use Case 1: https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/manifest-continuous.json JSON-LD Use Case 2: https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/manifest-individuals.json","title":"Book 'behavior' Variations (continuous, individuals)"},{"location":"recipes/0011-book-3-behavior/#method-1-setting-the-behavior-property-during-object-construction","text":"","title":"Method 1 - Setting the behavior property during object construction"},{"location":"recipes/0011-book-3-behavior/#use-case-1","text":"from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/manifest-continuous.json\" , label = { \"gez\" : [ \"Ms. 21 M\u0101zemur\u0101 D\u0101wit, Asmat [\u1218\u12dd\u1219\u1228 \u12f3\u12ca\u1275]\" ]}, behavior = [ \"continuous\" ]) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/8c169124171e6b2253b698a22a938f07-21198-zz001hbmd9_1300412_master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/s1\" , label = \"Section 1 [Recto]\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/s0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/s1/1\" ) canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/8c169124171e6b2253b698a22a938f07-21198-zz001hbmft_1300418_master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/s2\" , label = \"Section 2 [Recto]\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/s0002-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/s2/1\" ) canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/8c169124171e6b2253b698a22a938f07-21198-zz001hbmgb_1300426_master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/s3\" , label = \"Section 3 [Recto]\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/s0003-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/s3/1\" ) canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/8c169124171e6b2253b698a22a938f07-21198-zz001hbmhv_1300436_master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/s4\" , label = \"Section 4 [Recto]\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/s0004-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/s4/1\" ) print ( manifest . json ( indent = 2 ))","title":"Use Case 1"},{"location":"recipes/0011-book-3-behavior/#use-case-2","text":"from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/manifest-individuals.json\" , label = { \"ca\" : [ \"[Conoximent de las orines] Ihesus, Ihesus. En nom de Deu et dela beneyeta sa mare e de tots los angels i archangels e de tots los sants e santes de paradis yo micer Johannes comense aquest libre de reseptes en l\u2019ayn Mi 466.\" ]}, behavior = [ \"individuals\" ]) canvas1 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/85a96c630f077e6ac6cb984f1b752bbf-0-21198-zz00022840-1-master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/v1\" , label = \"inside cover; 1r\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/v0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/v1/1\" ) canvas2 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/85a96c630f077e6ac6cb984f1b752bbf-1-21198-zz00022882-1-master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/v2\" , label = \"2v, 3r\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/v0002-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/v2/1\" ) canvas3 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/85a96c630f077e6ac6cb984f1b752bbf-2-21198-zz000228b3-1-master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/v3\" , label = \"3v, 4r\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/v0003-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/v3/1\" ) canvas4 = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/85a96c630f077e6ac6cb984f1b752bbf-3-21198-zz000228d4-1-master\" , id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/canvas/v4\" , label = \"4v, 5r\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/annotation/v0004-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0011-book-3-behavior/page/v4/1\" ) print ( manifest . json ( indent = 2 ))","title":"Use Case 2"},{"location":"recipes/0015-start/","text":"Begin playback at a specific point - Time-based media Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0015-start/ JSON-LD: https://iiif.io/api/cookbook/recipe/0015-start/manifest.json Method 1 - Building the start structure using the SpecificResource class from iiif_prezi3 import Manifest , KeyValueString , ResourceItem , AnnotationPage , Annotation , SpecificResource , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/manifest.json\" , label = \"Video of a 30-minute digital clock\" , rights = \"http://creativecommons.org/licenses/by/3.0/\" , requiredStatement = KeyValueString ( label = \"Attribution\" , value = \"<span>The video was created by <a href='https://www.youtube.com/watch?v=Lsq0FiXjGHg'>DrLex1</a> and was released using a <a href='https://creativecommons.org/licenses/by/3.0/'>Creative Commons Attribution license</a></span>\" ) ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/canvas/segment1\" , duration = 1801.055 ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/video/indiana/30-minute-clock/medium/30-minute-clock.mp4\" , type = \"Video\" , format = \"video/mp4\" , duration = 1801.055 ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/annotation/segment1/page\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/annotation/segment1-video\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) manifest . start = SpecificResource ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/canvas-start/segment1\" , source = canvas . id , selector = { \"type\" : \"PointSelector\" , \"t\" : 120.5 }) print ( manifest . json ( indent = 2 ))","title":"Begin playback at a specific point - Time-based media"},{"location":"recipes/0015-start/#begin-playback-at-a-specific-point-time-based-media","text":"Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0015-start/ JSON-LD: https://iiif.io/api/cookbook/recipe/0015-start/manifest.json","title":"Begin playback at a specific point - Time-based media"},{"location":"recipes/0015-start/#method-1-building-the-start-structure-using-the-specificresource-class","text":"from iiif_prezi3 import Manifest , KeyValueString , ResourceItem , AnnotationPage , Annotation , SpecificResource , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/manifest.json\" , label = \"Video of a 30-minute digital clock\" , rights = \"http://creativecommons.org/licenses/by/3.0/\" , requiredStatement = KeyValueString ( label = \"Attribution\" , value = \"<span>The video was created by <a href='https://www.youtube.com/watch?v=Lsq0FiXjGHg'>DrLex1</a> and was released using a <a href='https://creativecommons.org/licenses/by/3.0/'>Creative Commons Attribution license</a></span>\" ) ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/canvas/segment1\" , duration = 1801.055 ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/video/indiana/30-minute-clock/medium/30-minute-clock.mp4\" , type = \"Video\" , format = \"video/mp4\" , duration = 1801.055 ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/annotation/segment1/page\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/annotation/segment1-video\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) manifest . start = SpecificResource ( id = \"https://iiif.io/api/cookbook/recipe/0015-start/canvas-start/segment1\" , source = canvas . id , selector = { \"type\" : \"PointSelector\" , \"t\" : 120.5 }) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Building the start structure using the SpecificResource class"},{"location":"recipes/0017-transcription-av/","text":"Providing Access to Transcript Files of A/V Content Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0017-transcription-av/ JSON-LD: https://iiif.io/api/cookbook/recipe/0017-transcription-av/manifest.json Method 1 - Building the rendering structure using the ExternalItem class from iiif_prezi3 import Manifest , ExternalItem , ResourceItem , AnnotationPage , Annotation , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0017-transcription-av/manifest.json\" , label = \"Volleyball for Boys\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0017-transcription-av/canvas\" ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/video/indiana/volleyball/high/volleyball-for-boys.mp4\" , type = \"Video\" , format = \"video/mp4\" ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0017-transcription-av/canvas/page\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0017-transcription-av/canvas/page/annotation\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) hwd = { \"height\" : 1080 , \"width\" : 1920 , \"duration\" : 662.037 } anno_body . set_hwd ( ** hwd ) canvas . set_hwd ( ** hwd ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) rendering = ExternalItem ( id = \"https://fixtures.iiif.io/video/indiana/volleyball/volleyball.txt\" , type = \"Text\" , label = \"Transcript\" , format = \"text/txt\" ) canvas . rendering = [ rendering ] print ( manifest . json ( indent = 2 ))","title":"Providing Access to Transcript Files of A/V Content"},{"location":"recipes/0017-transcription-av/#providing-access-to-transcript-files-of-av-content","text":"Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0017-transcription-av/ JSON-LD: https://iiif.io/api/cookbook/recipe/0017-transcription-av/manifest.json","title":"Providing Access to Transcript Files of A/V Content"},{"location":"recipes/0017-transcription-av/#method-1-building-the-rendering-structure-using-the-externalitem-class","text":"from iiif_prezi3 import Manifest , ExternalItem , ResourceItem , AnnotationPage , Annotation , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0017-transcription-av/manifest.json\" , label = \"Volleyball for Boys\" ) canvas = manifest . make_canvas ( id = \"https://iiif.io/api/cookbook/recipe/0017-transcription-av/canvas\" ) anno_body = ResourceItem ( id = \"https://fixtures.iiif.io/video/indiana/volleyball/high/volleyball-for-boys.mp4\" , type = \"Video\" , format = \"video/mp4\" ) anno_page = AnnotationPage ( id = \"https://iiif.io/api/cookbook/recipe/0017-transcription-av/canvas/page\" ) anno = Annotation ( id = \"https://iiif.io/api/cookbook/recipe/0017-transcription-av/canvas/page/annotation\" , motivation = \"painting\" , body = anno_body , target = canvas . id ) hwd = { \"height\" : 1080 , \"width\" : 1920 , \"duration\" : 662.037 } anno_body . set_hwd ( ** hwd ) canvas . set_hwd ( ** hwd ) anno_page . add_item ( anno ) canvas . add_item ( anno_page ) rendering = ExternalItem ( id = \"https://fixtures.iiif.io/video/indiana/volleyball/volleyball.txt\" , type = \"Text\" , label = \"Transcript\" , format = \"text/txt\" ) canvas . rendering = [ rendering ] print ( manifest . json ( indent = 2 ))","title":"Method 1 - Building the rendering structure using the ExternalItem class"},{"location":"recipes/0019-html-in-annotations/","text":"HTML in Annotations Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/ JSON-LD: https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/manifest.json Method 1 - Construct an Annotation using the make_annotation helper and a dictionary of the body properties from iiif_prezi3 import Manifest manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/manifest.json\" , label = { \"en\" : [ \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" ]}) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1/annopage-1/anno-1\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1/annopage-1\" ) anno = canvas . make_annotation ( id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1/annopage-2/anno-1\" , motivation = \"commenting\" , body = { \"type\" : \"TextualBody\" , \"language\" : \"de\" , \"format\" : \"text/html\" , \"value\" : \"<p>G\u00f6ttinger Marktplatz mit <a href='https://de.wikipedia.org/wiki/G%C3%A4nseliesel-Brunnen_(G%C3%B6ttingen)'>G\u00e4nseliesel Brunnen <img src='https://en.wikipedia.org/static/images/project-logos/enwiki.png' alt='Wikipedia logo'></a></p>\" }, target = canvas . id , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1/annopage-2\" ) print ( manifest . json ( indent = 2 ))","title":"HTML in Annotations"},{"location":"recipes/0019-html-in-annotations/#html-in-annotations","text":"Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/ JSON-LD: https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/manifest.json","title":"HTML in Annotations"},{"location":"recipes/0019-html-in-annotations/#method-1-construct-an-annotation-using-the-make_annotation-helper-and-a-dictionary-of-the-body-properties","text":"from iiif_prezi3 import Manifest manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/manifest.json\" , label = { \"en\" : [ \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" ]}) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1/annopage-1/anno-1\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1/annopage-1\" ) anno = canvas . make_annotation ( id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1/annopage-2/anno-1\" , motivation = \"commenting\" , body = { \"type\" : \"TextualBody\" , \"language\" : \"de\" , \"format\" : \"text/html\" , \"value\" : \"<p>G\u00f6ttinger Marktplatz mit <a href='https://de.wikipedia.org/wiki/G%C3%A4nseliesel-Brunnen_(G%C3%B6ttingen)'>G\u00e4nseliesel Brunnen <img src='https://en.wikipedia.org/static/images/project-logos/enwiki.png' alt='Wikipedia logo'></a></p>\" }, target = canvas . id , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0019-html-in-annotations/canvas-1/annopage-2\" ) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Construct an Annotation using the make_annotation helper and a dictionary of the body properties"},{"location":"recipes/0021-tagging/","text":"Simple Annotation \u2014 Tagging Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0021-tagging/ JSON-LD: https://iiif.io/api/cookbook/recipe/0021-tagging/manifest.json Method 1 - Construct an Annotation using the make_annotation helper and a dictionary of the body properties from iiif_prezi3 import Manifest manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/manifest.json\" , label = { \"en\" : [ \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" ]}) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/canvas/p1\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/page/p1/1\" ) anno = canvas . make_annotation ( id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/annotation/p0002-tag\" , motivation = \"tagging\" , body = { \"type\" : \"TextualBody\" , \"language\" : \"de\" , \"format\" : \"text/plain\" , \"value\" : \"G\u00e4nseliesel-Brunnen\" }, target = canvas . id + \"#xywh=265,661,1260,1239\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/page/p2/1\" ) print ( manifest . json ( indent = 2 ))","title":"Simple Annotation \u2014 Tagging"},{"location":"recipes/0021-tagging/#simple-annotation-tagging","text":"Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0021-tagging/ JSON-LD: https://iiif.io/api/cookbook/recipe/0021-tagging/manifest.json","title":"Simple Annotation \u2014 Tagging"},{"location":"recipes/0021-tagging/#method-1-construct-an-annotation-using-the-make_annotation-helper-and-a-dictionary-of-the-body-properties","text":"from iiif_prezi3 import Manifest manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/manifest.json\" , label = { \"en\" : [ \"Picture of G\u00f6ttingen taken during the 2019 IIIF Conference\" ]}) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/918ecd18c2592080851777620de9bcb5-gottingen\" , id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/canvas/p1\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/page/p1/1\" ) anno = canvas . make_annotation ( id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/annotation/p0002-tag\" , motivation = \"tagging\" , body = { \"type\" : \"TextualBody\" , \"language\" : \"de\" , \"format\" : \"text/plain\" , \"value\" : \"G\u00e4nseliesel-Brunnen\" }, target = canvas . id + \"#xywh=265,661,1260,1239\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0021-tagging/page/p2/1\" ) print ( manifest . json ( indent = 2 ))","title":"Method 1 - Construct an Annotation using the make_annotation helper and a dictionary of the body properties"},{"location":"recipes/0230-navdate/","text":"Navigation by Chronology Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0230-navdate/ JSON-LD Example 1 - 1986 Map: https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_2-manifest.json JSON-LD Example 2 - 1987 Map: https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_1-manifest.json JSON-LD Example 3 - Collection: https://iiif.io/api/cookbook/recipe/0230-navdate/navdate-collection.json Method 1 - Setting the navDate property during object construction using a datetime object Example 1 - 1986 Map from iiif_prezi3 import Manifest , config from datetime import datetime , timezone config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" # n.b: You MUST set `tzinfo` as the Prezi3 Specification requires a timezone, and the default `datetime` does not have one. manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_2-manifest.json\" , label = \"1986 Chesapeake and Ohio Canal, Washington, D.C., Maryland, West Virginia, official map and guide\" , navDate = datetime ( 1986 , 1 , 1 , tzinfo = timezone . utc )) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-87691274-1986\" , id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/canvas/p1\" , label = \"1986 Map, recto and verso, with a date of publication\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/page/p1/1\" ) # This is a workaround for an inconsistency in the Cookbook JSON - see https://github.com/IIIF/cookbook-recipes/issues/376 canvas . items [ 0 ] . items [ 0 ] . body . service [ 0 ] . id = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-87691274-1986/\" print ( manifest . json ( indent = 2 )) Example 2 - 1987 Map from iiif_prezi3 import Manifest , config from datetime import datetime , timezone config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" # n.b: You MUST set `tzinfo` as the Prezi3 Specification requires a timezone, and the default `datetime` does not have one. manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_1-manifest.json\" , label = \"1987 Chesapeake and Ohio Canal, Washington, D.C., Maryland, West Virginia, official map and guide\" , navDate = datetime ( 1987 , 1 , 1 , tzinfo = timezone . utc )) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674\" , id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/canvas/p1\" , label = \"1987 Map, recto and verso, with a date of publication\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/page/p1/1\" ) # This is a workaround for an inconsistency in the Cookbook JSON - see https://github.com/IIIF/cookbook-recipes/issues/376 canvas . items [ 0 ] . items [ 0 ] . body . service [ 0 ] . id = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674/\" print ( manifest . json ( indent = 2 )) Example 3 - Collection Here we can make use of the fact that iiif-prezi3 will automatically turn a Manifest into a reference when it is added to a Collection object. from iiif_prezi3 import Collection , Manifest , ResourceItem , config from datetime import datetime , timezone config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" # n.b: You MUST set `tzinfo` as the Prezi3 Specification requires a timezone, and the default `datetime` does not have one. manifest1986 = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_2-manifest.json\" , label = \"1986 Chesapeake and Ohio Canal, Washington, D.C., Maryland, West Virginia, official map and guide\" , navDate = datetime ( 1986 , 1 , 1 , tzinfo = timezone . utc )) canvas1986 = manifest1986 . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-87691274-1986\" , id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/canvas/p1\" , label = \"1986 Map, recto and verso, with a date of publication\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/page/p1/1\" ) manifest1987 = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_1-manifest.json\" , label = \"1987 Chesapeake and Ohio Canal, Washington, D.C., Maryland, West Virginia, official map and guide\" , navDate = datetime ( 1987 , 1 , 1 , tzinfo = timezone . utc )) canvas1987 = manifest1987 . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674\" , id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/canvas/p1\" , label = \"1987 Map, recto and verso, with a date of publication\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/page/p1/1\" ) collection = Collection ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate-collection.json\" , label = \"Chesapeake and Ohio Canal map and guide pamphlets\" ) thumbnail = ResourceItem ( id = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674/full/max/0/default.jpg\" , type = \"Image\" , format = \"image/jpeg\" , height = 300 , width = 221 ) thumbnail . make_service ( id = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674\" , type = \"ImageService3\" , profile = \"level1\" ) collection . thumbnail = [ thumbnail ] collection . add_item ( manifest1986 ) collection . add_item ( manifest1987 ) collection . items [ 0 ] . navDate = manifest1986 . navDate collection . items [ 1 ] . navDate = manifest1987 . navDate print ( collection . json ( indent = 2 )) Method 2 - Setting the navDate property with a string Example 1 - 1986 Map from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_2-manifest.json\" , label = \"1986 Chesapeake and Ohio Canal, Washington, D.C., Maryland, West Virginia, official map and guide\" , navDate = \"1986-01-01T00:00:00Z\" ) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-87691274-1986\" , id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/canvas/p1\" , label = \"1986 Map, recto and verso, with a date of publication\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/page/p1/1\" ) # This is a workaround for an inconsistency in the Cookbook JSON - see https://github.com/IIIF/cookbook-recipes/issues/376 canvas . items [ 0 ] . items [ 0 ] . body . service [ 0 ] . id = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-87691274-1986/\" print ( manifest . json ( indent = 2 )) Example 2 - 1987 Map from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_1-manifest.json\" , label = \"1987 Chesapeake and Ohio Canal, Washington, D.C., Maryland, West Virginia, official map and guide\" , navDate = \"1987-01-01T00:00:00Z\" ) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674\" , id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/canvas/p1\" , label = \"1987 Map, recto and verso, with a date of publication\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/page/p1/1\" ) # This is a workaround for an inconsistency in the Cookbook JSON - see https://github.com/IIIF/cookbook-recipes/issues/376 canvas . items [ 0 ] . items [ 0 ] . body . service [ 0 ] . id = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674/\" print ( manifest . json ( indent = 2 )) Example 3 - Collection To show the different possible approaches, here we will build the Collection object manually using the ManifestRef class. from iiif_prezi3 import Collection , ManifestRef , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" collection = Collection ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate-collection.json\" , label = \"Chesapeake and Ohio Canal map and guide pamphlets\" ) thumbnail = ResourceItem ( id = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674/full/max/0/default.jpg\" , type = \"Image\" , format = \"image/jpeg\" , height = 300 , width = 221 ) thumbnail . make_service ( id = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674\" , type = \"ImageService3\" , profile = \"level1\" ) collection . thumbnail = [ thumbnail ] manifest1986 = ManifestRef ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_2-manifest.json\" , type = \"Manifest\" , label = \"1986 Chesapeake and Ohio Canal, Washington, D.C., Maryland, West Virginia, official map and guide\" , navDate = \"1986-01-01T00:00:00+00:00\" ) manifest1987 = ManifestRef ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_1-manifest.json\" , type = \"Manifest\" , label = \"1987 Chesapeake and Ohio Canal, Washington, D.C., Maryland, West Virginia, official map and guide\" , navDate = \"1987-01-01T00:00:00+00:00\" ) collection . add_item ( manifest1986 ) collection . add_item ( manifest1987 ) print ( collection . json ( indent = 2 ))","title":"Navigation by Chronology"},{"location":"recipes/0230-navdate/#navigation-by-chronology","text":"Cookbook URLs Recipe: https://iiif.io/api/cookbook/recipe/0230-navdate/ JSON-LD Example 1 - 1986 Map: https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_2-manifest.json JSON-LD Example 2 - 1987 Map: https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_1-manifest.json JSON-LD Example 3 - Collection: https://iiif.io/api/cookbook/recipe/0230-navdate/navdate-collection.json","title":"Navigation by Chronology"},{"location":"recipes/0230-navdate/#method-1-setting-the-navdate-property-during-object-construction-using-a-datetime-object","text":"","title":"Method 1 - Setting the navDate property during object construction using a datetime object"},{"location":"recipes/0230-navdate/#example-1-1986-map","text":"from iiif_prezi3 import Manifest , config from datetime import datetime , timezone config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" # n.b: You MUST set `tzinfo` as the Prezi3 Specification requires a timezone, and the default `datetime` does not have one. manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_2-manifest.json\" , label = \"1986 Chesapeake and Ohio Canal, Washington, D.C., Maryland, West Virginia, official map and guide\" , navDate = datetime ( 1986 , 1 , 1 , tzinfo = timezone . utc )) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-87691274-1986\" , id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/canvas/p1\" , label = \"1986 Map, recto and verso, with a date of publication\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/page/p1/1\" ) # This is a workaround for an inconsistency in the Cookbook JSON - see https://github.com/IIIF/cookbook-recipes/issues/376 canvas . items [ 0 ] . items [ 0 ] . body . service [ 0 ] . id = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-87691274-1986/\" print ( manifest . json ( indent = 2 ))","title":"Example 1 - 1986 Map"},{"location":"recipes/0230-navdate/#example-2-1987-map","text":"from iiif_prezi3 import Manifest , config from datetime import datetime , timezone config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" # n.b: You MUST set `tzinfo` as the Prezi3 Specification requires a timezone, and the default `datetime` does not have one. manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_1-manifest.json\" , label = \"1987 Chesapeake and Ohio Canal, Washington, D.C., Maryland, West Virginia, official map and guide\" , navDate = datetime ( 1987 , 1 , 1 , tzinfo = timezone . utc )) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674\" , id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/canvas/p1\" , label = \"1987 Map, recto and verso, with a date of publication\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/page/p1/1\" ) # This is a workaround for an inconsistency in the Cookbook JSON - see https://github.com/IIIF/cookbook-recipes/issues/376 canvas . items [ 0 ] . items [ 0 ] . body . service [ 0 ] . id = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674/\" print ( manifest . json ( indent = 2 ))","title":"Example 2 - 1987 Map"},{"location":"recipes/0230-navdate/#example-3-collection","text":"Here we can make use of the fact that iiif-prezi3 will automatically turn a Manifest into a reference when it is added to a Collection object. from iiif_prezi3 import Collection , Manifest , ResourceItem , config from datetime import datetime , timezone config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" # n.b: You MUST set `tzinfo` as the Prezi3 Specification requires a timezone, and the default `datetime` does not have one. manifest1986 = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_2-manifest.json\" , label = \"1986 Chesapeake and Ohio Canal, Washington, D.C., Maryland, West Virginia, official map and guide\" , navDate = datetime ( 1986 , 1 , 1 , tzinfo = timezone . utc )) canvas1986 = manifest1986 . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-87691274-1986\" , id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/canvas/p1\" , label = \"1986 Map, recto and verso, with a date of publication\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/page/p1/1\" ) manifest1987 = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_1-manifest.json\" , label = \"1987 Chesapeake and Ohio Canal, Washington, D.C., Maryland, West Virginia, official map and guide\" , navDate = datetime ( 1987 , 1 , 1 , tzinfo = timezone . utc )) canvas1987 = manifest1987 . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674\" , id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/canvas/p1\" , label = \"1987 Map, recto and verso, with a date of publication\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/page/p1/1\" ) collection = Collection ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate-collection.json\" , label = \"Chesapeake and Ohio Canal map and guide pamphlets\" ) thumbnail = ResourceItem ( id = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674/full/max/0/default.jpg\" , type = \"Image\" , format = \"image/jpeg\" , height = 300 , width = 221 ) thumbnail . make_service ( id = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674\" , type = \"ImageService3\" , profile = \"level1\" ) collection . thumbnail = [ thumbnail ] collection . add_item ( manifest1986 ) collection . add_item ( manifest1987 ) collection . items [ 0 ] . navDate = manifest1986 . navDate collection . items [ 1 ] . navDate = manifest1987 . navDate print ( collection . json ( indent = 2 ))","title":"Example 3 - Collection"},{"location":"recipes/0230-navdate/#method-2-setting-the-navdate-property-with-a-string","text":"","title":"Method 2 - Setting the navDate property with a string"},{"location":"recipes/0230-navdate/#example-1-1986-map_1","text":"from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_2-manifest.json\" , label = \"1986 Chesapeake and Ohio Canal, Washington, D.C., Maryland, West Virginia, official map and guide\" , navDate = \"1986-01-01T00:00:00Z\" ) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-87691274-1986\" , id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/canvas/p1\" , label = \"1986 Map, recto and verso, with a date of publication\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/page/p1/1\" ) # This is a workaround for an inconsistency in the Cookbook JSON - see https://github.com/IIIF/cookbook-recipes/issues/376 canvas . items [ 0 ] . items [ 0 ] . body . service [ 0 ] . id = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-87691274-1986/\" print ( manifest . json ( indent = 2 ))","title":"Example 1 - 1986 Map"},{"location":"recipes/0230-navdate/#example-2-1987-map_1","text":"from iiif_prezi3 import Manifest , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" manifest = Manifest ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_1-manifest.json\" , label = \"1987 Chesapeake and Ohio Canal, Washington, D.C., Maryland, West Virginia, official map and guide\" , navDate = \"1987-01-01T00:00:00Z\" ) canvas = manifest . make_canvas_from_iiif ( url = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674\" , id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/canvas/p1\" , label = \"1987 Map, recto and verso, with a date of publication\" , anno_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/annotation/p0001-image\" , anno_page_id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/page/p1/1\" ) # This is a workaround for an inconsistency in the Cookbook JSON - see https://github.com/IIIF/cookbook-recipes/issues/376 canvas . items [ 0 ] . items [ 0 ] . body . service [ 0 ] . id = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674/\" print ( manifest . json ( indent = 2 ))","title":"Example 2 - 1987 Map"},{"location":"recipes/0230-navdate/#example-3-collection_1","text":"To show the different possible approaches, here we will build the Collection object manually using the ManifestRef class. from iiif_prezi3 import Collection , ManifestRef , ResourceItem , config config . configs [ 'helpers.auto_fields.AutoLang' ] . auto_lang = \"en\" collection = Collection ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate-collection.json\" , label = \"Chesapeake and Ohio Canal map and guide pamphlets\" ) thumbnail = ResourceItem ( id = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674/full/max/0/default.jpg\" , type = \"Image\" , format = \"image/jpeg\" , height = 300 , width = 221 ) thumbnail . make_service ( id = \"https://iiif.io/api/image/3.0/example/reference/43153e2ec7531f14dd1c9b2fc401678a-88695674\" , type = \"ImageService3\" , profile = \"level1\" ) collection . thumbnail = [ thumbnail ] manifest1986 = ManifestRef ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_2-manifest.json\" , type = \"Manifest\" , label = \"1986 Chesapeake and Ohio Canal, Washington, D.C., Maryland, West Virginia, official map and guide\" , navDate = \"1986-01-01T00:00:00+00:00\" ) manifest1987 = ManifestRef ( id = \"https://iiif.io/api/cookbook/recipe/0230-navdate/navdate_map_1-manifest.json\" , type = \"Manifest\" , label = \"1987 Chesapeake and Ohio Canal, Washington, D.C., Maryland, West Virginia, official map and guide\" , navDate = \"1987-01-01T00:00:00+00:00\" ) collection . add_item ( manifest1986 ) collection . add_item ( manifest1987 ) print ( collection . json ( indent = 2 ))","title":"Example 3 - Collection"}]}